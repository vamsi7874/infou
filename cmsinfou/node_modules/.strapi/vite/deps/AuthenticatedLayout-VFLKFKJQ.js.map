{
  "version": 3,
  "sources": ["../../../@strapi/admin/package.json", "../../../@strapi/admin/admin/src/components/MainNav/MainNav.tsx", "../../../@strapi/admin/admin/src/components/MainNav/NavBrand.tsx", "../../../@strapi/admin/admin/src/components/MainNav/NavLink.tsx", "../../../@strapi/admin/admin/src/components/MainNav/NavUser.tsx", "../../../@strapi/admin/admin/src/components/MainNav/TrialCountdown.tsx", "../../../@strapi/admin/admin/src/components/LeftMenu.tsx", "../../../@strapi/admin/admin/src/components/PluginsInitializer.tsx", "../../../@strapi/admin/admin/src/components/UpsellBanner.tsx", "../../../@strapi/admin/admin/src/hooks/useMenu.ts", "../../../@strapi/admin/admin/src/layouts/AuthenticatedLayout.tsx"],
  "sourcesContent": ["{\r\n  \"name\": \"@strapi/admin\",\r\n  \"version\": \"5.24.2\",\r\n  \"description\": \"Strapi Admin\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/strapi/strapi.git\"\r\n  },\r\n  \"license\": \"SEE LICENSE IN LICENSE\",\r\n  \"author\": {\r\n    \"name\": \"Strapi Solutions SAS\",\r\n    \"email\": \"hi@strapi.io\",\r\n    \"url\": \"https://strapi.io\"\r\n  },\r\n  \"maintainers\": [\r\n    {\r\n      \"name\": \"Strapi Solutions SAS\",\r\n      \"email\": \"hi@strapi.io\",\r\n      \"url\": \"https://strapi.io\"\r\n    }\r\n  ],\r\n  \"exports\": {\r\n    \"./strapi-admin\": {\r\n      \"types\": \"./dist/admin/src/index.d.ts\",\r\n      \"source\": \"./admin/src/index.ts\",\r\n      \"import\": \"./dist/admin/index.mjs\",\r\n      \"require\": \"./dist/admin/index.js\",\r\n      \"default\": \"./dist/admin/index.js\"\r\n    },\r\n    \"./strapi-admin/ee\": {\r\n      \"types\": \"./dist/admin/src/ee.d.ts\",\r\n      \"source\": \"./admin/src/ee.ts\",\r\n      \"import\": \"./dist/admin/ee.mjs\",\r\n      \"require\": \"./dist/admin/ee.js\",\r\n      \"default\": \"./dist/admin/ee.js\"\r\n    },\r\n    \"./strapi-admin/test\": {\r\n      \"types\": \"./dist/admin/tests/index.d.ts\",\r\n      \"source\": \"./admin/tests/index.ts\",\r\n      \"import\": \"./dist/admin/test.mjs\",\r\n      \"require\": \"./dist/admin/test.js\",\r\n      \"default\": \"./dist/admin/test.js\"\r\n    },\r\n    \"./_internal\": {\r\n      \"types\": \"./dist/_internal/index.d.ts\",\r\n      \"source\": \"./_internal/index.ts\",\r\n      \"import\": \"./dist/_internal.mjs\",\r\n      \"require\": \"./dist/_internal.js\",\r\n      \"default\": \"./dist/_internal.js\"\r\n    },\r\n    \"./strapi-server\": {\r\n      \"types\": \"./dist/server/src/index.d.ts\",\r\n      \"source\": \"./server/src/index.js\",\r\n      \"import\": \"./dist/server/index.mjs\",\r\n      \"require\": \"./dist/server/index.js\",\r\n      \"default\": \"./dist/server/index.js\"\r\n    },\r\n    \"./package.json\": \"./package.json\"\r\n  },\r\n  \"files\": [\r\n    \"dist/\"\r\n  ],\r\n  \"scripts\": {\r\n    \"build\": \"run -T npm-run-all clean --parallel build:code build:types\",\r\n    \"build:code\": \"run -T rollup -c\",\r\n    \"build:types\": \"run -T run-p build:types:server build:types:admin build:types:internals\",\r\n    \"build:types:internals\": \"run -T tsc -p tsconfig.build.json --emitDeclarationOnly\",\r\n    \"build:types:server\": \"run -T tsc -p server/tsconfig.build.json --emitDeclarationOnly\",\r\n    \"build:types:admin\": \"run -T tsc -p admin/tsconfig.build.json --emitDeclarationOnly\",\r\n    \"clean\": \"run -T rimraf ./dist\",\r\n    \"lint\": \"run -T eslint .\",\r\n    \"test:front\": \"run -T cross-env IS_EE=true jest --config ./jest.config.front.js\",\r\n    \"test:front:watch\": \"run -T cross-env IS_EE=true jest --config ./jest.config.front.js --watchAll\",\r\n    \"test:ts\": \"run -T tsc -p tsconfig.json\",\r\n    \"test:ts:back\": \"run -T tsc --noEmit -p server/tsconfig.json\",\r\n    \"test:ts:front\": \"run -T tsc -p admin/tsconfig.json && run -T tsc -p ee/admin/tsconfig.json\",\r\n    \"test:unit\": \"run -T jest\",\r\n    \"test:unit:watch\": \"run -T jest --watch\",\r\n    \"watch\": \"run -T rollup -c -w\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@casl/ability\": \"6.5.0\",\r\n    \"@internationalized/date\": \"3.5.4\",\r\n    \"@radix-ui/react-context\": \"1.0.1\",\r\n    \"@radix-ui/react-toolbar\": \"1.0.4\",\r\n    \"@reduxjs/toolkit\": \"1.9.7\",\r\n    \"@strapi/design-system\": \"2.0.0-rc.29\",\r\n    \"@strapi/icons\": \"2.0.0-rc.29\",\r\n    \"@strapi/permissions\": \"5.24.2\",\r\n    \"@strapi/types\": \"5.24.2\",\r\n    \"@strapi/typescript-utils\": \"5.24.2\",\r\n    \"@strapi/utils\": \"5.24.2\",\r\n    \"@testing-library/dom\": \"10.1.0\",\r\n    \"@testing-library/react\": \"15.0.7\",\r\n    \"@testing-library/user-event\": \"14.5.2\",\r\n    \"axios\": \"1.12.2\",\r\n    \"bcryptjs\": \"2.4.3\",\r\n    \"boxen\": \"5.1.2\",\r\n    \"chalk\": \"^4.1.2\",\r\n    \"codemirror5\": \"npm:codemirror@^5.65.11\",\r\n    \"cross-env\": \"^7.0.3\",\r\n    \"date-fns\": \"2.30.0\",\r\n    \"execa\": \"5.1.1\",\r\n    \"fast-deep-equal\": \"3.1.3\",\r\n    \"formik\": \"2.4.5\",\r\n    \"fractional-indexing\": \"3.2.0\",\r\n    \"fs-extra\": \"11.2.0\",\r\n    \"highlight.js\": \"^10.4.1\",\r\n    \"immer\": \"9.0.21\",\r\n    \"inquirer\": \"8.2.5\",\r\n    \"invariant\": \"^2.2.4\",\r\n    \"is-localhost-ip\": \"2.0.0\",\r\n    \"json-logic-js\": \"2.0.5\",\r\n    \"jsonwebtoken\": \"9.0.0\",\r\n    \"koa\": \"2.16.1\",\r\n    \"koa-compose\": \"4.1.0\",\r\n    \"koa-passport\": \"6.0.0\",\r\n    \"koa-static\": \"5.0.0\",\r\n    \"koa2-ratelimit\": \"^1.1.3\",\r\n    \"lodash\": \"4.17.21\",\r\n    \"ora\": \"5.4.1\",\r\n    \"p-map\": \"4.0.0\",\r\n    \"passport-local\": \"1.0.0\",\r\n    \"pluralize\": \"8.0.0\",\r\n    \"punycode\": \"2.3.1\",\r\n    \"qs\": \"6.11.1\",\r\n    \"react-dnd\": \"16.0.1\",\r\n    \"react-dnd-html5-backend\": \"16.0.1\",\r\n    \"react-intl\": \"6.6.2\",\r\n    \"react-is\": \"^18.2.0\",\r\n    \"react-query\": \"3.39.3\",\r\n    \"react-redux\": \"8.1.3\",\r\n    \"react-select\": \"5.8.0\",\r\n    \"react-window\": \"1.8.10\",\r\n    \"rimraf\": \"5.0.5\",\r\n    \"sanitize-html\": \"2.13.0\",\r\n    \"scheduler\": \"0.23.0\",\r\n    \"semver\": \"7.5.4\",\r\n    \"sift\": \"16.0.1\",\r\n    \"typescript\": \"5.4.4\",\r\n    \"use-context-selector\": \"1.4.1\",\r\n    \"yup\": \"0.32.9\",\r\n    \"zod\": \"3.25.67\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@strapi/admin-test-utils\": \"5.24.2\",\r\n    \"@strapi/data-transfer\": \"5.24.2\",\r\n    \"@types/codemirror5\": \"npm:@types/codemirror@^5.60.15\",\r\n    \"@types/fs-extra\": \"11.0.4\",\r\n    \"@types/invariant\": \"2.2.36\",\r\n    \"@types/json-logic-js\": \"2.0.8\",\r\n    \"@types/jsonwebtoken\": \"9.0.3\",\r\n    \"@types/koa-passport\": \"6.0.1\",\r\n    \"@types/lodash\": \"^4.14.191\",\r\n    \"@types/markdown-it\": \"13.0.7\",\r\n    \"@types/markdown-it-container\": \"2.0.9\",\r\n    \"@types/markdown-it-emoji\": \"2.0.4\",\r\n    \"@types/markdown-it-footnote\": \"3.0.3\",\r\n    \"@types/passport-local\": \"1.0.36\",\r\n    \"@types/pluralize\": \"0.0.32\",\r\n    \"@types/punycode\": \"2.1.4\",\r\n    \"@types/react-window\": \"1.8.8\",\r\n    \"@types/sanitize-html\": \"2.13.0\",\r\n    \"@vitejs/plugin-react-swc\": \"3.6.0\",\r\n    \"koa-body\": \"6.0.1\",\r\n    \"msw\": \"1.3.0\",\r\n    \"react\": \"18.3.1\",\r\n    \"react-dom\": \"18.3.1\",\r\n    \"react-router-dom\": \"6.22.3\",\r\n    \"styled-components\": \"6.1.8\",\r\n    \"vite\": \"5.4.19\",\r\n    \"vite-plugin-dts\": \"^4.3.0\"\r\n  },\r\n  \"peerDependencies\": {\r\n    \"@strapi/data-transfer\": \"^5.0.0\",\r\n    \"react\": \"^17.0.0 || ^18.0.0\",\r\n    \"react-dom\": \"^17.0.0 || ^18.0.0\",\r\n    \"react-router-dom\": \"^6.0.0\",\r\n    \"styled-components\": \"^6.0.0\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=18.0.0 <=22.x.x\",\r\n    \"npm\": \">=6.0.0\"\r\n  },\r\n  \"nx\": {\r\n    \"targets\": {\r\n      \"build\": {\r\n        \"outputs\": [\r\n          \"{projectRoot}/build\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import { Flex, FlexComponent, FlexProps } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\nconst MainNavWrapper = styled<FlexComponent<'nav'>>(Flex)`\n  border-right: 1px solid ${({ theme }) => theme.colors.neutral150};\n`;\n\nconst MainNav = (props: FlexProps<'nav'>) => (\n  <MainNavWrapper\n    alignItems=\"normal\"\n    tag=\"nav\"\n    background=\"neutral0\"\n    direction=\"column\"\n    height=\"100vh\"\n    position=\"sticky\"\n    top={0}\n    zIndex={2}\n    width={10}\n    {...props}\n  />\n);\n\nexport { MainNav };\n", "import { Box, Flex, type FlexComponent, VisuallyHidden } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { useConfiguration } from '../../features/Configuration';\n\nconst BrandIconWrapper = styled<FlexComponent>(Flex)`\n  svg,\n  img {\n    border-radius: ${({ theme }) => theme.borderRadius};\n    object-fit: contain;\n    height: 2.4rem;\n    width: 2.4rem;\n  }\n`;\n\nexport const NavBrand = () => {\n  const { formatMessage } = useIntl();\n  const {\n    logos: { menu },\n  } = useConfiguration('LeftMenu');\n  return (\n    <Box padding={3}>\n      <BrandIconWrapper direction=\"column\" justifyContent=\"center\" width=\"3.2rem\" height=\"3.2rem\">\n        <img\n          src={menu.custom?.url || menu.default}\n          alt={formatMessage({\n            id: 'app.components.LeftMenu.logo.alt',\n            defaultMessage: 'Application logo',\n          })}\n          width=\"100%\"\n          height=\"100%\"\n        />\n        <VisuallyHidden>\n          <span>\n            {formatMessage({\n              id: 'app.components.LeftMenu.navbrand.title',\n              defaultMessage: 'Strapi Dashboard',\n            })}\n          </span>\n          <span>\n            {formatMessage({\n              id: 'app.components.LeftMenu.navbrand.workplace',\n              defaultMessage: 'Workplace',\n            })}\n          </span>\n        </VisuallyHidden>\n      </BrandIconWrapper>\n    </Box>\n  );\n};\n", "import * as React from 'react';\n\nimport {\n  Tooltip,\n  TooltipProps as DSTooltipProps,\n  Badge,\n  BadgeProps,\n  AccessibleIcon,\n} from '@strapi/design-system';\nimport { NavLink as RouterLink, LinkProps } from 'react-router-dom';\nimport { styled } from 'styled-components';\n/* -------------------------------------------------------------------------------------------------\n * Link\n * -----------------------------------------------------------------------------------------------*/\nconst MainNavLinkWrapper = styled(RouterLink)`\n  text-decoration: none;\n  display: flex;\n  border-radius: ${({ theme }) => theme.borderRadius};\n  background: ${({ theme }) => theme.colors.neutral0};\n  color: ${({ theme }) => theme.colors.neutral500};\n  position: relative;\n  width: fit-content;\n  padding-block: 0.6rem;\n  padding-inline: 0.6rem;\n\n  &:hover {\n    svg path {\n      fill: ${({ theme }) => theme.colors.neutral600};\n    }\n    background: ${({ theme }) => theme.colors.neutral100};\n  }\n\n  &.active {\n    svg path {\n      fill: ${({ theme }) => theme.colors.primary600};\n    }\n    background: ${({ theme }) => theme.colors.primary100};\n  }\n`;\n\nconst LinkImpl = ({ children, ...props }: LinkProps) => (\n  <MainNavLinkWrapper {...props}>{children}</MainNavLinkWrapper>\n);\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\nconst TooltipImpl = ({ children, label, position = 'right' }: NavLink.TooltipProps) => {\n  return (\n    <Tooltip side={position} label={label} delayDuration={0}>\n      <span>{children}</span>\n    </Tooltip>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Icon\n * -----------------------------------------------------------------------------------------------*/\nconst IconImpl = ({ label, children }: { label: string; children: React.ReactNode }) => {\n  if (!children) {\n    return null;\n  }\n  return <AccessibleIcon label={label}>{children}</AccessibleIcon>;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Badge\n * -----------------------------------------------------------------------------------------------*/\nconst CustomBadge = styled(Badge)`\n  /* override default badge styles to change the border radius of the Base element in the Design System */\n  border-radius: ${({ theme }) => theme.spaces[10]};\n  height: 2rem;\n`;\n\nconst BadgeImpl = ({ children, label, ...props }: NavLink.NavBadgeProps) => {\n  if (!children) {\n    return null;\n  }\n  return (\n    <CustomBadge\n      position=\"absolute\"\n      top=\"-0.8rem\"\n      left=\"1.7rem\"\n      aria-label={label}\n      active={false}\n      {...props}\n    >\n      {children}\n    </CustomBadge>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * EXPORTS\n * -----------------------------------------------------------------------------------------------*/\n\nconst NavLink = {\n  Link: LinkImpl,\n  Tooltip: TooltipImpl,\n  Icon: IconImpl,\n  Badge: BadgeImpl,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace NavLink {\n  export interface NavBadgeProps extends BadgeProps {\n    children: React.ReactNode;\n    label: string;\n  }\n\n  export interface TooltipProps {\n    children: React.ReactNode;\n    label?: string;\n    position?: DSTooltipProps['side'];\n  }\n}\n\nexport { NavLink };\n", "import * as React from 'react';\n\nimport { Flex, Menu, VisuallyHidden, Avatar, Typography, Badge } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { useNavigate } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useAuth } from '../../features/Auth';\n\nconst MenuTrigger = styled(Menu.Trigger)`\n  height: ${({ theme }) => theme.spaces[7]};\n  width: ${({ theme }) => theme.spaces[7]};\n  border: none;\n  border-radius: 50%;\n  padding: 0;\n  overflow: hidden;\n`;\n\nconst MenuContent = styled(Menu.Content)`\n  max-height: fit-content;\n  width: 200px;\n`;\n\nconst UserInfo = styled(Flex)`\n  && {\n    padding: ${({ theme }) => theme.spaces[3]};\n  }\n  align-items: flex-start;\n`;\n\nconst BadgeWrapper = styled(Flex)`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${({ theme }) => theme.spaces[1]};\n\n  width: 100%;\n`;\nconst StyledTypography = styled(Typography)`\n  word-break: break-word;\n  margin-bottom: ${({ theme }) => theme.spaces[3]};\n`;\n\nexport interface NavUserProps {\n  initials: string;\n  children: React.ReactNode;\n}\n\nexport const NavUser = ({ children, initials, ...props }: NavUserProps) => {\n  const { formatMessage } = useIntl();\n  const navigate = useNavigate();\n  const user = useAuth('User', (state) => state.user);\n  const logout = useAuth('Logout', (state) => state.logout);\n\n  const handleProfile = () => {\n    navigate('/me');\n  };\n\n  const handleLogout = () => {\n    logout();\n    navigate('/auth/login');\n  };\n\n  return (\n    <Flex\n      justifyContent=\"center\"\n      padding={3}\n      borderStyle=\"solid\"\n      borderWidth=\"1px 0 0 0\"\n      borderColor=\"neutral150\"\n      {...props}\n    >\n      <Menu.Root>\n        <MenuTrigger endIcon={null} fullWidth justifyContent=\"center\">\n          <Avatar.Item delayMs={0} fallback={initials} />\n          <VisuallyHidden tag=\"span\">{children}</VisuallyHidden>\n        </MenuTrigger>\n\n        <MenuContent popoverPlacement=\"top-start\" zIndex={3}>\n          <UserInfo direction=\"column\" gap={0} alignItems=\"flex-start\">\n            <Typography variant=\"omega\" fontWeight=\"bold\" textTransform=\"none\">\n              {children}\n            </Typography>\n            <StyledTypography variant=\"pi\" textColor=\"neutral600\">\n              {user?.email}\n            </StyledTypography>\n            <BadgeWrapper>\n              {user?.roles?.map((role) => <Badge key={role.id}>{role.name}</Badge>)}\n            </BadgeWrapper>\n          </UserInfo>\n\n          <Menu.Separator />\n\n          <Menu.Item onSelect={handleProfile}>\n            {formatMessage({\n              id: 'global.profile.settings',\n              defaultMessage: 'Profile settings',\n            })}\n          </Menu.Item>\n\n          <Menu.Item variant=\"danger\" onSelect={handleLogout} color=\"danger600\">\n            {formatMessage({\n              id: 'app.components.LeftMenu.logout',\n              defaultMessage: 'Log out',\n            })}\n          </Menu.Item>\n        </MenuContent>\n      </Menu.Root>\n    </Flex>\n  );\n};\n", "import { useLicenseLimits } from '@strapi/admin/strapi-admin/ee';\nimport { Flex, Tooltip } from '@strapi/design-system';\nimport { format, isBefore, startOfToday } from 'date-fns';\nimport { useIntl } from 'react-intl';\nimport { useTheme } from 'styled-components';\n\nimport { useGetLicenseTrialTimeLeftQuery } from '../../../src/services/admin';\n\ntype CircleProgressBarProps = {\n  percentage: number;\n};\n\nconst CircleProgressBar = ({ percentage }: CircleProgressBarProps) => {\n  const theme = useTheme();\n\n  const radius = 45;\n  const circumference = 2 * Math.PI * radius;\n  const offset = circumference * (1 - percentage / 100);\n\n  return (\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 100 100\">\n      <defs>\n        <linearGradient id=\"progressGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stopColor={theme.colors.primary600} />\n          <stop offset=\"100%\" stopColor={theme.colors.alternative600} />\n        </linearGradient>\n      </defs>\n      <circle cx=\"50\" cy=\"50\" r={radius} stroke=\"#ccc\" strokeWidth=\"10\" fill=\"none\" />\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r={radius}\n        stroke=\"url(#progressGradient)\"\n        strokeWidth=\"10\"\n        fill=\"none\"\n        strokeDasharray={circumference}\n        strokeDashoffset={offset}\n        transform=\"rotate(-90 50 50)\"\n        strokeLinecap=\"round\"\n      />\n      <svg x=\"35\" y=\"25\" width=\"50\" height=\"50\" viewBox=\"0 0 32 32\">\n        <path\n          fill=\"url(#progressGradient)\"\n          d=\"m21.731 14.683-14 15a1 1 0 0 1-1.711-.875l1.832-9.167L.65 16.936a1 1 0 0 1-.375-1.625l14-15a1 1 0 0 1 1.71.875l-1.837 9.177 7.204 2.7a1 1 0 0 1 .375 1.62z\"\n        />\n      </svg>\n    </svg>\n  );\n};\n\nconst TrialCountdown = () => {\n  const { formatMessage } = useIntl();\n  const { license, isError, isLoading } = useLicenseLimits();\n\n  const timeLeftData = useGetLicenseTrialTimeLeftQuery(undefined, {\n    skip: !license?.isTrial,\n  });\n\n  if (\n    isError ||\n    isLoading ||\n    !license?.isTrial ||\n    timeLeftData.isLoading ||\n    timeLeftData.isError ||\n    !timeLeftData.data ||\n    !timeLeftData.data.trialEndsAt\n  ) {\n    return null;\n  }\n\n  const targetDate = new Date(timeLeftData.data.trialEndsAt);\n  const now = new Date();\n  const isTargetDateInPast = isBefore(targetDate, startOfToday());\n\n  const millisecondsPerDay = 1000 * 60 * 60 * 24;\n  const timeDifference = targetDate.getTime() - now.getTime();\n\n  const daysLeft =\n    Math.ceil(timeDifference / millisecondsPerDay) <= 0\n      ? 0\n      : Math.ceil(timeDifference / millisecondsPerDay);\n\n  return (\n    <Flex justifyContent=\"center\" padding={3}>\n      <Tooltip\n        label={formatMessage(\n          isTargetDateInPast\n            ? {\n                id: 'app.components.LeftMenu.trialCountdown.endedAt',\n                defaultMessage: 'Your trial ended on {date}',\n              }\n            : {\n                id: 'app.components.LeftMenu.trialCountdown.endsAt',\n                defaultMessage: 'Your trial ends on {date}',\n              },\n          {\n            date: format(new Date(timeLeftData.data.trialEndsAt), 'PPP'),\n          }\n        )}\n        side=\"right\"\n      >\n        <div data-testid=\"trial-countdown\">\n          <CircleProgressBar percentage={((30 - daysLeft) * 100) / 30} />\n        </div>\n      </Tooltip>\n    </Flex>\n  );\n};\n\nexport { TrialCountdown };\n", "import * as React from 'react';\n\nimport { Divider, Flex, FlexComponent, useCollator } from '@strapi/design-system';\nimport { Lightning } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { type To, useLocation } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useAuth } from '../features/Auth';\nimport { useTracking } from '../features/Tracking';\nimport { Menu, MenuItem } from '../hooks/useMenu';\nimport { getDisplayName, getInitials } from '../utils/users';\n\nimport { tours } from './GuidedTour/Tours';\nimport { MainNav } from './MainNav/MainNav';\nimport { NavBrand } from './MainNav/NavBrand';\nimport { NavLink } from './MainNav/NavLink';\nimport { NavUser } from './MainNav/NavUser';\nimport { TrialCountdown } from './MainNav/TrialCountdown';\n\nconst sortLinks = (links: MenuItem[]) => {\n  return links.sort((a, b) => {\n    // if no position is defined, we put the link in the position of the external plugins, before the plugins list\n    const positionA = a.position ?? 6;\n    const positionB = b.position ?? 6;\n\n    if (positionA < positionB) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n};\n\nconst NavLinkBadgeCounter = styled(NavLink.Badge)`\n  span {\n    color: ${({ theme }) => theme.colors.neutral0};\n  }\n`;\n\nconst NavLinkBadgeLock = styled(NavLink.Badge)`\n  background-color: transparent;\n`;\n\nconst NavListWrapper = styled<FlexComponent<'ul'>>(Flex)`\n  overflow-y: auto;\n`;\n\ninterface LeftMenuProps extends Pick<Menu, 'generalSectionLinks' | 'pluginsSectionLinks'> {}\n\nconst GuidedTourTooltip = ({ to, children }: { to: To; children: React.ReactNode }) => {\n  const normalizedTo = to.toString().replace(/\\//g, '');\n\n  switch (normalizedTo) {\n    case 'content-manager':\n      return <tours.contentTypeBuilder.Finish>{children}</tours.contentTypeBuilder.Finish>;\n    case '':\n      return <tours.apiTokens.Finish>{children}</tours.apiTokens.Finish>;\n    case 'settings':\n      return <tours.contentManager.Finish>{children}</tours.contentManager.Finish>;\n    default:\n      return children;\n  }\n};\n\nconst LeftMenu = ({ generalSectionLinks, pluginsSectionLinks }: LeftMenuProps) => {\n  const user = useAuth('AuthenticatedApp', (state) => state.user);\n  const { trackUsage } = useTracking();\n  const { pathname } = useLocation();\n  const userDisplayName = getDisplayName(user);\n  const { formatMessage, locale } = useIntl();\n  const formatter = useCollator(locale, {\n    sensitivity: 'base',\n  });\n\n  const initials = getInitials(user);\n\n  const handleClickOnLink = (destination: string) => {\n    trackUsage('willNavigate', { from: pathname, to: destination });\n  };\n\n  const listLinksAlphabeticallySorted = [...pluginsSectionLinks, ...generalSectionLinks].sort(\n    (a, b) => formatter.compare(formatMessage(a.intlLabel), formatMessage(b.intlLabel))\n  );\n  const listLinks = sortLinks(listLinksAlphabeticallySorted);\n\n  return (\n    <MainNav>\n      <NavBrand />\n\n      <Divider />\n\n      <NavListWrapper tag=\"ul\" gap={3} direction=\"column\" flex={1} paddingTop={3} paddingBottom={3}>\n        {listLinks.length > 0\n          ? listLinks.map((link) => {\n              const LinkIcon = link.icon;\n              const badgeContentLock = link?.licenseOnly ? (\n                <Lightning fill=\"primary600\" />\n              ) : undefined;\n\n              const badgeContentNumeric =\n                link.notificationsCount && link.notificationsCount > 0\n                  ? link.notificationsCount.toString()\n                  : undefined;\n\n              const labelValue = formatMessage(link.intlLabel);\n              return (\n                <Flex tag=\"li\" key={link.to}>\n                  <GuidedTourTooltip to={link.to}>\n                    <NavLink.Tooltip label={labelValue}>\n                      <NavLink.Link\n                        to={link.to}\n                        onClick={() => handleClickOnLink(link.to)}\n                        aria-label={labelValue}\n                      >\n                        <NavLink.Icon label={labelValue}>\n                          <LinkIcon width=\"20\" height=\"20\" fill=\"neutral500\" />\n                        </NavLink.Icon>\n                        {badgeContentLock ? (\n                          <NavLinkBadgeLock\n                            label=\"locked\"\n                            textColor=\"neutral500\"\n                            paddingLeft={0}\n                            paddingRight={0}\n                          >\n                            {badgeContentLock}\n                          </NavLinkBadgeLock>\n                        ) : badgeContentNumeric ? (\n                          <NavLinkBadgeCounter\n                            label={badgeContentNumeric}\n                            backgroundColor=\"primary600\"\n                            width=\"2.3rem\"\n                            color=\"neutral0\"\n                          >\n                            {badgeContentNumeric}\n                          </NavLinkBadgeCounter>\n                        ) : null}\n                      </NavLink.Link>\n                    </NavLink.Tooltip>\n                  </GuidedTourTooltip>\n                </Flex>\n              );\n            })\n          : null}\n      </NavListWrapper>\n      <TrialCountdown />\n      <NavUser initials={initials}>{userDisplayName}</NavUser>\n    </MainNav>\n  );\n};\n\nexport { LeftMenu };\n", "import * as React from 'react';\n\nimport { produce } from 'immer';\n\nimport { Page } from '../components/PageHelpers';\nimport { StrapiAppContextValue, useStrapiApp } from '../features/StrapiApp';\n\n/**\n * TODO: this isn't great, and we really should focus on fixing this.\n */\nconst PluginsInitializer = ({ children }: { children: React.ReactNode }) => {\n  const appPlugins = useStrapiApp('PluginsInitializer', (state) => state.plugins);\n  const [{ plugins }, dispatch] = React.useReducer<React.Reducer<State, Action>, State>(\n    reducer,\n    initialState,\n    () => init(appPlugins)\n  );\n  const setPlugin = React.useRef((pluginId: string) => {\n    dispatch({ type: 'SET_PLUGIN_READY', pluginId });\n  });\n\n  const hasApluginNotReady = Object.keys(plugins).some(\n    (plugin) => plugins[plugin].isReady === false\n  );\n\n  /**\n   *\n   * I have spent some time trying to understand what is happening here, and wanted to\n   * leave that knowledge for my future me:\n   *\n   * `initializer` is an undocumented property of the `registerPlugin` API. At the time\n   * of writing it seems only to be used by the i18n plugin.\n   *\n   * How does it work?\n   *\n   * Every plugin that has an `initializer` component defined, receives the\n   * `setPlugin` function as a component prop. In the case of i18n the plugin fetches locales\n   * first and calls `setPlugin` with `pluginId` once they are loaded, which then triggers the\n   * reducer of the admin app defined above.\n   *\n   * Once all plugins are set to `isReady: true` the app renders.\n   *\n   * This API is used to block rendering of the admin app. We should remove that in v5 completely\n   * and make sure plugins can inject data into the global store before they are initialized, to avoid\n   * having a new prop-callback based communication channel between plugins and the core admin app.\n   *\n   */\n\n  if (hasApluginNotReady) {\n    const initializers = Object.keys(plugins).reduce((acc, current) => {\n      const InitializerComponent = plugins[current].initializer;\n\n      if (InitializerComponent) {\n        const key = plugins[current].pluginId;\n\n        acc.push(<InitializerComponent key={key} setPlugin={setPlugin.current} />);\n      }\n\n      return acc;\n    }, [] as React.ReactNode[]);\n\n    return (\n      <>\n        {initializers}\n        <Page.Loading />\n      </>\n    );\n  }\n\n  return children;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Reducer\n * -----------------------------------------------------------------------------------------------*/\n\ninterface State {\n  plugins: StrapiAppContextValue['plugins'];\n}\n\nconst initialState: State = {\n  plugins: {},\n};\n\ntype SetPluginReadyAction = {\n  type: 'SET_PLUGIN_READY';\n  pluginId: string;\n};\n\ntype Action = SetPluginReadyAction;\n\nconst reducer: React.Reducer<State, Action> = (state = initialState, action: Action): State =>\n  produce(state, (draftState) => {\n    switch (action.type) {\n      case 'SET_PLUGIN_READY': {\n        draftState.plugins[action.pluginId].isReady = true;\n        break;\n      }\n      default:\n        return draftState;\n    }\n  });\n\n/* -------------------------------------------------------------------------------------------------\n * Init state\n * -----------------------------------------------------------------------------------------------*/\n\nconst init = (plugins: State['plugins']): State => {\n  return {\n    plugins,\n  };\n};\n\nexport { PluginsInitializer };\n", "import { useEffect } from 'react';\n\nimport { useLicenseLimits } from '@strapi/admin/strapi-admin/ee';\nimport { Box, Flex, LinkButton, Typography } from '@strapi/design-system';\nimport { isAfter, subDays } from 'date-fns';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { useGetLicenseTrialTimeLeftQuery } from '../../src/services/admin';\nimport { useScopedPersistentState } from '../hooks/usePersistentState';\n\nconst BannerBackground = styled(Flex)`\n  background: linear-gradient(\n    90deg,\n    ${({ theme }) => theme.colors.primary600} 0%,\n    ${({ theme }) => theme.colors.alternative600} 121.48%\n  );\n`;\n\nconst Banner = ({ isTrialEndedRecently }: { isTrialEndedRecently: boolean }) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <BannerBackground width=\"100%\" justifyContent=\"center\">\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        width=\"100%\"\n        paddingTop={2}\n        paddingBottom={2}\n        paddingLeft={10}\n        paddingRight={10}\n        gap={2}\n      >\n        <Box>\n          <Typography\n            variant=\"delta\"\n            fontWeight=\"bold\"\n            textColor=\"neutral0\"\n            textAlign=\"center\"\n            fontSize={2}\n          >\n            {formatMessage(\n              isTrialEndedRecently\n                ? {\n                    id: 'app.components.UpsellBanner.intro.ended',\n                    defaultMessage: 'Your trial has ended: ',\n                  }\n                : {\n                    id: 'app.components.UpsellBanner.intro',\n                    defaultMessage: 'Access to Growth plan features: ',\n                  }\n            )}\n          </Typography>\n          <Typography\n            variant=\"delta\"\n            textColor=\"neutral0\"\n            textAlign=\"center\"\n            paddingRight={4}\n            fontSize={2}\n          >\n            {formatMessage(\n              isTrialEndedRecently\n                ? {\n                    id: 'app.components.UpsellBanner.text.ended',\n                    defaultMessage: 'Keep access to Growth features by upgrading now.',\n                  }\n                : {\n                    id: 'app.components.UpsellBanner.text',\n                    defaultMessage:\n                      'As part of your trial, you can explore premium tools such as Content History, Releases, and Single Sign-On (SSO).',\n                  }\n            )}\n          </Typography>\n        </Box>\n        <Box>\n          <LinkButton\n            width=\"max-content\"\n            variant=\"tertiary\"\n            href=\"https://strapi.chargebeeportal.com\"\n            target=\"_blank\"\n          >\n            {formatMessage(\n              isTrialEndedRecently\n                ? {\n                    id: 'app.components.UpsellBanner.button.ended',\n                    defaultMessage: 'Keep Growth plan',\n                  }\n                : {\n                    id: 'app.components.UpsellBanner.button',\n                    defaultMessage: 'Upgrade now',\n                  }\n            )}\n          </LinkButton>\n        </Box>\n      </Flex>\n    </BannerBackground>\n  );\n};\n\nconst UpsellBanner = () => {\n  const { license } = useLicenseLimits();\n\n  const [cachedTrialEndsAt, setCachedTrialEndsAt] = useScopedPersistentState<string | undefined>(\n    'STRAPI_FREE_TRIAL_ENDS_AT',\n    undefined\n  );\n\n  const sevenDaysAgo = subDays(new Date(), 7);\n\n  const timeLeftData = useGetLicenseTrialTimeLeftQuery(undefined, {\n    skip: !license?.isTrial,\n  });\n\n  useEffect(() => {\n    if (timeLeftData.data?.trialEndsAt) {\n      setCachedTrialEndsAt(timeLeftData.data.trialEndsAt);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeLeftData.data?.trialEndsAt]);\n\n  // When the license is not a trial + not EE, and the cached trial end date is found in the localstorage, that means the trial has ended\n  // We show the banner to encourage the user to upgrade (for 7 days after the trial ends)\n  const isTrialEndedRecently = Boolean(\n    !license?.isTrial &&\n      !window.strapi.isEE &&\n      cachedTrialEndsAt &&\n      isAfter(new Date(cachedTrialEndsAt), sevenDaysAgo)\n  );\n\n  if (timeLeftData.data?.trialEndsAt || isTrialEndedRecently) {\n    return <Banner isTrialEndedRecently={isTrialEndedRecently} />;\n  }\n\n  return null;\n};\n\nexport { UpsellBanner };\n", "import * as React from 'react';\n\nimport { Cog, ShoppingCart, House } from '@strapi/icons';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { useTypedSelector } from '../core/store/hooks';\nimport { useAuth, AuthContextValue } from '../features/Auth';\nimport { StrapiAppContextValue, useStrapiApp } from '../features/StrapiApp';\n\n/* -------------------------------------------------------------------------------------------------\n * useMenu\n * -----------------------------------------------------------------------------------------------*/\n\nexport type MenuItem = Omit<StrapiAppContextValue['menu'][number], 'Component'>;\n\nexport interface Menu {\n  generalSectionLinks: MenuItem[];\n  pluginsSectionLinks: MenuItem[];\n  isLoading: boolean;\n}\n\nconst useMenu = (shouldUpdateStrapi: boolean) => {\n  const checkUserHasPermissions = useAuth('useMenu', (state) => state.checkUserHasPermissions);\n  const menu = useStrapiApp('useMenu', (state) => state.menu);\n  const permissions = useTypedSelector((state) => state.admin_app.permissions);\n  const [menuWithUserPermissions, setMenuWithUserPermissions] = React.useState<Menu>({\n    generalSectionLinks: [\n      {\n        icon: House,\n        intlLabel: {\n          id: 'global.home',\n          defaultMessage: 'Home',\n        },\n        to: '/',\n        permissions: [],\n        position: 0,\n      },\n      {\n        icon: ShoppingCart,\n        intlLabel: {\n          id: 'global.marketplace',\n          defaultMessage: 'Marketplace',\n        },\n        to: '/marketplace',\n        permissions: permissions.marketplace?.main ?? [],\n        position: 7,\n      },\n      {\n        icon: Cog,\n        intlLabel: {\n          id: 'global.settings',\n          defaultMessage: 'Settings',\n        },\n        to: '/settings',\n        // Permissions of this link are retrieved in the init phase\n        // using the settings menu\n        permissions: [],\n        notificationsCount: 0,\n        position: 9,\n      },\n    ],\n    pluginsSectionLinks: [],\n    isLoading: true,\n  });\n  const generalSectionLinksRef = React.useRef(menuWithUserPermissions.generalSectionLinks);\n\n  React.useEffect(() => {\n    async function applyMenuPermissions() {\n      const authorizedPluginSectionLinks = await getPluginSectionLinks(\n        menu,\n        checkUserHasPermissions\n      );\n\n      const authorizedGeneralSectionLinks = await getGeneralLinks(\n        generalSectionLinksRef.current,\n        shouldUpdateStrapi,\n        checkUserHasPermissions\n      );\n\n      setMenuWithUserPermissions((state) => ({\n        ...state,\n        generalSectionLinks: authorizedGeneralSectionLinks,\n        pluginsSectionLinks: authorizedPluginSectionLinks,\n        isLoading: false,\n      }));\n    }\n\n    applyMenuPermissions();\n  }, [\n    setMenuWithUserPermissions,\n    generalSectionLinksRef,\n    menu,\n    permissions,\n    shouldUpdateStrapi,\n    checkUserHasPermissions,\n  ]);\n\n  return menuWithUserPermissions;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\nconst getGeneralLinks = async (\n  generalSectionRawLinks: MenuItem[],\n  shouldUpdateStrapi: boolean = false,\n  checkUserHasPermissions: AuthContextValue['checkUserHasPermissions']\n) => {\n  const generalSectionLinksPermissions = await Promise.all(\n    generalSectionRawLinks.map(({ permissions }) => checkUserHasPermissions(permissions))\n  );\n\n  const authorizedGeneralSectionLinks = generalSectionRawLinks.filter(\n    (_, index) => generalSectionLinksPermissions[index].length > 0\n  );\n\n  const settingsLinkIndex = authorizedGeneralSectionLinks.findIndex(\n    (obj) => obj.to === '/settings'\n  );\n\n  if (settingsLinkIndex === -1) {\n    return [];\n  }\n\n  const authorizedGeneralLinksClone = cloneDeep(authorizedGeneralSectionLinks);\n\n  authorizedGeneralLinksClone[settingsLinkIndex].notificationsCount = shouldUpdateStrapi ? 1 : 0;\n\n  return authorizedGeneralLinksClone;\n};\n\nconst getPluginSectionLinks = async (\n  pluginsSectionRawLinks: MenuItem[],\n  checkUserHasPermissions: AuthContextValue['checkUserHasPermissions']\n) => {\n  const pluginSectionLinksPermissions = await Promise.all(\n    pluginsSectionRawLinks.map(({ permissions }) => checkUserHasPermissions(permissions))\n  );\n\n  const authorizedPluginSectionLinks = pluginsSectionRawLinks.filter(\n    (_, index) => pluginSectionLinksPermissions[index].length > 0\n  );\n\n  return authorizedPluginSectionLinks;\n};\n\nexport { useMenu };\n", "import * as React from 'react';\n\nimport packageInfo from '@strapi/admin/package.json';\nimport { Box, Flex, SkipToContent } from '@strapi/design-system';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { useIntl } from 'react-intl';\nimport { Outlet } from 'react-router-dom';\nimport lt from 'semver/functions/lt';\nimport valid from 'semver/functions/valid';\n\nimport { LeftMenu } from '../components/LeftMenu';\nimport { NpsSurvey } from '../components/NpsSurvey';\nimport { Page } from '../components/PageHelpers';\nimport { PluginsInitializer } from '../components/PluginsInitializer';\nimport { PrivateRoute } from '../components/PrivateRoute';\nimport { UpsellBanner } from '../components/UpsellBanner';\nimport { AppInfoProvider } from '../features/AppInfo';\nimport { useAuth } from '../features/Auth';\nimport { useConfiguration } from '../features/Configuration';\nimport { useStrapiApp } from '../features/StrapiApp';\nimport { useTracking } from '../features/Tracking';\nimport { useMenu } from '../hooks/useMenu';\nimport { useInformationQuery } from '../services/admin';\nimport { hashAdminUserEmail } from '../utils/users';\n\nconst { version: strapiVersion } = packageInfo;\n\nconst AdminLayout = () => {\n  const { formatMessage } = useIntl();\n  const userInfo = useAuth('AuthenticatedApp', (state) => state.user);\n  const [userId, setUserId] = React.useState<string>();\n  const { showReleaseNotification } = useConfiguration('AuthenticatedApp');\n\n  const { data: appInfo, isLoading: isLoadingAppInfo } = useInformationQuery();\n  const [tagName, setTagName] = React.useState<string>(strapiVersion);\n\n  React.useEffect(() => {\n    if (showReleaseNotification) {\n      fetch('https://api.github.com/repos/strapi/strapi/releases/latest')\n        .then(async (res) => {\n          if (!res.ok) {\n            return;\n          }\n\n          const response = (await res.json()) as { tag_name: string | null | undefined };\n\n          if (!response.tag_name) {\n            throw new Error();\n          }\n\n          setTagName(response.tag_name);\n        })\n        .catch(() => {\n          /**\n           * silence is golden & we'll use the strapiVersion as a fallback\n           */\n        });\n    }\n  }, [showReleaseNotification]);\n\n  React.useEffect(() => {\n    hashAdminUserEmail(userInfo).then((id) => {\n      if (id) {\n        setUserId(id);\n      }\n    });\n  }, [userInfo]);\n\n  const { trackUsage } = useTracking();\n\n  const {\n    isLoading: isLoadingMenu,\n    generalSectionLinks,\n    pluginsSectionLinks,\n  } = useMenu(checkLatestStrapiVersion(strapiVersion, tagName));\n\n  const getAllWidgets = useStrapiApp('TrackingProvider', (state) => state.widgets.getAll);\n  const projectId = appInfo?.projectId;\n  React.useEffect(() => {\n    if (projectId) {\n      trackUsage('didAccessAuthenticatedAdministration', {\n        registeredWidgets: getAllWidgets().map((widget) => widget.uid),\n        projectId,\n      });\n    }\n  }, [projectId, getAllWidgets, trackUsage]);\n\n  // We don't need to wait for the release query to be fetched before rendering the plugins\n  // however, we need the appInfos and the permissions\n  if (isLoadingMenu || isLoadingAppInfo) {\n    return <Page.Loading />;\n  }\n\n  return (\n    <AppInfoProvider\n      {...appInfo}\n      userId={userId}\n      latestStrapiReleaseTag={tagName}\n      shouldUpdateStrapi={checkLatestStrapiVersion(strapiVersion, tagName)}\n    >\n      <NpsSurvey />\n      <PluginsInitializer>\n        <DndProvider backend={HTML5Backend}>\n          <Box background=\"neutral100\">\n            <SkipToContent>\n              {formatMessage({ id: 'skipToContent', defaultMessage: 'Skip to content' })}\n            </SkipToContent>\n            <Flex alignItems=\"flex-start\">\n              <LeftMenu\n                generalSectionLinks={generalSectionLinks}\n                pluginsSectionLinks={pluginsSectionLinks}\n              />\n              <Box flex={1}>\n                <UpsellBanner />\n                <Outlet />\n              </Box>\n            </Flex>\n          </Box>\n        </DndProvider>\n      </PluginsInitializer>\n    </AppInfoProvider>\n  );\n};\n\nconst PrivateAdminLayout = () => {\n  return (\n    <PrivateRoute>\n      <AdminLayout />\n    </PrivateRoute>\n  );\n};\n\nconst checkLatestStrapiVersion = (\n  currentPackageVersion: string,\n  latestPublishedVersion: string = ''\n): boolean => {\n  if (!valid(currentPackageVersion) || !valid(latestPublishedVersion)) {\n    return false;\n  }\n\n  return lt(currentPackageVersion, latestPublishedVersion);\n};\n\nexport { AdminLayout, PrivateAdminLayout };\n"],
  "mappings": "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",
  "names": ["MainNavWrapper", "styled", "Flex", "theme", "colors", "neutral150", "MainNav", "props", "_jsx", "alignItems", "tag", "background", "direction", "height", "position", "top", "zIndex", "width", "BrandIconWrapper", "styled", "Flex", "theme", "borderRadius", "NavBrand", "formatMessage", "useIntl", "logos", "menu", "useConfiguration", "_jsx", "Box", "padding", "_jsxs", "direction", "justifyContent", "width", "height", "img", "src", "custom", "url", "default", "alt", "id", "defaultMessage", "VisuallyHidden", "span", "MainNavLinkWrapper", "styled", "RouterLink", "theme", "borderRadius", "colors", "neutral0", "neutral500", "neutral600", "neutral100", "primary600", "primary100", "LinkImpl", "children", "props", "_jsx", "TooltipImpl", "label", "position", "Tooltip", "side", "delayDuration", "span", "IconImpl", "AccessibleIcon", "CustomBadge", "Badge", "spaces", "BadgeImpl", "top", "left", "aria-label", "active", "NavLink", "Link", "Icon", "MenuTrigger", "styled", "Menu", "Trigger", "theme", "spaces", "MenuContent", "Content", "UserInfo", "Flex", "BadgeWrapper", "StyledTypography", "Typography", "NavUser", "children", "initials", "props", "formatMessage", "useIntl", "navigate", "useNavigate", "user", "useAuth", "state", "logout", "handleProfile", "handleLogout", "_jsx", "justifyContent", "padding", "borderStyle", "borderWidth", "borderColor", "_jsxs", "Root", "endIcon", "fullWidth", "Avatar", "Item", "delayMs", "fallback", "VisuallyHidden", "tag", "popoverPlacement", "zIndex", "direction", "gap", "alignItems", "variant", "fontWeight", "textTransform", "textColor", "email", "roles", "map", "role", "Badge", "name", "id", "Separator", "onSelect", "defaultMessage", "color", "CircleProgressBar", "percentage", "theme", "useTheme", "radius", "circumference", "Math", "PI", "offset", "_jsxs", "svg", "width", "height", "viewBox", "_jsx", "defs", "linearGradient", "id", "x1", "y1", "x2", "y2", "stop", "stopColor", "colors", "primary600", "alternative600", "circle", "cx", "cy", "r", "stroke", "strokeWidth", "fill", "strokeDasharray", "strokeDashoffset", "transform", "strokeLinecap", "x", "y", "path", "d", "TrialCountdown", "formatMessage", "useIntl", "license", "isError", "isLoading", "useLicenseLimits", "timeLeftData", "useGetLicenseTrialTimeLeftQuery", "undefined", "skip", "isTrial", "data", "trialEndsAt", "targetDate", "Date", "now", "isTargetDateInPast", "isBefore", "startOfToday", "millisecondsPerDay", "timeDifference", "getTime", "daysLeft", "ceil", "Flex", "justifyContent", "padding", "Tooltip", "label", "defaultMessage", "date", "format", "side", "div", "data-testid", "sortLinks", "links", "sort", "a", "b", "positionA", "position", "positionB", "NavLinkBadgeCounter", "styled", "NavLink", "Badge", "theme", "colors", "neutral0", "NavLinkBadgeLock", "NavListWrapper", "Flex", "GuidedTourTooltip", "to", "children", "normalizedTo", "toString", "replace", "_jsx", "tours", "contentTypeBuilder", "Finish", "apiTokens", "contentManager", "LeftMenu", "generalSectionLinks", "pluginsSectionLinks", "user", "useAuth", "state", "trackUsage", "useTracking", "pathname", "useLocation", "userDisplayName", "getDisplayName", "formatMessage", "locale", "useIntl", "formatter", "useCollator", "sensitivity", "initials", "getInitials", "handleClickOnLink", "destination", "from", "listLinksAlphabeticallySorted", "compare", "intlLabel", "listLinks", "_jsxs", "MainNav", "NavBrand", "Divider", "tag", "gap", "direction", "flex", "paddingTop", "paddingBottom", "length", "map", "link", "LinkIcon", "icon", "badgeContentLock", "licenseOnly", "Lightning", "fill", "undefined", "badgeContentNumeric", "notificationsCount", "labelValue", "Tooltip", "label", "Link", "onClick", "aria-label", "Icon", "width", "height", "textColor", "paddingLeft", "paddingRight", "backgroundColor", "color", "TrialCountdown", "NavUser", "PluginsInitializer", "children", "appPlugins", "useStrapiApp", "state", "plugins", "dispatch", "useReducer", "reducer", "initialState", "init", "setPlugin", "useRef", "pluginId", "type", "hasApluginNotReady", "Object", "keys", "some", "plugin", "isReady", "initializers", "reduce", "acc", "current", "InitializerComponent", "initializer", "key", "push", "_jsx", "_jsxs", "_Fragment", "Page", "Loading", "action", "produce", "draftState", "BannerBackground", "styled", "Flex", "theme", "colors", "primary600", "alternative600", "Banner", "isTrialEndedRecently", "formatMessage", "useIntl", "_jsx", "width", "justifyContent", "_jsxs", "alignItems", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "gap", "Box", "Typography", "variant", "fontWeight", "textColor", "textAlign", "fontSize", "id", "defaultMessage", "LinkButton", "href", "target", "UpsellBanner", "license", "useLicenseLimits", "cachedTrialEndsAt", "setCachedTrialEndsAt", "useScopedPersistentState", "undefined", "sevenDaysAgo", "subDays", "Date", "timeLeftData", "useGetLicenseTrialTimeLeftQuery", "skip", "isTrial", "useEffect", "data", "trialEndsAt", "Boolean", "window", "strapi", "isEE", "isAfter", "useMenu", "shouldUpdateStrapi", "checkUserHasPermissions", "useAuth", "state", "menu", "useStrapiApp", "permissions", "useTypedSelector", "admin_app", "menuWithUserPermissions", "setMenuWithUserPermissions", "useState", "generalSectionLinks", "icon", "House", "intlLabel", "id", "defaultMessage", "to", "position", "ShoppingCart", "marketplace", "main", "Cog", "notificationsCount", "pluginsSectionLinks", "isLoading", "generalSectionLinksRef", "useRef", "React", "useEffect", "applyMenuPermissions", "authorizedPluginSectionLinks", "getPluginSectionLinks", "authorizedGeneralSectionLinks", "getGeneralLinks", "current", "generalSectionRawLinks", "generalSectionLinksPermissions", "Promise", "all", "map", "filter", "_", "index", "length", "settingsLinkIndex", "findIndex", "obj", "authorizedGeneralLinksClone", "cloneDeep", "pluginsSectionRawLinks", "pluginSectionLinksPermissions", "version", "strapiVersion", "packageInfo", "AdminLayout", "formatMessage", "useIntl", "userInfo", "useAuth", "state", "user", "userId", "setUserId", "useState", "showReleaseNotification", "useConfiguration", "data", "appInfo", "isLoading", "isLoadingAppInfo", "useInformationQuery", "tagName", "setTagName", "React", "useEffect", "fetch", "then", "res", "ok", "response", "json", "tag_name", "Error", "catch", "hashAdminUserEmail", "id", "trackUsage", "useTracking", "isLoadingMenu", "generalSectionLinks", "pluginsSectionLinks", "useMenu", "checkLatestStrapiVersion", "getAllWidgets", "useStrapiApp", "widgets", "getAll", "projectId", "registeredWidgets", "map", "widget", "uid", "_jsx", "Page", "Loading", "_jsxs", "AppInfoProvider", "latestStrapiReleaseTag", "shouldUpdateStrapi", "NpsSurvey", "PluginsInitializer", "DndProvider", "backend", "HTML5Backend", "Box", "background", "SkipToContent", "defaultMessage", "Flex", "alignItems", "LeftMenu", "flex", "UpsellBanner", "Outlet", "PrivateAdminLayout", "PrivateRoute", "currentPackageVersion", "latestPublishedVersion", "valid", "lt"]
}
