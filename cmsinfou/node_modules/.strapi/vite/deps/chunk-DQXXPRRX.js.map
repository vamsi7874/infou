{
  "version": 3,
  "sources": ["../../../lodash.deburr/index.js", "../../../@sindresorhus/transliterate/node_modules/escape-string-regexp/index.js", "../../../@sindresorhus/transliterate/replacements.js", "../../../@sindresorhus/transliterate/index.js", "../../../@sindresorhus/slugify/overridable-replacements.js", "../../../@sindresorhus/slugify/index.js", "../../../@strapi/content-type-builder/admin/src/constants.ts", "../../../@strapi/content-type-builder/admin/src/components/AutoReloadOverlayBlocker.tsx", "../../../@strapi/content-type-builder/admin/src/utils/makeUnique.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManager/undoRedo.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManager/utils/formatSchemas.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManager/reducer.ts", "../../../@strapi/content-type-builder/admin/src/utils/nameToSlug.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/createUid.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/customFieldDefaultOptionsReducer.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/relations.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/reducer.ts"],
  "sourcesContent": ["/**\r\n * lodash (Custom Build) <https://lodash.com/>\r\n * Build: `lodash modularize exports=\"npm\" -o ./`\r\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\r\n * Released under MIT license <https://lodash.com/license>\r\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\r\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n */\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0;\r\n\r\n/** `Object#toString` result references. */\r\nvar symbolTag = '[object Symbol]';\r\n\r\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\r\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\r\n\r\n/** Used to compose unicode character classes. */\r\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\r\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\r\n\r\n/** Used to compose unicode capture groups. */\r\nvar rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\r\n\r\n/**\r\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\r\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\r\n */\r\nvar reComboMark = RegExp(rsCombo, 'g');\r\n\r\n/** Used to map Latin Unicode letters to basic Latin letters. */\r\nvar deburredLetters = {\r\n  // Latin-1 Supplement block.\r\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\r\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\r\n  '\\xc7': 'C',  '\\xe7': 'c',\r\n  '\\xd0': 'D',  '\\xf0': 'd',\r\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\r\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\r\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\r\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\r\n  '\\xd1': 'N',  '\\xf1': 'n',\r\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\r\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\r\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\r\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\r\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\r\n  '\\xc6': 'Ae', '\\xe6': 'ae',\r\n  '\\xde': 'Th', '\\xfe': 'th',\r\n  '\\xdf': 'ss',\r\n  // Latin Extended-A block.\r\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\r\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\r\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\r\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\r\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\r\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\r\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\r\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\r\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\r\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\r\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\r\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\r\n  '\\u0134': 'J',  '\\u0135': 'j',\r\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\r\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\r\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\r\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\r\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\r\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\r\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\r\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\r\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\r\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\r\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\r\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\r\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\r\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\r\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\r\n  '\\u0174': 'W',  '\\u0175': 'w',\r\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\r\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\r\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\r\n  '\\u0132': 'IJ', '\\u0133': 'ij',\r\n  '\\u0152': 'Oe', '\\u0153': 'oe',\r\n  '\\u0149': \"'n\", '\\u017f': 'ss'\r\n};\r\n\r\n/** Detect free variable `global` from Node.js. */\r\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\r\n\r\n/** Detect free variable `self`. */\r\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\r\n\r\n/** Used as a reference to the global object. */\r\nvar root = freeGlobal || freeSelf || Function('return this')();\r\n\r\n/**\r\n * The base implementation of `_.propertyOf` without support for deep paths.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Function} Returns the new accessor function.\r\n */\r\nfunction basePropertyOf(object) {\r\n  return function(key) {\r\n    return object == null ? undefined : object[key];\r\n  };\r\n}\r\n\r\n/**\r\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\r\n * letters to basic Latin letters.\r\n *\r\n * @private\r\n * @param {string} letter The matched letter to deburr.\r\n * @returns {string} Returns the deburred letter.\r\n */\r\nvar deburrLetter = basePropertyOf(deburredLetters);\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar objectToString = objectProto.toString;\r\n\r\n/** Built-in value references. */\r\nvar Symbol = root.Symbol;\r\n\r\n/** Used to convert symbols to primitives and strings. */\r\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\r\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\r\n\r\n/**\r\n * The base implementation of `_.toString` which doesn't convert nullish\r\n * values to empty strings.\r\n *\r\n * @private\r\n * @param {*} value The value to process.\r\n * @returns {string} Returns the string.\r\n */\r\nfunction baseToString(value) {\r\n  // Exit early for strings to avoid a performance hit in some environments.\r\n  if (typeof value == 'string') {\r\n    return value;\r\n  }\r\n  if (isSymbol(value)) {\r\n    return symbolToString ? symbolToString.call(value) : '';\r\n  }\r\n  var result = (value + '');\r\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\r\n}\r\n\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nfunction isObjectLike(value) {\r\n  return !!value && typeof value == 'object';\r\n}\r\n\r\n/**\r\n * Checks if `value` is classified as a `Symbol` primitive or object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n * @example\r\n *\r\n * _.isSymbol(Symbol.iterator);\r\n * // => true\r\n *\r\n * _.isSymbol('abc');\r\n * // => false\r\n */\r\nfunction isSymbol(value) {\r\n  return typeof value == 'symbol' ||\r\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n}\r\n\r\n/**\r\n * Converts `value` to a string. An empty string is returned for `null`\r\n * and `undefined` values. The sign of `-0` is preserved.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to process.\r\n * @returns {string} Returns the string.\r\n * @example\r\n *\r\n * _.toString(null);\r\n * // => ''\r\n *\r\n * _.toString(-0);\r\n * // => '-0'\r\n *\r\n * _.toString([1, 2, 3]);\r\n * // => '1,2,3'\r\n */\r\nfunction toString(value) {\r\n  return value == null ? '' : baseToString(value);\r\n}\r\n\r\n/**\r\n * Deburrs `string` by converting\r\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\r\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\r\n * letters to basic Latin letters and removing\r\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to deburr.\r\n * @returns {string} Returns the deburred string.\r\n * @example\r\n *\r\n * _.deburr('déjà vu');\r\n * // => 'deja vu'\r\n */\r\nfunction deburr(string) {\r\n  string = toString(string);\r\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\r\n}\r\n\r\nmodule.exports = deburr;\r\n", "'use strict';\r\n\r\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\r\n\r\nmodule.exports = string => {\r\n\tif (typeof string !== 'string') {\r\n\t\tthrow new TypeError('Expected a string');\r\n\t}\r\n\r\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\r\n};\r\n", "'use strict';\r\n\r\nmodule.exports = [\r\n\t// German umlauts\r\n\t['ß', 'ss'],\r\n\t['ä', 'ae'],\r\n\t['Ä', 'Ae'],\r\n\t['ö', 'oe'],\r\n\t['Ö', 'Oe'],\r\n\t['ü', 'ue'],\r\n\t['Ü', 'Ue'],\r\n\r\n\t// Latin\r\n\t['À', 'A'],\r\n\t['Á', 'A'],\r\n\t['Â', 'A'],\r\n\t['Ã', 'A'],\r\n\t['Ä', 'Ae'],\r\n\t['Å', 'A'],\r\n\t['Æ', 'AE'],\r\n\t['Ç', 'C'],\r\n\t['È', 'E'],\r\n\t['É', 'E'],\r\n\t['Ê', 'E'],\r\n\t['Ë', 'E'],\r\n\t['Ì', 'I'],\r\n\t['Í', 'I'],\r\n\t['Î', 'I'],\r\n\t['Ï', 'I'],\r\n\t['Ð', 'D'],\r\n\t['Ñ', 'N'],\r\n\t['Ò', 'O'],\r\n\t['Ó', 'O'],\r\n\t['Ô', 'O'],\r\n\t['Õ', 'O'],\r\n\t['Ö', 'Oe'],\r\n\t['Ő', 'O'],\r\n\t['Ø', 'O'],\r\n\t['Ù', 'U'],\r\n\t['Ú', 'U'],\r\n\t['Û', 'U'],\r\n\t['Ü', 'Ue'],\r\n\t['Ű', 'U'],\r\n\t['Ý', 'Y'],\r\n\t['Þ', 'TH'],\r\n\t['ß', 'ss'],\r\n\t['à', 'a'],\r\n\t['á', 'a'],\r\n\t['â', 'a'],\r\n\t['ã', 'a'],\r\n\t['ä', 'ae'],\r\n\t['å', 'a'],\r\n\t['æ', 'ae'],\r\n\t['ç', 'c'],\r\n\t['è', 'e'],\r\n\t['é', 'e'],\r\n\t['ê', 'e'],\r\n\t['ë', 'e'],\r\n\t['ì', 'i'],\r\n\t['í', 'i'],\r\n\t['î', 'i'],\r\n\t['ï', 'i'],\r\n\t['ð', 'd'],\r\n\t['ñ', 'n'],\r\n\t['ò', 'o'],\r\n\t['ó', 'o'],\r\n\t['ô', 'o'],\r\n\t['õ', 'o'],\r\n\t['ö', 'oe'],\r\n\t['ő', 'o'],\r\n\t['ø', 'o'],\r\n\t['ù', 'u'],\r\n\t['ú', 'u'],\r\n\t['û', 'u'],\r\n\t['ü', 'ue'],\r\n\t['ű', 'u'],\r\n\t['ý', 'y'],\r\n\t['þ', 'th'],\r\n\t['ÿ', 'y'],\r\n\t['ẞ', 'SS'],\r\n\r\n\t// Vietnamese\r\n\t['à', 'a'],\r\n\t['À', 'A'],\r\n\t['á', 'a'],\r\n\t['Á', 'A'],\r\n\t['â', 'a'],\r\n\t['Â', 'A'],\r\n\t['ã', 'a'],\r\n\t['Ã', 'A'],\r\n\t['è', 'e'],\r\n\t['È', 'E'],\r\n\t['é', 'e'],\r\n\t['É', 'E'],\r\n\t['ê', 'e'],\r\n\t['Ê', 'E'],\r\n\t['ì', 'i'],\r\n\t['Ì', 'I'],\r\n\t['í', 'i'],\r\n\t['Í', 'I'],\r\n\t['ò', 'o'],\r\n\t['Ò', 'O'],\r\n\t['ó', 'o'],\r\n\t['Ó', 'O'],\r\n\t['ô', 'o'],\r\n\t['Ô', 'O'],\r\n\t['õ', 'o'],\r\n\t['Õ', 'O'],\r\n\t['ù', 'u'],\r\n\t['Ù', 'U'],\r\n\t['ú', 'u'],\r\n\t['Ú', 'U'],\r\n\t['ý', 'y'],\r\n\t['Ý', 'Y'],\r\n\t['ă', 'a'],\r\n\t['Ă', 'A'],\r\n\t['Đ', 'D'],\r\n\t['đ', 'd'],\r\n\t['ĩ', 'i'],\r\n\t['Ĩ', 'I'],\r\n\t['ũ', 'u'],\r\n\t['Ũ', 'U'],\r\n\t['ơ', 'o'],\r\n\t['Ơ', 'O'],\r\n\t['ư', 'u'],\r\n\t['Ư', 'U'],\r\n\t['ạ', 'a'],\r\n\t['Ạ', 'A'],\r\n\t['ả', 'a'],\r\n\t['Ả', 'A'],\r\n\t['ấ', 'a'],\r\n\t['Ấ', 'A'],\r\n\t['ầ', 'a'],\r\n\t['Ầ', 'A'],\r\n\t['ẩ', 'a'],\r\n\t['Ẩ', 'A'],\r\n\t['ẫ', 'a'],\r\n\t['Ẫ', 'A'],\r\n\t['ậ', 'a'],\r\n\t['Ậ', 'A'],\r\n\t['ắ', 'a'],\r\n\t['Ắ', 'A'],\r\n\t['ằ', 'a'],\r\n\t['Ằ', 'A'],\r\n\t['ẳ', 'a'],\r\n\t['Ẳ', 'A'],\r\n\t['ẵ', 'a'],\r\n\t['Ẵ', 'A'],\r\n\t['ặ', 'a'],\r\n\t['Ặ', 'A'],\r\n\t['ẹ', 'e'],\r\n\t['Ẹ', 'E'],\r\n\t['ẻ', 'e'],\r\n\t['Ẻ', 'E'],\r\n\t['ẽ', 'e'],\r\n\t['Ẽ', 'E'],\r\n\t['ế', 'e'],\r\n\t['Ế', 'E'],\r\n\t['ề', 'e'],\r\n\t['Ề', 'E'],\r\n\t['ể', 'e'],\r\n\t['Ể', 'E'],\r\n\t['ễ', 'e'],\r\n\t['Ễ', 'E'],\r\n\t['ệ', 'e'],\r\n\t['Ệ', 'E'],\r\n\t['ỉ', 'i'],\r\n\t['Ỉ', 'I'],\r\n\t['ị', 'i'],\r\n\t['Ị', 'I'],\r\n\t['ọ', 'o'],\r\n\t['Ọ', 'O'],\r\n\t['ỏ', 'o'],\r\n\t['Ỏ', 'O'],\r\n\t['ố', 'o'],\r\n\t['Ố', 'O'],\r\n\t['ồ', 'o'],\r\n\t['Ồ', 'O'],\r\n\t['ổ', 'o'],\r\n\t['Ổ', 'O'],\r\n\t['ỗ', 'o'],\r\n\t['Ỗ', 'O'],\r\n\t['ộ', 'o'],\r\n\t['Ộ', 'O'],\r\n\t['ớ', 'o'],\r\n\t['Ớ', 'O'],\r\n\t['ờ', 'o'],\r\n\t['Ờ', 'O'],\r\n\t['ở', 'o'],\r\n\t['Ở', 'O'],\r\n\t['ỡ', 'o'],\r\n\t['Ỡ', 'O'],\r\n\t['ợ', 'o'],\r\n\t['Ợ', 'O'],\r\n\t['ụ', 'u'],\r\n\t['Ụ', 'U'],\r\n\t['ủ', 'u'],\r\n\t['Ủ', 'U'],\r\n\t['ứ', 'u'],\r\n\t['Ứ', 'U'],\r\n\t['ừ', 'u'],\r\n\t['Ừ', 'U'],\r\n\t['ử', 'u'],\r\n\t['Ử', 'U'],\r\n\t['ữ', 'u'],\r\n\t['Ữ', 'U'],\r\n\t['ự', 'u'],\r\n\t['Ự', 'U'],\r\n\t['ỳ', 'y'],\r\n\t['Ỳ', 'Y'],\r\n\t['ỵ', 'y'],\r\n\t['Ỵ', 'Y'],\r\n\t['ỷ', 'y'],\r\n\t['Ỷ', 'Y'],\r\n\t['ỹ', 'y'],\r\n\t['Ỹ', 'Y'],\r\n\r\n\t// Arabic\r\n\t['ء', 'e'],\r\n\t['آ', 'a'],\r\n\t['أ', 'a'],\r\n\t['ؤ', 'w'],\r\n\t['إ', 'i'],\r\n\t['ئ', 'y'],\r\n\t['ا', 'a'],\r\n\t['ب', 'b'],\r\n\t['ة', 't'],\r\n\t['ت', 't'],\r\n\t['ث', 'th'],\r\n\t['ج', 'j'],\r\n\t['ح', 'h'],\r\n\t['خ', 'kh'],\r\n\t['د', 'd'],\r\n\t['ذ', 'dh'],\r\n\t['ر', 'r'],\r\n\t['ز', 'z'],\r\n\t['س', 's'],\r\n\t['ش', 'sh'],\r\n\t['ص', 's'],\r\n\t['ض', 'd'],\r\n\t['ط', 't'],\r\n\t['ظ', 'z'],\r\n\t['ع', 'e'],\r\n\t['غ', 'gh'],\r\n\t['ـ', '_'],\r\n\t['ف', 'f'],\r\n\t['ق', 'q'],\r\n\t['ك', 'k'],\r\n\t['ل', 'l'],\r\n\t['م', 'm'],\r\n\t['ن', 'n'],\r\n\t['ه', 'h'],\r\n\t['و', 'w'],\r\n\t['ى', 'a'],\r\n\t['ي', 'y'],\r\n\t['َ‎', 'a'],\r\n\t['ُ', 'u'],\r\n\t['ِ‎', 'i'],\r\n\t['٠', '0'],\r\n\t['١', '1'],\r\n\t['٢', '2'],\r\n\t['٣', '3'],\r\n\t['٤', '4'],\r\n\t['٥', '5'],\r\n\t['٦', '6'],\r\n\t['٧', '7'],\r\n\t['٨', '8'],\r\n\t['٩', '9'],\r\n\r\n\t// Persian / Farsi\r\n\t['چ', 'ch'],\r\n\t['ک', 'k'],\r\n\t['گ', 'g'],\r\n\t['پ', 'p'],\r\n\t['ژ', 'zh'],\r\n\t['ی', 'y'],\r\n\t['۰', '0'],\r\n\t['۱', '1'],\r\n\t['۲', '2'],\r\n\t['۳', '3'],\r\n\t['۴', '4'],\r\n\t['۵', '5'],\r\n\t['۶', '6'],\r\n\t['۷', '7'],\r\n\t['۸', '8'],\r\n\t['۹', '9'],\r\n\r\n\t// Pashto\r\n\t['ټ', 'p'],\r\n\t['ځ', 'z'],\r\n\t['څ', 'c'],\r\n\t['ډ', 'd'],\r\n\t['ﺫ', 'd'],\r\n\t['ﺭ', 'r'],\r\n\t['ړ', 'r'],\r\n\t['ﺯ', 'z'],\r\n\t['ږ', 'g'],\r\n\t['ښ', 'x'],\r\n\t['ګ', 'g'],\r\n\t['ڼ', 'n'],\r\n\t['ۀ', 'e'],\r\n\t['ې', 'e'],\r\n\t['ۍ', 'ai'],\r\n\r\n\t// Urdu\r\n\t['ٹ', 't'],\r\n\t['ڈ', 'd'],\r\n\t['ڑ', 'r'],\r\n\t['ں', 'n'],\r\n\t['ہ', 'h'],\r\n\t['ھ', 'h'],\r\n\t['ے', 'e'],\r\n\r\n\t// Russian\r\n\t['А', 'A'],\r\n\t['а', 'a'],\r\n\t['Б', 'B'],\r\n\t['б', 'b'],\r\n\t['В', 'V'],\r\n\t['в', 'v'],\r\n\t['Г', 'G'],\r\n\t['г', 'g'],\r\n\t['Д', 'D'],\r\n\t['д', 'd'],\r\n\t['Е', 'E'],\r\n\t['е', 'e'],\r\n\t['Ж', 'Zh'],\r\n\t['ж', 'zh'],\r\n\t['З', 'Z'],\r\n\t['з', 'z'],\r\n\t['И', 'I'],\r\n\t['и', 'i'],\r\n\t['Й', 'J'],\r\n\t['й', 'j'],\r\n\t['К', 'K'],\r\n\t['к', 'k'],\r\n\t['Л', 'L'],\r\n\t['л', 'l'],\r\n\t['М', 'M'],\r\n\t['м', 'm'],\r\n\t['Н', 'N'],\r\n\t['н', 'n'],\r\n\t['О', 'O'],\r\n\t['о', 'o'],\r\n\t['П', 'P'],\r\n\t['п', 'p'],\r\n\t['Р', 'R'],\r\n\t['р', 'r'],\r\n\t['С', 'S'],\r\n\t['с', 's'],\r\n\t['Т', 'T'],\r\n\t['т', 't'],\r\n\t['У', 'U'],\r\n\t['у', 'u'],\r\n\t['Ф', 'F'],\r\n\t['ф', 'f'],\r\n\t['Х', 'H'],\r\n\t['х', 'h'],\r\n\t['Ц', 'Cz'],\r\n\t['ц', 'cz'],\r\n\t['Ч', 'Ch'],\r\n\t['ч', 'ch'],\r\n\t['Ш', 'Sh'],\r\n\t['ш', 'sh'],\r\n\t['Щ', 'Shh'],\r\n\t['щ', 'shh'],\r\n\t['Ъ', ''],\r\n\t['ъ', ''],\r\n\t['Ы', 'Y'],\r\n\t['ы', 'y'],\r\n\t['Ь', ''],\r\n\t['ь', ''],\r\n\t['Э', 'E'],\r\n\t['э', 'e'],\r\n\t['Ю', 'Yu'],\r\n\t['ю', 'yu'],\r\n\t['Я', 'Ya'],\r\n\t['я', 'ya'],\r\n\t['Ё', 'Yo'],\r\n\t['ё', 'yo'],\r\n\r\n\t// Romanian\r\n\t['ă', 'a'],\r\n\t['Ă', 'A'],\r\n\t['ș', 's'],\r\n\t['Ș', 'S'],\r\n\t['ț', 't'],\r\n\t['Ț', 'T'],\r\n\t['ţ', 't'],\r\n\t['Ţ', 'T'],\r\n\r\n\t// Turkish\r\n\t['ş', 's'],\r\n\t['Ş', 'S'],\r\n\t['ç', 'c'],\r\n\t['Ç', 'C'],\r\n\t['ğ', 'g'],\r\n\t['Ğ', 'G'],\r\n\t['ı', 'i'],\r\n\t['İ', 'I'],\r\n\r\n\t// Armenian\r\n\t['ա', 'a'],\r\n\t['Ա', 'A'],\r\n\t['բ', 'b'],\r\n\t['Բ', 'B'],\r\n\t['գ', 'g'],\r\n\t['Գ', 'G'],\r\n\t['դ', 'd'],\r\n\t['Դ', 'D'],\r\n\t['ե', 'ye'],\r\n\t['Ե', 'Ye'],\r\n\t['զ', 'z'],\r\n\t['Զ', 'Z'],\r\n\t['է', 'e'],\r\n\t['Է', 'E'],\r\n\t['ը', 'y'],\r\n\t['Ը', 'Y'],\r\n\t['թ', 't'],\r\n\t['Թ', 'T'],\r\n\t['ժ', 'zh'],\r\n\t['Ժ', 'Zh'],\r\n\t['ի', 'i'],\r\n\t['Ի', 'I'],\r\n\t['լ', 'l'],\r\n\t['Լ', 'L'],\r\n\t['խ', 'kh'],\r\n\t['Խ', 'Kh'],\r\n\t['ծ', 'ts'],\r\n\t['Ծ', 'Ts'],\r\n\t['կ', 'k'],\r\n\t['Կ', 'K'],\r\n\t['հ', 'h'],\r\n\t['Հ', 'H'],\r\n\t['ձ', 'dz'],\r\n\t['Ձ', 'Dz'],\r\n\t['ղ', 'gh'],\r\n\t['Ղ', 'Gh'],\r\n\t['ճ', 'tch'],\r\n\t['Ճ', 'Tch'],\r\n\t['մ', 'm'],\r\n\t['Մ', 'M'],\r\n\t['յ', 'y'],\r\n\t['Յ', 'Y'],\r\n\t['ն', 'n'],\r\n\t['Ն', 'N'],\r\n\t['շ', 'sh'],\r\n\t['Շ', 'Sh'],\r\n\t['ո', 'vo'],\r\n\t['Ո', 'Vo'],\r\n\t['չ', 'ch'],\r\n\t['Չ', 'Ch'],\r\n\t['պ', 'p'],\r\n\t['Պ', 'P'],\r\n\t['ջ', 'j'],\r\n\t['Ջ', 'J'],\r\n\t['ռ', 'r'],\r\n\t['Ռ', 'R'],\r\n\t['ս', 's'],\r\n\t['Ս', 'S'],\r\n\t['վ', 'v'],\r\n\t['Վ', 'V'],\r\n\t['տ', 't'],\r\n\t['Տ', 'T'],\r\n\t['ր', 'r'],\r\n\t['Ր', 'R'],\r\n\t['ց', 'c'],\r\n\t['Ց', 'C'],\r\n\t['ու', 'u'],\r\n\t['ՈՒ', 'U'],\r\n\t['Ու', 'U'],\r\n\t['փ', 'p'],\r\n\t['Փ', 'P'],\r\n\t['ք', 'q'],\r\n\t['Ք', 'Q'],\r\n\t['օ', 'o'],\r\n\t['Օ', 'O'],\r\n\t['ֆ', 'f'],\r\n\t['Ֆ', 'F'],\r\n\t['և', 'yev'],\r\n\r\n\t// Georgian\r\n\t['ა', 'a'],\r\n\t['ბ', 'b'],\r\n\t['გ', 'g'],\r\n\t['დ', 'd'],\r\n\t['ე', 'e'],\r\n\t['ვ', 'v'],\r\n\t['ზ', 'z'],\r\n\t['თ', 't'],\r\n\t['ი', 'i'],\r\n\t['კ', 'k'],\r\n\t['ლ', 'l'],\r\n\t['მ', 'm'],\r\n\t['ნ', 'n'],\r\n\t['ო', 'o'],\r\n\t['პ', 'p'],\r\n\t['ჟ', 'zh'],\r\n\t['რ', 'r'],\r\n\t['ს', 's'],\r\n\t['ტ', 't'],\r\n\t['უ', 'u'],\r\n\t['ფ', 'ph'],\r\n\t['ქ', 'q'],\r\n\t['ღ', 'gh'],\r\n\t['ყ', 'k'],\r\n\t['შ', 'sh'],\r\n\t['ჩ', 'ch'],\r\n\t['ც', 'ts'],\r\n\t['ძ', 'dz'],\r\n\t['წ', 'ts'],\r\n\t['ჭ', 'tch'],\r\n\t['ხ', 'kh'],\r\n\t['ჯ', 'j'],\r\n\t['ჰ', 'h'],\r\n\r\n\t// Czech\r\n\t['č', 'c'],\r\n\t['ď', 'd'],\r\n\t['ě', 'e'],\r\n\t['ň', 'n'],\r\n\t['ř', 'r'],\r\n\t['š', 's'],\r\n\t['ť', 't'],\r\n\t['ů', 'u'],\r\n\t['ž', 'z'],\r\n\t['Č', 'C'],\r\n\t['Ď', 'D'],\r\n\t['Ě', 'E'],\r\n\t['Ň', 'N'],\r\n\t['Ř', 'R'],\r\n\t['Š', 'S'],\r\n\t['Ť', 'T'],\r\n\t['Ů', 'U'],\r\n\t['Ž', 'Z'],\r\n\r\n\t// Dhivehi\r\n\t['ހ', 'h'],\r\n\t['ށ', 'sh'],\r\n\t['ނ', 'n'],\r\n\t['ރ', 'r'],\r\n\t['ބ', 'b'],\r\n\t['ޅ', 'lh'],\r\n\t['ކ', 'k'],\r\n\t['އ', 'a'],\r\n\t['ވ', 'v'],\r\n\t['މ', 'm'],\r\n\t['ފ', 'f'],\r\n\t['ދ', 'dh'],\r\n\t['ތ', 'th'],\r\n\t['ލ', 'l'],\r\n\t['ގ', 'g'],\r\n\t['ޏ', 'gn'],\r\n\t['ސ', 's'],\r\n\t['ޑ', 'd'],\r\n\t['ޒ', 'z'],\r\n\t['ޓ', 't'],\r\n\t['ޔ', 'y'],\r\n\t['ޕ', 'p'],\r\n\t['ޖ', 'j'],\r\n\t['ޗ', 'ch'],\r\n\t['ޘ', 'tt'],\r\n\t['ޙ', 'hh'],\r\n\t['ޚ', 'kh'],\r\n\t['ޛ', 'th'],\r\n\t['ޜ', 'z'],\r\n\t['ޝ', 'sh'],\r\n\t['ޞ', 's'],\r\n\t['ޟ', 'd'],\r\n\t['ޠ', 't'],\r\n\t['ޡ', 'z'],\r\n\t['ޢ', 'a'],\r\n\t['ޣ', 'gh'],\r\n\t['ޤ', 'q'],\r\n\t['ޥ', 'w'],\r\n\t['ަ', 'a'],\r\n\t['ާ', 'aa'],\r\n\t['ި', 'i'],\r\n\t['ީ', 'ee'],\r\n\t['ު', 'u'],\r\n\t['ޫ', 'oo'],\r\n\t['ެ', 'e'],\r\n\t['ޭ', 'ey'],\r\n\t['ޮ', 'o'],\r\n\t['ޯ', 'oa'],\r\n\t['ް', ''],\r\n\r\n\t// Greek\r\n\t['α', 'a'],\r\n\t['β', 'v'],\r\n\t['γ', 'g'],\r\n\t['δ', 'd'],\r\n\t['ε', 'e'],\r\n\t['ζ', 'z'],\r\n\t['η', 'i'],\r\n\t['θ', 'th'],\r\n\t['ι', 'i'],\r\n\t['κ', 'k'],\r\n\t['λ', 'l'],\r\n\t['μ', 'm'],\r\n\t['ν', 'n'],\r\n\t['ξ', 'ks'],\r\n\t['ο', 'o'],\r\n\t['π', 'p'],\r\n\t['ρ', 'r'],\r\n\t['σ', 's'],\r\n\t['τ', 't'],\r\n\t['υ', 'y'],\r\n\t['φ', 'f'],\r\n\t['χ', 'x'],\r\n\t['ψ', 'ps'],\r\n\t['ω', 'o'],\r\n\t['ά', 'a'],\r\n\t['έ', 'e'],\r\n\t['ί', 'i'],\r\n\t['ό', 'o'],\r\n\t['ύ', 'y'],\r\n\t['ή', 'i'],\r\n\t['ώ', 'o'],\r\n\t['ς', 's'],\r\n\t['ϊ', 'i'],\r\n\t['ΰ', 'y'],\r\n\t['ϋ', 'y'],\r\n\t['ΐ', 'i'],\r\n\t['Α', 'A'],\r\n\t['Β', 'B'],\r\n\t['Γ', 'G'],\r\n\t['Δ', 'D'],\r\n\t['Ε', 'E'],\r\n\t['Ζ', 'Z'],\r\n\t['Η', 'I'],\r\n\t['Θ', 'TH'],\r\n\t['Ι', 'I'],\r\n\t['Κ', 'K'],\r\n\t['Λ', 'L'],\r\n\t['Μ', 'M'],\r\n\t['Ν', 'N'],\r\n\t['Ξ', 'KS'],\r\n\t['Ο', 'O'],\r\n\t['Π', 'P'],\r\n\t['Ρ', 'R'],\r\n\t['Σ', 'S'],\r\n\t['Τ', 'T'],\r\n\t['Υ', 'Y'],\r\n\t['Φ', 'F'],\r\n\t['Χ', 'X'],\r\n\t['Ψ', 'PS'],\r\n\t['Ω', 'O'],\r\n\t['Ά', 'A'],\r\n\t['Έ', 'E'],\r\n\t['Ί', 'I'],\r\n\t['Ό', 'O'],\r\n\t['Ύ', 'Y'],\r\n\t['Ή', 'I'],\r\n\t['Ώ', 'O'],\r\n\t['Ϊ', 'I'],\r\n\t['Ϋ', 'Y'],\r\n\r\n\t// Disabled as it conflicts with German and Latin.\r\n\t// Hungarian\r\n\t// ['ä', 'a'],\r\n\t// ['Ä', 'A'],\r\n\t// ['ö', 'o'],\r\n\t// ['Ö', 'O'],\r\n\t// ['ü', 'u'],\r\n\t// ['Ü', 'U'],\r\n\t// ['ű', 'u'],\r\n\t// ['Ű', 'U'],\r\n\r\n\t// Latvian\r\n\t['ā', 'a'],\r\n\t['ē', 'e'],\r\n\t['ģ', 'g'],\r\n\t['ī', 'i'],\r\n\t['ķ', 'k'],\r\n\t['ļ', 'l'],\r\n\t['ņ', 'n'],\r\n\t['ū', 'u'],\r\n\t['Ā', 'A'],\r\n\t['Ē', 'E'],\r\n\t['Ģ', 'G'],\r\n\t['Ī', 'I'],\r\n\t['Ķ', 'K'],\r\n\t['Ļ', 'L'],\r\n\t['Ņ', 'N'],\r\n\t['Ū', 'U'],\r\n\t['č', 'c'],\r\n\t['š', 's'],\r\n\t['ž', 'z'],\r\n\t['Č', 'C'],\r\n\t['Š', 'S'],\r\n\t['Ž', 'Z'],\r\n\r\n\t// Lithuanian\r\n\t['ą', 'a'],\r\n\t['č', 'c'],\r\n\t['ę', 'e'],\r\n\t['ė', 'e'],\r\n\t['į', 'i'],\r\n\t['š', 's'],\r\n\t['ų', 'u'],\r\n\t['ū', 'u'],\r\n\t['ž', 'z'],\r\n\t['Ą', 'A'],\r\n\t['Č', 'C'],\r\n\t['Ę', 'E'],\r\n\t['Ė', 'E'],\r\n\t['Į', 'I'],\r\n\t['Š', 'S'],\r\n\t['Ų', 'U'],\r\n\t['Ū', 'U'],\r\n\r\n\t// Macedonian\r\n\t['Ќ', 'Kj'],\r\n\t['ќ', 'kj'],\r\n\t['Љ', 'Lj'],\r\n\t['љ', 'lj'],\r\n\t['Њ', 'Nj'],\r\n\t['њ', 'nj'],\r\n\t['Тс', 'Ts'],\r\n\t['тс', 'ts'],\r\n\r\n\t// Polish\r\n\t['ą', 'a'],\r\n\t['ć', 'c'],\r\n\t['ę', 'e'],\r\n\t['ł', 'l'],\r\n\t['ń', 'n'],\r\n\t['ś', 's'],\r\n\t['ź', 'z'],\r\n\t['ż', 'z'],\r\n\t['Ą', 'A'],\r\n\t['Ć', 'C'],\r\n\t['Ę', 'E'],\r\n\t['Ł', 'L'],\r\n\t['Ń', 'N'],\r\n\t['Ś', 'S'],\r\n\t['Ź', 'Z'],\r\n\t['Ż', 'Z'],\r\n\r\n\t// Disabled as it conflicts with Vietnamese.\r\n\t// Serbian\r\n\t// ['љ', 'lj'],\r\n\t// ['њ', 'nj'],\r\n\t// ['Љ', 'Lj'],\r\n\t// ['Њ', 'Nj'],\r\n\t// ['đ', 'dj'],\r\n\t// ['Đ', 'Dj'],\r\n\t// ['ђ', 'dj'],\r\n\t// ['ј', 'j'],\r\n\t// ['ћ', 'c'],\r\n\t// ['џ', 'dz'],\r\n\t// ['Ђ', 'Dj'],\r\n\t// ['Ј', 'j'],\r\n\t// ['Ћ', 'C'],\r\n\t// ['Џ', 'Dz'],\r\n\r\n\t// Disabled as it conflicts with German and Latin.\r\n\t// Slovak\r\n\t// ['ä', 'a'],\r\n\t// ['Ä', 'A'],\r\n\t// ['ľ', 'l'],\r\n\t// ['ĺ', 'l'],\r\n\t// ['ŕ', 'r'],\r\n\t// ['Ľ', 'L'],\r\n\t// ['Ĺ', 'L'],\r\n\t// ['Ŕ', 'R'],\r\n\r\n\t// Disabled as it conflicts with German and Latin.\r\n\t// Swedish\r\n\t// ['å', 'o'],\r\n\t// ['Å', 'o'],\r\n\t// ['ä', 'a'],\r\n\t// ['Ä', 'A'],\r\n\t// ['ë', 'e'],\r\n\t// ['Ë', 'E'],\r\n\t// ['ö', 'o'],\r\n\t// ['Ö', 'O'],\r\n\r\n\t// Ukrainian\r\n\t['Є', 'Ye'],\r\n\t['І', 'I'],\r\n\t['Ї', 'Yi'],\r\n\t['Ґ', 'G'],\r\n\t['є', 'ye'],\r\n\t['і', 'i'],\r\n\t['ї', 'yi'],\r\n\t['ґ', 'g']\r\n\r\n\t// Danish\r\n\t// ['Æ', 'Ae'],\r\n\t// ['Ø', 'Oe'],\r\n\t// ['Å', 'Aa'],\r\n\t// ['æ', 'ae'],\r\n\t// ['ø', 'oe'],\r\n\t// ['å', 'aa']\r\n];\r\n", "'use strict';\r\nconst deburr = require('lodash.deburr');\r\nconst escapeStringRegexp = require('escape-string-regexp');\r\nconst builtinReplacements = require('./replacements');\r\n\r\nconst doCustomReplacements = (string, replacements) => {\r\n\tfor (const [key, value] of replacements) {\r\n\t\t// TODO: Use `String#replaceAll()` when targeting Node.js 16.\r\n\t\tstring = string.replace(new RegExp(escapeStringRegexp(key), 'g'), value);\r\n\t}\r\n\r\n\treturn string;\r\n};\r\n\r\nmodule.exports = (string, options) => {\r\n\tif (typeof string !== 'string') {\r\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\r\n\t}\r\n\r\n\toptions = {\r\n\t\tcustomReplacements: [],\r\n\t\t...options\r\n\t};\r\n\r\n\tconst customReplacements = new Map([\r\n\t\t...builtinReplacements,\r\n\t\t...options.customReplacements\r\n\t]);\r\n\r\n\tstring = string.normalize();\r\n\tstring = doCustomReplacements(string, customReplacements);\r\n\tstring = deburr(string);\r\n\r\n\treturn string;\r\n};\r\n", "'use strict';\r\n\r\nmodule.exports = [\r\n\t['&', ' and '],\r\n\t['🦄', ' unicorn '],\r\n\t['♥', ' love ']\r\n];\r\n", "'use strict';\r\nconst escapeStringRegexp = require('escape-string-regexp');\r\nconst transliterate = require('@sindresorhus/transliterate');\r\nconst builtinOverridableReplacements = require('./overridable-replacements');\r\n\r\nconst decamelize = string => {\r\n\treturn string\r\n\t\t// Separate capitalized words.\r\n\t\t.replace(/([A-Z]{2,})(\\d+)/g, '$1 $2')\r\n\t\t.replace(/([a-z\\d]+)([A-Z]{2,})/g, '$1 $2')\r\n\r\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1 $2')\r\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1 $2');\r\n};\r\n\r\nconst removeMootSeparators = (string, separator) => {\r\n\tconst escapedSeparator = escapeStringRegexp(separator);\r\n\r\n\treturn string\r\n\t\t.replace(new RegExp(`${escapedSeparator}{2,}`, 'g'), separator)\r\n\t\t.replace(new RegExp(`^${escapedSeparator}|${escapedSeparator}$`, 'g'), '');\r\n};\r\n\r\nconst slugify = (string, options) => {\r\n\tif (typeof string !== 'string') {\r\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\r\n\t}\r\n\r\n\toptions = {\r\n\t\tseparator: '-',\r\n\t\tlowercase: true,\r\n\t\tdecamelize: true,\r\n\t\tcustomReplacements: [],\r\n\t\tpreserveLeadingUnderscore: false,\r\n\t\t...options\r\n\t};\r\n\r\n\tconst shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith('_');\r\n\r\n\tconst customReplacements = new Map([\r\n\t\t...builtinOverridableReplacements,\r\n\t\t...options.customReplacements\r\n\t]);\r\n\r\n\tstring = transliterate(string, {customReplacements});\r\n\r\n\tif (options.decamelize) {\r\n\t\tstring = decamelize(string);\r\n\t}\r\n\r\n\tlet patternSlug = /[^a-zA-Z\\d]+/g;\r\n\r\n\tif (options.lowercase) {\r\n\t\tstring = string.toLowerCase();\r\n\t\tpatternSlug = /[^a-z\\d]+/g;\r\n\t}\r\n\r\n\tstring = string.replace(patternSlug, options.separator);\r\n\tstring = string.replace(/\\\\/g, '');\r\n\tif (options.separator) {\r\n\t\tstring = removeMootSeparators(string, options.separator);\r\n\t}\r\n\r\n\tif (shouldPrependUnderscore) {\r\n\t\tstring = `_${string}`;\r\n\t}\r\n\r\n\treturn string;\r\n};\r\n\r\nconst counter = () => {\r\n\tconst occurrences = new Map();\r\n\r\n\tconst countable = (string, options) => {\r\n\t\tstring = slugify(string, options);\r\n\r\n\t\tif (!string) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tconst stringLower = string.toLowerCase();\r\n\t\tconst numberless = occurrences.get(stringLower.replace(/(?:-\\d+?)+?$/, '')) || 0;\r\n\t\tconst counter = occurrences.get(stringLower);\r\n\t\toccurrences.set(stringLower, typeof counter === 'number' ? counter + 1 : 1);\r\n\t\tconst newCounter = occurrences.get(stringLower) || 2;\r\n\t\tif (newCounter >= 2 || numberless > 2) {\r\n\t\t\tstring = `${string}-${newCounter}`;\r\n\t\t}\r\n\r\n\t\treturn string;\r\n\t};\r\n\r\n\tcountable.reset = () => {\r\n\t\toccurrences.clear();\r\n\t};\r\n\r\n\treturn countable;\r\n};\r\n\r\nmodule.exports = slugify;\r\nmodule.exports.counter = counter;\r\n", "export const PERMISSIONS = {\n  // This permission regards the main component (App) and is used to tell\n  // If the plugin link should be displayed in the menu\n  // And also if the plugin is accessible. This use case is found when a user types the url of the\n  // plugin directly in the browser\n  main: [{ action: 'plugin::content-type-builder.read', subject: null }],\n};\n\nexport const MAX_COMPONENT_DEPTH = 6;\n", "import * as React from 'react';\n\nimport { Box, Flex, Typography, Link } from '@strapi/design-system';\nimport { Clock, ArrowClockwise } from '@strapi/icons';\nimport { createPortal } from 'react-dom';\nimport { MessageDescriptor, useIntl } from 'react-intl';\nimport { styled, keyframes } from 'styled-components';\n\n/**\n * TODO: realistically a lot of this logic is isolated to the `core/admin` package.\n * However, we want to expose the `useAutoReloadOverlayBlocker` hook to the plugins.\n *\n * Therefore, in V5 we should move this logic back to the `core/admin` package & export\n * the hook from that package and re-export here. For now, let's keep it all together\n * because it's easier to diagnose and we're not using a million refs because we don't\n * understand what's going on.\n */\nexport interface AutoReloadOverlayBlockerConfig {\n  title?: string;\n  description?: string;\n  icon?: 'reload' | 'time';\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Context\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AutoReloadOverlayBlockerContextValue {\n  lockAppWithAutoreload: (config?: AutoReloadOverlayBlockerConfig) => void;\n  unlockAppWithAutoreload: () => void;\n}\n\nconst AutoReloadOverlayBlockerContext = React.createContext<AutoReloadOverlayBlockerContextValue>({\n  lockAppWithAutoreload: () => {},\n  unlockAppWithAutoreload: () => {},\n});\n\n/* -------------------------------------------------------------------------------------------------\n * Provider\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AutoReloadOverlayBlockerProviderProps {\n  children: React.ReactNode;\n}\n\nconst MAX_ELAPSED_TIME = 300 * 1000;\n\nconst AutoReloadOverlayBlockerProvider = ({ children }: AutoReloadOverlayBlockerProviderProps) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [config, setConfig] = React.useState<AutoReloadOverlayBlockerConfig>({});\n  const [failed, setFailed] = React.useState(false);\n\n  const lockAppWithAutoreload = React.useCallback((config: AutoReloadOverlayBlockerConfig = {}) => {\n    setIsOpen(true);\n    setConfig(config);\n  }, []);\n\n  const unlockAppWithAutoreload = React.useCallback(() => {\n    setIsOpen(false);\n    setConfig({});\n  }, []);\n\n  // eslint-disable-next-line consistent-return\n  React.useEffect(() => {\n    if (isOpen) {\n      const timeout = setTimeout(() => {\n        setFailed(true);\n      }, MAX_ELAPSED_TIME);\n\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [isOpen]);\n\n  let displayedIcon = config?.icon || 'reload';\n\n  let description = {\n    id: config?.description || 'components.OverlayBlocker.description',\n    defaultMessage:\n      \"You're using a feature that needs the server to restart. The page will reload automatically.\",\n  };\n\n  let title = {\n    id: config?.title || 'components.OverlayBlocker.title',\n    defaultMessage: 'Waiting for restart',\n  };\n\n  if (failed) {\n    displayedIcon = 'time';\n\n    description = {\n      id: 'components.OverlayBlocker.description.serverError',\n      defaultMessage: 'The server should have restarted, please check your logs in the terminal.',\n    };\n\n    title = {\n      id: 'components.OverlayBlocker.title.serverError',\n      defaultMessage: 'The restart is taking longer than expected',\n    };\n  }\n\n  const autoReloadValue = React.useMemo(\n    () => ({\n      lockAppWithAutoreload,\n      unlockAppWithAutoreload,\n    }),\n    [lockAppWithAutoreload, unlockAppWithAutoreload]\n  );\n\n  return (\n    <AutoReloadOverlayBlockerContext.Provider value={autoReloadValue}>\n      <Blocker\n        displayedIcon={displayedIcon}\n        isOpen={isOpen}\n        description={description}\n        title={title}\n      />\n      {children}\n    </AutoReloadOverlayBlockerContext.Provider>\n  );\n};\n\ninterface BlockerProps {\n  displayedIcon: string;\n  description: MessageDescriptor;\n  isOpen: boolean;\n  title: MessageDescriptor;\n}\n\nconst Blocker = ({ displayedIcon, description, title, isOpen }: BlockerProps) => {\n  const { formatMessage } = useIntl();\n\n  // eslint-disable-next-line no-undef\n  return isOpen && globalThis?.document?.body\n    ? createPortal(\n        <Overlay id=\"autoReloadOverlayBlocker\" direction=\"column\" alignItems=\"center\" gap={6}>\n          <Flex direction=\"column\" alignItems=\"center\" gap={2}>\n            <Typography tag=\"h1\" variant=\"alpha\">\n              {formatMessage(title)}\n            </Typography>\n            <Typography tag=\"h2\" textColor=\"neutral600\" fontSize={4} fontWeight=\"regular\">\n              {formatMessage(description)}\n            </Typography>\n          </Flex>\n          {displayedIcon === 'reload' && (\n            <IconBox padding={6} background=\"primary100\" borderColor=\"primary200\">\n              <LoaderReload width=\"4rem\" height=\"4rem\" />\n            </IconBox>\n          )}\n          {displayedIcon === 'time' && (\n            <IconBox padding={6} background=\"primary100\" borderColor=\"primary200\">\n              <Clock width=\"4rem\" height=\"4rem\" />\n            </IconBox>\n          )}\n          <Box marginTop={2}>\n            <Link href=\"https://docs.strapi.io\" isExternal>\n              {formatMessage({\n                id: 'global.documentation',\n                defaultMessage: 'Read the documentation',\n              })}\n            </Link>\n          </Box>\n        </Overlay>,\n        // eslint-disable-next-line no-undef\n        globalThis.document.body\n      )\n    : null;\n};\n\nconst rotation = keyframes`\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(359deg);\n    }\n  `;\n\nconst LoaderReload = styled(ArrowClockwise)`\n  animation: ${rotation} 1s infinite linear;\n`;\n\nconst Overlay = styled(Flex)`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  /* TODO: set this up in the theme for consistence z-index values */\n  z-index: 1140;\n  padding-top: 16rem;\n\n  & > * {\n    position: relative;\n    z-index: 1;\n  }\n\n  &:before {\n    content: '';\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: ${({ theme }) => theme.colors.neutral0};\n    opacity: 0.9;\n  }\n`;\n\nconst IconBox = styled(Box)`\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  svg {\n    > path {\n      fill: ${({ theme }) => theme.colors.primary600} !important;\n    }\n  }\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * Hook\n * -----------------------------------------------------------------------------------------------*/\n\nconst useAutoReloadOverlayBlocker = () => React.useContext(AutoReloadOverlayBlockerContext);\n\nexport { AutoReloadOverlayBlockerProvider, useAutoReloadOverlayBlocker };\n", "const makeUnique = <T extends string>(array: T[]): T[] => [...new Set(array)];\n\nexport { makeUnique };\n", "import {\n  CaseReducer,\n  createSlice,\n  CreateSliceOptions,\n  Draft,\n  original,\n  PayloadAction,\n  SliceCaseReducers,\n} from '@reduxjs/toolkit';\n\nexport type UndoRedoState<T> = {\n  past: Array<Partial<T>>;\n  future: Array<Partial<T>>;\n  current: T;\n};\n\ntype WrappedUndoRedoReducer<TState, TReducers extends SliceCaseReducers<TState>> = {\n  [K in keyof TReducers]: TReducers[K] extends CaseReducer<TState, infer A>\n    ? CaseReducer<UndoRedoState<TState>, A>\n    : never;\n};\n\ntype UndoRedoReducer<TState, TReducers extends SliceCaseReducers<TState>> = WrappedUndoRedoReducer<\n  TState,\n  TReducers\n> & {\n  undo: CaseReducer<UndoRedoState<TState>>;\n  redo: CaseReducer<UndoRedoState<TState>>;\n  discardAll: CaseReducer<UndoRedoState<TState>>;\n  clearHistory: CaseReducer<UndoRedoState<TState>>;\n};\n\ntype Opts<TState> = {\n  limit?: number;\n  excludeActionsFromHistory?: string[];\n  stateSelector?: (state: Draft<TState> | undefined) => Draft<Partial<TState>>;\n  discard?: (state: Draft<TState>) => void;\n};\n\nconst isCallable = (obj: unknown): obj is (...args: unknown[]) => unknown => {\n  return typeof obj === 'function';\n};\n\nexport const createUndoRedoSlice = <State, CaseReducers extends SliceCaseReducers<State>>(\n  sliceOpts: CreateSliceOptions<State, CaseReducers, string>,\n  opts: Opts<State>\n) => {\n  const initialState: UndoRedoState<State> = {\n    past: [],\n    future: [],\n    current: isCallable(sliceOpts.initialState) ? sliceOpts.initialState() : sliceOpts.initialState,\n  };\n\n  const { limit = 10 } = opts ?? {};\n\n  const selector = opts.stateSelector || (<T>(state: Draft<T>): Draft<T> => state);\n\n  const wrappedReducers = Object.keys(sliceOpts.reducers).reduce(\n    (acc, actionName: string) => {\n      const reducer = sliceOpts.reducers[actionName];\n\n      if (!isCallable(reducer)) {\n        throw new Error('Reducer must be a function. prepapre not support in UndoRedo wrapper');\n      }\n\n      acc[actionName] = (state, action) => {\n        const newCurrent = reducer(state.current as Draft<State>, action);\n\n        if (opts.excludeActionsFromHistory?.includes(actionName)) {\n          if (newCurrent !== undefined) {\n            state.current = newCurrent as Draft<State>;\n          }\n\n          return;\n        }\n\n        const originalCurrent = original(state.current);\n\n        state.past.push(selector(originalCurrent)!);\n        if (state.past.length > limit) {\n          state.past.shift();\n        }\n        state.future = [];\n\n        if (newCurrent !== undefined) {\n          state.current = newCurrent as Draft<State>;\n        }\n      };\n\n      return acc;\n    },\n    {} as Record<string, CaseReducer<UndoRedoState<State>, PayloadAction<unknown>>>\n  ) as WrappedUndoRedoReducer<State, CaseReducers>;\n\n  return createSlice<UndoRedoState<State>, UndoRedoReducer<State, CaseReducers>>({\n    name: sliceOpts.name,\n    initialState,\n    // @ts-expect-error - TS doesn't like the fact that we're adding extra reducers\n    reducers: {\n      ...wrappedReducers,\n      undo: (state) => {\n        if (state.past.length === 0) {\n          return;\n        }\n\n        const previous = state.past.pop();\n\n        if (previous !== undefined) {\n          state.future = [state.current, ...state.future];\n          // reapply the previous state partially\n          // @ts-expect-error - TS doesn't like the fact that we're mutating the state\n          state.current = { ...state.current, ...previous };\n        }\n      },\n\n      redo: (state) => {\n        if (state.future.length === 0) {\n          return;\n        }\n\n        const next = state.future.shift();\n        if (next != undefined) {\n          state.past = [...state.past, state.current];\n          // reapply the previous state partially\n          // @ts-expect-error - TS doesn't like the fact that we're mutating the state\n          state.current = { ...state.current, ...next };\n        }\n      },\n\n      discardAll: (state) => {\n        if (opts.discard) {\n          opts.discard(state.current);\n        } else {\n          // @ts-expect-error - TS doesn't like the fact that we're mutating the state\n          state.current = initialState.current;\n        }\n        state.past = [];\n        state.future = [];\n      },\n\n      clearHistory: (state) => {\n        state.past = [];\n        state.future = [];\n      },\n    },\n  });\n};\n", "import { Component, ContentType, AnyAttribute } from '../../../types';\n\nexport const formatSchema = <TType extends Component | ContentType>(\n  schema: Record<string, any>\n): TType => {\n  return {\n    ...schema,\n    attributes: toAttributesArray(schema.attributes),\n  } as TType;\n};\n\nexport const toAttributesArray = (attributes: Record<string, any>) => {\n  return Object.keys(attributes).reduce((acc, current: any) => {\n    acc.push({ ...attributes[current], name: current });\n\n    return acc;\n  }, [] as AnyAttribute[]);\n};\n", "import { PayloadAction } from '@reduxjs/toolkit';\nimport merge from 'lodash/merge';\nimport omit from 'lodash/omit';\n\nimport { getRelationType } from '../../utils/getRelationType';\nimport { makeUnique } from '../../utils/makeUnique';\n\nimport { createUndoRedoSlice } from './undoRedo';\nimport { formatSchema } from './utils/formatSchemas';\n\nimport type {\n  Components,\n  ContentTypes,\n  ContentType,\n  Component,\n  Status,\n  AnyAttribute,\n} from '../../types';\nimport type { Internal, Schema, Struct, UID } from '@strapi/types';\n\nexport interface DataManagerStateType {\n  components: Components;\n  initialComponents: Components;\n  contentTypes: ContentTypes;\n  initialContentTypes: ContentTypes;\n  reservedNames: {\n    models: string[];\n    attributes: string[];\n  };\n  isLoading: boolean;\n  [key: string]: any;\n}\n\nconst initialState: DataManagerStateType = {\n  components: {},\n  contentTypes: {},\n  initialComponents: {},\n  initialContentTypes: {},\n  reservedNames: {\n    models: [],\n    attributes: [],\n  },\n  isLoading: true,\n};\n\nconst ONE_SIDE_RELATIONS = ['oneWay', 'manyWay'];\n\nconst getOppositeRelation = (originalRelation?: Schema.Attribute.RelationKind.Any) => {\n  if (originalRelation === 'manyToOne') {\n    return 'oneToMany';\n  }\n\n  if (originalRelation === 'oneToMany') {\n    return 'manyToOne';\n  }\n\n  return originalRelation;\n};\n\nconst findAttributeIndex = (type: any, attributeToFind?: string) => {\n  return type.attributes.findIndex(({ name }: { name: string }) => name === attributeToFind);\n};\n\ntype InitPayload = {\n  components: Record<string, Component>;\n  contentTypes: Record<string, ContentType>;\n  reservedNames: DataManagerStateType['reservedNames'];\n};\n\ntype AddAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Struct.ModelType;\n  targetUid: string;\n};\n\ntype AddCreateComponentToDynamicZonePayload = {\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  dynamicZoneTarget: string;\n  componentsToAdd: Internal.UID.Component[];\n};\n\ntype AddCustomFieldAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Struct.ModelType;\n  targetUid: string;\n};\n\ntype ChangeDynamicZoneComponentsPayload = {\n  dynamicZoneTarget: string;\n  newComponents: Internal.UID.Component[];\n  forTarget: Struct.ModelType;\n  targetUid: string;\n};\n\ntype CreateComponentSchemaPayload = {\n  uid: string;\n  data: {\n    icon: string;\n    displayName: string;\n  };\n  componentCategory: string;\n};\n\ntype CreateSchemaPayload = {\n  uid: string;\n  data: {\n    displayName: string;\n    singularName: string;\n    pluralName: string;\n    kind: Struct.ContentTypeKind;\n    draftAndPublish: boolean;\n    pluginOptions: Record<string, any>;\n  };\n};\n\ntype EditAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  name: string;\n};\n\ntype EditCustomFieldAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  name: string;\n};\n\ntype RemoveComponentFromDynamicZonePayload = {\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  dzName: string;\n  componentToRemoveIndex: number;\n};\n\ntype RemoveFieldPayload = {\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  attributeToRemoveName: string;\n};\n\ntype UpdateComponentSchemaPayload = {\n  data: {\n    icon: string;\n    displayName: string;\n  };\n  uid: Internal.UID.Component;\n};\n\ntype UpdateComponentUIDPayload = {\n  uid: Internal.UID.Component;\n  newComponentUID: Internal.UID.Component;\n};\n\ntype UpdateSchemaPayload = {\n  data: {\n    displayName: string;\n    kind: Struct.ContentTypeKind;\n    draftAndPublish: boolean;\n    pluginOptions: Record<string, any>;\n  };\n  uid: string;\n};\n\ntype MoveAttributePayload = {\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  from: number;\n  to: number;\n};\n\nconst getType = (\n  state: DataManagerStateType,\n  {\n    forTarget,\n    targetUid,\n  }: {\n    forTarget: Struct.ModelType;\n    targetUid: string;\n  }\n) => {\n  return forTarget === 'contentType' ? state.contentTypes[targetUid] : state.components[targetUid];\n};\n\n// TODO: use initial state when chnaging back to the initial state without knowing\nconst setStatus = (type: ContentType | Component, status: Status) => {\n  switch (type.status) {\n    case 'NEW':\n    case 'REMOVED': {\n      break;\n    }\n    default: {\n      type.status = status;\n    }\n  }\n};\n\nconst getNewStatus = (oldStatus: Status | undefined, newStatus: Status) => {\n  if (oldStatus === 'NEW' || oldStatus === 'REMOVED') {\n    return oldStatus;\n  }\n\n  return newStatus;\n};\n\nconst setAttributeStatus = (attribute: Record<string, any>, status: Status) => {\n  attribute.status = getNewStatus(attribute.status, status);\n};\n\nconst createAttribute = (properties: Record<string, any>): AnyAttribute => {\n  return {\n    ...properties,\n    status: 'NEW',\n  } as AnyAttribute;\n};\n\nconst setAttributeAt = (type: ContentType | Component, index: number, attribute: AnyAttribute) => {\n  const previousAttribute = type.attributes[index];\n\n  const newStatus = getNewStatus(previousAttribute.status, 'CHANGED');\n\n  type.attributes[index] = {\n    ...attribute,\n    status: newStatus,\n  };\n\n  setStatus(type, 'CHANGED');\n};\n\nconst pushAttribute = (type: ContentType | Component, attribute: AnyAttribute) => {\n  type.attributes.push(attribute);\n  setStatus(type, 'CHANGED');\n};\n\nconst removeAttributeAt = (type: ContentType | Component, index: number) => {\n  const attr = type.attributes[index];\n\n  setStatus(type, 'CHANGED');\n\n  if (attr.status === 'NEW') {\n    type.attributes.splice(index, 1);\n  } else {\n    setAttributeStatus(attr, 'REMOVED');\n  }\n};\n\nconst replaceAttributeAt = (\n  type: ContentType | Component,\n  index: number,\n  attribute: AnyAttribute\n) => {\n  type.attributes[index] = attribute;\n  setStatus(type, 'CHANGED');\n};\n\nconst removeAttributeByName = (type: ContentType | Component, name: string) => {\n  const idx = type.attributes.findIndex((attr) => attr.name === name);\n\n  const attr = type.attributes[idx];\n\n  setStatus(type, 'CHANGED');\n\n  if (attr.status === 'NEW') {\n    type.attributes.splice(idx, 1);\n  } else {\n    setAttributeStatus(attr, 'REMOVED');\n  }\n};\n\nconst updateType = (type: ContentType | Component, data: Record<string, any>) => {\n  merge(type, data);\n  setStatus(type, 'CHANGED');\n};\n\nconst slice = createUndoRedoSlice(\n  {\n    name: 'data-manager',\n    initialState,\n    reducers: {\n      init: (state, action: PayloadAction<InitPayload>) => {\n        const { components, contentTypes, reservedNames } = action.payload;\n\n        state.components = components;\n        state.initialComponents = components;\n        state.initialContentTypes = contentTypes;\n        state.contentTypes = contentTypes;\n        state.reservedNames = reservedNames;\n        state.isLoading = false;\n      },\n      createComponentSchema: (state, action: PayloadAction<CreateComponentSchemaPayload>) => {\n        const { uid, data, componentCategory } = action.payload;\n\n        const newSchema: Component = {\n          uid: uid as Internal.UID.Component,\n          status: 'NEW',\n          category: componentCategory,\n          modelName: data.displayName,\n          globalId: data.displayName,\n          info: {\n            icon: data.icon,\n            displayName: data.displayName,\n          },\n          attributes: [],\n          modelType: 'component',\n        };\n\n        state.components[uid as string] = newSchema;\n      },\n      createSchema: (state, action: PayloadAction<CreateSchemaPayload>) => {\n        const { uid, data } = action.payload;\n\n        const { displayName, singularName, pluralName, kind, draftAndPublish, pluginOptions } =\n          data;\n\n        const newSchema: ContentType = {\n          uid: uid as Internal.UID.ContentType,\n          status: 'NEW',\n          visible: true,\n          modelType: 'contentType',\n          restrictRelationsTo: null,\n          attributes: [],\n          kind,\n          modelName: displayName,\n          globalId: displayName,\n          options: {\n            draftAndPublish,\n          },\n          info: {\n            displayName,\n            singularName,\n            pluralName,\n          },\n          pluginOptions,\n        };\n\n        state.contentTypes[uid] = newSchema;\n      },\n      addAttribute: (state, action: PayloadAction<AddAttributePayload>) => {\n        const { attributeToSet, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const attribute = createAttribute(omit(attributeToSet, 'createComponent'));\n\n        if (attribute.type === 'relation') {\n          const target = attribute.target;\n          const targetAttribute = attribute.targetAttribute || null;\n          const relation = attribute.relation;\n          const relationType = getRelationType(relation, targetAttribute);\n\n          const isBidirectionalRelation = !['oneWay', 'manyWay'].includes(relationType);\n\n          if (isBidirectionalRelation) {\n            const oppositeAttribute = createAttribute({\n              name: targetAttribute,\n              relation: getOppositeRelation(relationType),\n              target: type.uid,\n              targetAttribute: attribute.name,\n              type: 'relation',\n              private: attribute.private,\n            });\n\n            const targetType = getType(state, { forTarget, targetUid: target });\n            pushAttribute(targetType, oppositeAttribute);\n          }\n        }\n\n        pushAttribute(type, attribute);\n        setStatus(type, 'CHANGED');\n      },\n      moveAttribute: (state, action: PayloadAction<MoveAttributePayload>) => {\n        const { forTarget, targetUid, from, to } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const attribute = type.attributes[from];\n        type.attributes.splice(from, 1);\n        type.attributes.splice(to, 0, attribute);\n        setStatus(type, 'CHANGED');\n      },\n      addCustomFieldAttribute: (state, action: PayloadAction<AddCustomFieldAttributePayload>) => {\n        const { attributeToSet, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        pushAttribute(type, createAttribute(attributeToSet));\n      },\n      addCreatedComponentToDynamicZone: (\n        state,\n        action: PayloadAction<AddCreateComponentToDynamicZonePayload>\n      ) => {\n        const { dynamicZoneTarget, componentsToAdd, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const dzAttributeIndex = findAttributeIndex(type, dynamicZoneTarget);\n        const attr = type.attributes[dzAttributeIndex] as Schema.Attribute.DynamicZone;\n\n        componentsToAdd.forEach((componentUid: Internal.UID.Component) => {\n          attr.components.push(componentUid);\n        });\n\n        setAttributeStatus(attr, 'CHANGED');\n        setStatus(type, 'CHANGED');\n      },\n      changeDynamicZoneComponents: (\n        state,\n        action: PayloadAction<ChangeDynamicZoneComponentsPayload>\n      ) => {\n        const { dynamicZoneTarget, newComponents, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const dzAttributeIndex = findAttributeIndex(type, dynamicZoneTarget);\n        const attr = type.attributes[dzAttributeIndex] as Schema.Attribute.DynamicZone;\n        const currentDZComponents = attr.components;\n\n        const updatedComponents = makeUnique([...currentDZComponents, ...newComponents]);\n\n        setStatus(type, 'CHANGED');\n        setAttributeStatus(attr, 'CHANGED');\n        attr.components = updatedComponents;\n      },\n      editAttribute: (state, action: PayloadAction<EditAttributePayload>) => {\n        const { name, attributeToSet, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const initialAttributeIndex = findAttributeIndex(type, name);\n\n        if (initialAttributeIndex === -1) {\n          return;\n        }\n\n        const previousAttribute = type.attributes[initialAttributeIndex];\n\n        setAttributeAt(type, initialAttributeIndex, attributeToSet as AnyAttribute);\n\n        if (previousAttribute.type !== attributeToSet.type) {\n          return;\n        }\n\n        if (previousAttribute.type !== 'relation' || attributeToSet.type !== 'relation') {\n          return;\n        }\n\n        const previousTarget = getType(state, {\n          forTarget: 'contentType',\n          targetUid: previousAttribute.target,\n        });\n        const newTarget = getType(state, {\n          forTarget: 'contentType',\n          targetUid: attributeToSet.target,\n        });\n\n        const previousTargetAttributeIndex = findAttributeIndex(\n          previousTarget,\n          previousAttribute.targetAttribute ?? ''\n        );\n\n        // remove old targetAttribute\n        if (previousAttribute.targetAttribute) {\n          removeAttributeByName(previousTarget, previousAttribute.targetAttribute);\n        }\n\n        const newRelationType = getRelationType(\n          attributeToSet.relation,\n          attributeToSet.targetAttribute\n        );\n        const isBidirectionnal = !ONE_SIDE_RELATIONS.includes(newRelationType);\n\n        if (isBidirectionnal) {\n          const newTargetAttribute = {\n            name: attributeToSet.targetAttribute,\n            type: 'relation',\n            relation: getOppositeRelation(attributeToSet.relation),\n            targetAttribute: attributeToSet.name,\n            target: type.uid,\n            private: previousAttribute.private ?? attributeToSet.private,\n            pluginOptions: previousAttribute.pluginOptions ?? attributeToSet.pluginOptions,\n            status: 'CHANGED',\n          } as AnyAttribute;\n\n          // create or recreate(at old index) targetAttribute\n          if (previousTargetAttributeIndex !== -1 && previousTarget.uid === newTarget.uid) {\n            // re-create at previousIdx if possible\n            replaceAttributeAt(newTarget, previousTargetAttributeIndex, newTargetAttribute);\n          } else {\n            pushAttribute(newTarget, {\n              ...newTargetAttribute,\n              status: 'NEW',\n            });\n          }\n        }\n      },\n      editCustomFieldAttribute: (state, action: PayloadAction<EditCustomFieldAttributePayload>) => {\n        const { forTarget, targetUid, name, attributeToSet } = action.payload;\n\n        const initialAttributeName = name;\n        const type = getType(state, { forTarget, targetUid });\n\n        const initialAttributeIndex = findAttributeIndex(type, initialAttributeName);\n\n        setAttributeAt(type, initialAttributeIndex, attributeToSet as AnyAttribute);\n      },\n      reloadPlugin: () => {\n        return initialState;\n      },\n      removeComponentFromDynamicZone: (\n        state,\n        action: PayloadAction<RemoveComponentFromDynamicZonePayload>\n      ) => {\n        const { dzName, componentToRemoveIndex, forTarget, targetUid } = action.payload;\n\n        const type =\n          forTarget === 'contentType' ? state.contentTypes[targetUid] : state.components[targetUid];\n\n        if (!type) {\n          return;\n        }\n\n        const dzAttributeIndex = findAttributeIndex(type, dzName);\n        const attr = type.attributes[dzAttributeIndex] as Schema.Attribute.DynamicZone;\n\n        setStatus(type, 'CHANGED');\n        setAttributeStatus(attr, 'CHANGED');\n        attr.components.splice(componentToRemoveIndex, 1);\n      },\n      removeField: (state, action: PayloadAction<RemoveFieldPayload>) => {\n        const { forTarget, targetUid, attributeToRemoveName } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const attributeToRemoveIndex = findAttributeIndex(type, attributeToRemoveName);\n        const attribute = type.attributes[attributeToRemoveIndex];\n\n        if (attribute.type === 'relation') {\n          const { target, relation, targetAttribute: targetAttributeName } = attribute;\n          const relationType = getRelationType(relation, targetAttributeName);\n\n          const isBidirectionnal = !ONE_SIDE_RELATIONS.includes(relationType!);\n\n          if (isBidirectionnal && targetAttributeName) {\n            const targetContentType = getType(state, { forTarget, targetUid: target });\n            const targetAttributeIndex = findAttributeIndex(targetContentType, targetAttributeName);\n\n            removeAttributeAt(targetContentType, targetAttributeIndex);\n          }\n        }\n\n        // Find all uid fields that have the targetField set to the field we are removing\n        type.attributes.forEach((attribute) => {\n          if (attribute.type === 'uid') {\n            if (attribute.targetField === attributeToRemoveName) {\n              delete attribute.targetField;\n            }\n          }\n        });\n\n        removeAttributeAt(type, attributeToRemoveIndex);\n      },\n      // only edits a component in practice\n      updateComponentSchema: (state, action: PayloadAction<UpdateComponentSchemaPayload>) => {\n        const { data, uid } = action.payload;\n\n        const type = state.components[uid];\n        if (!type) {\n          return;\n        }\n\n        updateType(type, {\n          info: {\n            displayName: data.displayName,\n            icon: data.icon,\n          },\n        });\n      },\n      updateComponentUid: (state, action: PayloadAction<UpdateComponentUIDPayload>) => {\n        const { newComponentUID, uid } = action.payload;\n\n        const type = state.components[uid];\n        if (!type || type.status !== 'NEW') {\n          return;\n        }\n\n        if (newComponentUID !== uid) {\n          const newType = { ...type, uid: newComponentUID };\n          state.components[newComponentUID] = newType;\n          delete state.components[uid];\n\n          // update the uid in the content types\n          Object.keys(state.contentTypes).forEach((contentTypeUid) => {\n            const contentType = state.contentTypes[contentTypeUid];\n\n            contentType.attributes.forEach((attribute) => {\n              if (attribute.type === 'dynamiczone') {\n                const newComponents = attribute.components.map((component: UID.Component) => {\n                  if (component === uid) {\n                    return newComponentUID;\n                  }\n\n                  return component;\n                });\n\n                attribute.components = newComponents;\n              }\n            });\n\n            contentType.attributes.forEach((attribute) => {\n              if (attribute.type === 'component' && attribute.component === uid) {\n                attribute.component = newComponentUID;\n              }\n            });\n          });\n\n          // update the uid in the other components\n          Object.keys(state.components).forEach((componentUid) => {\n            const component = state.components[componentUid];\n\n            component.attributes.forEach((attribute) => {\n              if (attribute.type === 'component' && attribute.component === uid) {\n                attribute.component = newComponentUID;\n              }\n            });\n          });\n        }\n      },\n      updateSchema: (state, action: PayloadAction<UpdateSchemaPayload>) => {\n        const { data, uid } = action.payload;\n\n        const { displayName, kind, draftAndPublish, pluginOptions } = data;\n\n        const type = state.contentTypes[uid];\n        if (!type) {\n          return;\n        }\n\n        updateType(type, {\n          info: {\n            displayName,\n          },\n          kind,\n          options: {\n            draftAndPublish,\n          },\n          pluginOptions,\n        });\n      },\n      deleteComponent: (state, action: PayloadAction<Internal.UID.Component>) => {\n        const uid = action.payload;\n\n        // remove the compo from the components\n        if (state.components[uid].status === 'NEW') {\n          delete state.components[uid];\n        } else {\n          setStatus(state.components[uid], 'REMOVED');\n        }\n\n        // remove the compo from the content types\n        Object.keys(state.contentTypes).forEach((contentTypeUid) => {\n          const contentType = state.contentTypes[contentTypeUid];\n\n          // remove from dynamic zones\n          contentType.attributes.forEach((attribute) => {\n            if (attribute.type === 'dynamiczone') {\n              const newComponents = attribute.components.filter(\n                (component: unknown) => component !== uid\n              );\n\n              attribute.components = newComponents;\n            }\n          });\n\n          contentType.attributes.forEach((attribute) => {\n            if (attribute.type === 'component' && attribute.component === uid) {\n              removeAttributeByName(contentType, attribute.name);\n            }\n          });\n        });\n\n        // remove the compo from other components\n        Object.keys(state.components).forEach((componentUid) => {\n          const component = state.components[componentUid];\n\n          component.attributes.forEach((attribute) => {\n            if (attribute.type === 'component' && attribute.component === uid) {\n              removeAttributeByName(component, attribute.name);\n            }\n          });\n        });\n      },\n      deleteContentType: (state, action: PayloadAction<Internal.UID.ContentType>) => {\n        const uid = action.payload;\n        const type = state.contentTypes[uid];\n\n        // just drop new content types\n        if (type.status === 'NEW') {\n          delete state.contentTypes[uid];\n        } else {\n          setStatus(type, 'REMOVED');\n        }\n\n        // remove the content type from the components\n        Object.keys(state.components).forEach((componentUid) => {\n          const component = state.components[componentUid];\n\n          component.attributes.forEach((attribute) => {\n            if (attribute.type === 'relation' && attribute.target === uid) {\n              removeAttributeByName(component, attribute.name);\n            }\n          });\n        });\n\n        // remove the content type from the content types\n        Object.keys(state.contentTypes).forEach((contentTypeUid) => {\n          const contentType = state.contentTypes[contentTypeUid];\n\n          contentType.attributes.forEach((attribute) => {\n            if (attribute.type === 'relation' && attribute.target === uid) {\n              removeAttributeByName(contentType, attribute.name);\n            }\n          });\n        });\n      },\n\n      applyChange(\n        state,\n        reducerAction: PayloadAction<{\n          action: 'add' | 'update' | 'delete';\n          schema: ContentType | Component;\n        }>\n      ) {\n        const { action, schema } = reducerAction.payload;\n\n        switch (action) {\n          case 'add': {\n            // generate a uid ?\n            const uid = schema.uid;\n\n            if (schema.modelType === 'component') {\n              state.components[uid] = {\n                ...formatSchema(schema),\n                status: 'NEW',\n              };\n            } else {\n              state.contentTypes[uid] = {\n                ...formatSchema(schema),\n                status: 'NEW',\n              };\n            }\n          }\n        }\n      },\n    },\n  },\n  {\n    limit: 50,\n    excludeActionsFromHistory: ['reloadPlugin', 'init'],\n    stateSelector: (state) => {\n      if (!state) {\n        return {};\n      }\n\n      return {\n        components: state.components,\n        contentTypes: state.contentTypes,\n      };\n    },\n    discard: (state) => {\n      state.components = state.initialComponents;\n      state.contentTypes = state.initialContentTypes;\n    },\n  }\n);\n\nexport type State = ReturnType<typeof slice.reducer>;\nexport const { reducer, actions } = slice;\nexport { initialState };\n", "import slugify from '@sindresorhus/slugify';\n\nexport const nameToSlug = (name: string) => slugify(name, { separator: '-' });\n", "import { nameToSlug } from '../../../utils/nameToSlug';\n\nimport type { Internal } from '@strapi/types';\n\nconst createUid = (name: string): Internal.UID.ContentType => {\n  const modelName = nameToSlug(name);\n  return `api::${modelName}.${modelName}`;\n};\n\n// From `content-type-builder/services/Components/createComponentUid`\nconst createComponentUid = (name: string, category: string): Internal.UID.Component => {\n  return `${nameToSlug(category)}.${nameToSlug(name)}`;\n};\n\nexport { createComponentUid, createUid };\n", "export const customFieldDefaultOptionsReducer = (acc: any, option: any) => {\n  if (option.items) {\n    return option.items.reduce(customFieldDefaultOptionsReducer, acc);\n  }\n\n  if ('defaultValue' in option) {\n    const { name, defaultValue } = option;\n    acc.push({ name, defaultValue });\n  }\n\n  return acc;\n};\n", "/* eslint-disable no-confusing-arrow */\n\nimport type { Schema } from '@strapi/types';\n\nconst shouldPluralizeName = (nature: Schema.Attribute.RelationKind.Any) =>\n  ['manyToMany', 'oneToMany', 'manyWay'].includes(nature) ? 2 : 1;\n\nconst shouldPluralizeTargetAttribute = (nature: Schema.Attribute.RelationKind.Any) =>\n  ['manyToMany', 'manyToOne'].includes(nature) ? 2 : 1;\n\nexport { shouldPluralizeName, shouldPluralizeTargetAttribute };\n", "import { createSlice, type PayloadAction } from '@reduxjs/toolkit';\nimport set from 'lodash/set';\nimport snakeCase from 'lodash/snakeCase';\nimport pluralize from 'pluralize';\n\nimport { getRelationType } from '../../utils/getRelationType';\nimport { nameToSlug } from '../../utils/nameToSlug';\n\nimport { createComponentUid } from './utils/createUid';\nimport { customFieldDefaultOptionsReducer } from './utils/customFieldDefaultOptionsReducer';\nimport { shouldPluralizeName, shouldPluralizeTargetAttribute } from './utils/relations';\n\nimport type { Schema, UID } from '@strapi/types';\n\nexport type State = {\n  formErrors: Record<string, any>;\n  modifiedData: Record<string, any>;\n  initialData: Record<string, any>;\n  componentToCreate: Record<string, any>;\n  isCreatingComponentWhileAddingAField: boolean;\n};\n\nconst initialState: State = {\n  formErrors: {},\n  modifiedData: {},\n  initialData: {},\n  componentToCreate: {},\n  isCreatingComponentWhileAddingAField: false,\n};\n\ntype OnChangePayload = {\n  keys: string[];\n  value: any;\n};\n\ntype OnChangeRelationTargetPayload = {\n  target: {\n    oneThatIsCreatingARelationWithAnother: string;\n    selectedContentTypeFriendlyName: string;\n    targetContentTypeAllowedRelations: Schema.Attribute.RelationKind.Any[] | null;\n    value: string;\n  };\n};\n\ntype OnChangeRelationTypePayload = {\n  target: {\n    oneThatIsCreatingARelationWithAnother: string;\n    value: Schema.Attribute.RelationKind.Any;\n  };\n};\n\ntype ResetPropsAndSetFormForAddingAnExistingCompoPayload = {\n  uid: UID.Schema;\n  options?: Record<string, any>;\n};\n\ntype ResetPropsAndSaveCurrentDataPayload = {\n  uid: UID.Schema;\n  options?: Record<string, any>;\n};\n\ntype SetDataToEditPayload = {\n  data: Record<string, any>;\n};\n\ntype SetAttributeDataSchemaPayload =\n  | {\n      isEditing: true;\n      modifiedDataToSetForEditing: Record<string, any>;\n      uid: UID.Schema;\n    }\n  | {\n      isEditing: false;\n      modifiedDataToSetForEditing: Record<string, any>;\n      attributeType: string;\n      nameToSetForRelation: string;\n      targetUid: string;\n      step: string | null;\n      options?: Record<string, any>;\n      uid: UID.Schema;\n    };\n\ntype SetCustomFieldDataSchemaPayload =\n  | {\n      isEditing: true;\n      modifiedDataToSetForEditing: Record<string, any>;\n      uid: UID.Schema;\n    }\n  | {\n      isEditing: false;\n      modifiedDataToSetForEditing: Record<string, any>;\n      customField: Record<string, any>;\n      options?: Record<string, any>;\n      uid: UID.Schema;\n    };\n\ntype SetDynamicZoneDataSchemaPayload = {\n  attributeToEdit: Record<string, any>;\n};\n\ntype SetErrorsPayload = {\n  errors: Record<string, any>;\n};\n\nconst slice = createSlice({\n  name: 'formModal',\n  initialState,\n  reducers: {\n    onChange: (state, action: PayloadAction<OnChangePayload>) => {\n      const { keys, value } = action.payload;\n      const obj = state.modifiedData;\n      const hasDefaultValue = Boolean(obj.default);\n\n      // There is no need to remove the default key if the default value isn't defined\n      if (hasDefaultValue && keys.length === 1 && keys.includes('type')) {\n        const previousType = obj.type;\n\n        if (previousType && ['date', 'datetime', 'time'].includes(previousType)) {\n          // return obj.updateIn(keys, () => value).remove('default');\n          delete state.modifiedData.default;\n        }\n      }\n\n      set(state, ['modifiedData', ...keys], value);\n    },\n    onChangeRelationTarget: (state, action: PayloadAction<OnChangeRelationTargetPayload>) => {\n      const {\n        target: {\n          oneThatIsCreatingARelationWithAnother,\n          selectedContentTypeFriendlyName,\n          targetContentTypeAllowedRelations,\n          value,\n        },\n      } = action.payload;\n      // Special case for the admin user...\n      let didChangeRelationTypeBecauseOfRestrictedRelation = false;\n      let changedRelationType: Schema.Attribute.RelationKind.Any | null = null;\n\n      set(state, ['modifiedData', 'target'], value);\n\n      const modifiedData = state.modifiedData;\n\n      // Don't change the relation type if the allowed relations are not restricted\n      // TODO: replace with an obj { relation: 'x', bidirctional: true|false } when BE ready\n      if (Array.isArray(targetContentTypeAllowedRelations)) {\n        const currentRelationType = getRelationType(\n          modifiedData.relation,\n          modifiedData.targetAttribute\n        );\n\n        if (\n          currentRelationType &&\n          !targetContentTypeAllowedRelations.includes(currentRelationType)\n        ) {\n          const relationToSet = targetContentTypeAllowedRelations[0];\n          didChangeRelationTypeBecauseOfRestrictedRelation = true;\n          changedRelationType = relationToSet;\n\n          if (relationToSet === 'oneWay') {\n            set(state, ['modifiedData', 'relation'], 'oneToOne');\n          } else if (relationToSet === 'manyWay') {\n            set(state, ['modifiedData', 'relation'], 'oneToMany');\n          } else {\n            set(state, ['modifiedData', 'relation'], relationToSet);\n          }\n        }\n      }\n\n      let nameToSet: string;\n\n      if (didChangeRelationTypeBecauseOfRestrictedRelation && changedRelationType) {\n        nameToSet = pluralize(\n          snakeCase(nameToSlug(selectedContentTypeFriendlyName)),\n          shouldPluralizeName(changedRelationType)\n        );\n      } else {\n        nameToSet = pluralize(\n          snakeCase(nameToSlug(selectedContentTypeFriendlyName)),\n\n          shouldPluralizeName(modifiedData.relation)\n        );\n      }\n\n      set(state, ['modifiedData', 'name'], nameToSet);\n\n      const currentTargetAttribute = state.modifiedData.targetAttribute;\n\n      if (currentTargetAttribute === null) {\n        return;\n      }\n\n      // Changing the target and the relation is either oneWay or manyWay\n      // Case when we need to change the relation to oneWay (ex: admin user)\n      if (\n        didChangeRelationTypeBecauseOfRestrictedRelation &&\n        changedRelationType &&\n        ['oneWay', 'manyWay'].includes(changedRelationType)\n      ) {\n        set(state, ['modifiedData', 'targetAttribute'], null);\n\n        return;\n      }\n\n      const targetAttributeToSet = pluralize(\n        snakeCase(nameToSlug(oneThatIsCreatingARelationWithAnother)),\n        shouldPluralizeTargetAttribute(modifiedData.relation)\n      );\n\n      set(state, ['modifiedData', 'targetAttribute'], targetAttributeToSet);\n    },\n    onChangeRelationType: (state, action: PayloadAction<OnChangeRelationTypePayload>) => {\n      const {\n        target: { oneThatIsCreatingARelationWithAnother, value },\n      } = action.payload;\n\n      const currentName = state.modifiedData.name;\n\n      // Switching from oneWay\n      if (!['oneWay', 'manyWay'].includes(value)) {\n        set(state, ['modifiedData', 'relation'], value);\n        const currentTargetAttribute = state.modifiedData.targetAttribute;\n\n        set(\n          state,\n          ['modifiedData', 'name'],\n          pluralize(snakeCase(nameToSlug(currentName)), shouldPluralizeName(value))\n        );\n\n        set(\n          state,\n          ['modifiedData', 'targetAttribute'],\n          pluralize(\n            currentTargetAttribute || snakeCase(nameToSlug(oneThatIsCreatingARelationWithAnother)),\n            shouldPluralizeTargetAttribute(value)\n          )\n        );\n\n        return;\n      }\n\n      if (value === 'oneWay') {\n        set(state, ['modifiedData', 'relation'], 'oneToOne');\n        set(state, ['modifiedData', 'targetAttribute'], null);\n        set(state, ['modifiedData', 'name'], pluralize(snakeCase(currentName), 1));\n\n        return;\n      }\n\n      // manyWay\n      set(state, ['modifiedData', 'relation'], 'oneToMany');\n      set(state, ['modifiedData', 'targetAttribute'], null);\n      set(state, ['modifiedData', 'name'], pluralize(snakeCase(currentName), 2));\n    },\n    resetProps: () => {\n      return initialState;\n    },\n    resetPropsAndSetFormForAddingAnExistingCompo: (\n      state,\n      action: PayloadAction<ResetPropsAndSetFormForAddingAnExistingCompoPayload>\n    ) => {\n      const { options = {} } = action.payload;\n\n      return {\n        ...initialState,\n        modifiedData: {\n          type: 'component',\n          repeatable: true,\n          ...options,\n        },\n      };\n    },\n    resetPropsAndSaveCurrentData: (\n      state,\n      action: PayloadAction<ResetPropsAndSaveCurrentDataPayload>\n    ) => {\n      const { options = {} } = action.payload;\n      // This is run when the user has created a new component\n      const componentToCreate = state.modifiedData.componentToCreate;\n      const modifiedData = {\n        displayName: componentToCreate.displayName,\n        type: 'component',\n        repeatable: false,\n        ...options,\n        component: createComponentUid(componentToCreate.displayName, componentToCreate.category),\n      };\n\n      return {\n        ...initialState,\n        componentToCreate,\n        modifiedData,\n        isCreatingComponentWhileAddingAField: state.modifiedData.createComponent,\n      };\n    },\n    resetPropsAndSetTheFormForAddingACompoToADz: (state) => {\n      const createdDZ = state.modifiedData;\n      const dataToSet = {\n        ...createdDZ,\n        createComponent: true,\n        componentToCreate: { type: 'component' },\n      };\n\n      return { ...initialState, modifiedData: dataToSet };\n    },\n    setDataToEdit: (state, action: PayloadAction<SetDataToEditPayload>) => {\n      const { data } = action.payload;\n      state.modifiedData = data;\n      state.initialData = data;\n    },\n    setAttributeDataSchema: (state, action: PayloadAction<SetAttributeDataSchemaPayload>) => {\n      const { isEditing } = action.payload;\n\n      if (isEditing === true) {\n        const { modifiedDataToSetForEditing } = action.payload;\n        state.modifiedData = modifiedDataToSetForEditing;\n        state.initialData = modifiedDataToSetForEditing;\n\n        return;\n      }\n\n      const { attributeType, nameToSetForRelation, targetUid, step, options = {} } = action.payload;\n\n      let dataToSet;\n\n      if (attributeType === 'component') {\n        if (step === '1') {\n          dataToSet = {\n            type: 'component',\n            createComponent: true,\n            componentToCreate: { type: 'component' },\n          };\n        } else {\n          dataToSet = {\n            ...options,\n            type: 'component',\n            repeatable: true,\n          };\n        }\n      } else if (attributeType === 'dynamiczone') {\n        dataToSet = {\n          ...options,\n          type: 'dynamiczone',\n          components: [],\n        };\n      } else if (attributeType === 'text') {\n        dataToSet = { ...options, type: 'string' };\n      } else if (attributeType === 'number' || attributeType === 'date') {\n        dataToSet = options;\n      } else if (attributeType === 'media') {\n        dataToSet = {\n          allowedTypes: ['images', 'files', 'videos', 'audios'],\n          type: 'media',\n          multiple: true,\n          ...options,\n        };\n      } else if (attributeType === 'enumeration') {\n        dataToSet = { ...options, type: 'enumeration', enum: [] };\n      } else if (attributeType === 'relation') {\n        dataToSet = {\n          name: snakeCase(nameToSetForRelation),\n          relation: 'oneToOne',\n          targetAttribute: null,\n          target: targetUid,\n          type: 'relation',\n        };\n      } else {\n        dataToSet = { ...options, type: attributeType, default: null };\n      }\n\n      state.modifiedData = dataToSet;\n    },\n    setCustomFieldDataSchema: (state, action: PayloadAction<SetCustomFieldDataSchemaPayload>) => {\n      const { payload } = action;\n\n      if (payload.isEditing === true) {\n        const { modifiedDataToSetForEditing } = action.payload;\n        state.modifiedData = modifiedDataToSetForEditing;\n        state.initialData = modifiedDataToSetForEditing;\n\n        return;\n      }\n\n      const { customField, options = {} } = payload;\n\n      state.modifiedData = { ...options, type: customField.type };\n\n      const allOptions = [\n        ...(customField?.options?.base || []),\n        ...(customField?.options?.advanced || []),\n      ];\n\n      const optionDefaults = allOptions.reduce(customFieldDefaultOptionsReducer, []);\n\n      if (optionDefaults.length) {\n        optionDefaults.forEach(({ name, defaultValue }: { name: string; defaultValue: string }) =>\n          set(state.modifiedData, name, defaultValue)\n        );\n      }\n    },\n    setDynamicZoneDataSchema: (state, action: PayloadAction<SetDynamicZoneDataSchemaPayload>) => {\n      const { attributeToEdit } = action.payload;\n      state.modifiedData = attributeToEdit;\n      state.initialData = attributeToEdit;\n    },\n    setErrors: (state, action: PayloadAction<SetErrorsPayload>) => {\n      state.formErrors = action.payload.errors;\n    },\n  },\n});\n\nexport { initialState };\nexport const { actions, reducer } = slice;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAUA,QAAI,WAAW,IAAI;AAGnB,QAAI,YAAY;AAGhB,QAAI,UAAU;AAGd,QAAI,oBAAoB;AAAxB,QACI,sBAAsB;AAG1B,QAAI,UAAU,MAAM,oBAAoB,sBAAsB;AAM9D,QAAI,cAAc,OAAO,SAAS,GAAG;AAGrC,QAAI,kBAAkB;AAAA;AAAA,MAEpB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MACnC,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA;AAAA,MAER,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAA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",
  "names": ["require_escape_string_regexp", "slugify", "counter", "PERMISSIONS", "main", "action", "subject", "MAX_COMPONENT_DEPTH", "AutoReloadOverlayBlockerContext", "createContext", "lockAppWithAutoreload", "unlockAppWithAutoreload", "MAX_ELAPSED_TIME", "AutoReloadOverlayBlockerProvider", "children", "isOpen", "setIsOpen", "useState", "config", "setConfig", "failed", "setFailed", "useCallback", "React", "useEffect", "timeout", "setTimeout", "clearTimeout", "displayedIcon", "icon", "description", "id", "defaultMessage", "title", "autoReloadValue", "useMemo", "_jsxs", "Provider", "value", "_jsx", "Blocker", "formatMessage", "useIntl", "globalThis", "document", "body", "createPortal", "Overlay", "direction", "alignItems", "gap", "Flex", "Typography", "tag", "variant", "textColor", "fontSize", "fontWeight", "IconBox", "padding", "background", "borderColor", "LoaderReload", "width", "height", "Clock", "Box", "marginTop", "Link", "href", "isExternal", "rotation", "keyframes", "styled", "ArrowClockwise", "theme", "colors", "neutral0", "primary600", "useAutoReloadOverlayBlocker", "useContext", "makeUnique", "array", "Set", "isCallable", "obj", "createUndoRedoSlice", "sliceOpts", "opts", "initialState", "past", "future", "current", "limit", "selector", "stateSelector", "state", "wrappedReducers", "Object", "keys", "reducers", "reduce", "acc", "actionName", "reducer", "Error", "action", "newCurrent", "excludeActionsFromHistory", "includes", "undefined", "originalCurrent", "original", "push", "length", "shift", "createSlice", "name", "undo", "previous", "pop", "redo", "next", "discardAll", "discard", "clearHistory", "formatSchema", "schema", "attributes", "toAttributesArray", "Object", "keys", "reduce", "acc", "current", "push", "name", "initialState", "components", "contentTypes", "initialComponents", "initialContentTypes", "reservedNames", "models", "attributes", "isLoading", "ONE_SIDE_RELATIONS", "getOppositeRelation", "originalRelation", "findAttributeIndex", "type", "attributeToFind", "findIndex", "name", "getType", "state", "forTarget", "targetUid", "setStatus", "status", "getNewStatus", "oldStatus", "newStatus", "setAttributeStatus", "attribute", "createAttribute", "properties", "setAttributeAt", "index", "previousAttribute", "pushAttribute", "push", "removeAttributeAt", "attr", "splice", "replaceAttributeAt", "removeAttributeByName", "idx", "updateType", "data", "merge", "slice", "createUndoRedoSlice", "reducers", "init", "action", "payload", "createComponentSchema", "uid", "componentCategory", "newSchema", "category", "modelName", "displayName", "globalId", "info", "icon", "modelType", "createSchema", "singularName", "pluralName", "kind", "draftAndPublish", "pluginOptions", "visible", "restrictRelationsTo", "options", "addAttribute", "attributeToSet", "omit", "target", "targetAttribute", "relation", "relationType", "getRelationType", "isBidirectionalRelation", "includes", "oppositeAttribute", "private", "targetType", "moveAttribute", "from", "to", "addCustomFieldAttribute", "addCreatedComponentToDynamicZone", "dynamicZoneTarget", "componentsToAdd", "dzAttributeIndex", "forEach", "componentUid", "changeDynamicZoneComponents", "newComponents", "currentDZComponents", "updatedComponents", "makeUnique", "editAttribute", "initialAttributeIndex", "previousTarget", "newTarget", "previousTargetAttributeIndex", "newRelationType", "isBidirectionnal", "newTargetAttribute", "editCustomFieldAttribute", "initialAttributeName", "reloadPlugin", "removeComponentFromDynamicZone", "dzName", "componentToRemoveIndex", "removeField", "attributeToRemoveName", "attributeToRemoveIndex", "targetAttributeName", "targetContentType", "targetAttributeIndex", "targetField", "updateComponentSchema", "updateComponentUid", "newComponentUID", "newType", "Object", "keys", "contentTypeUid", "contentType", "map", "component", "updateSchema", "deleteComponent", "filter", "deleteContentType", "applyChange", "reducerAction", "schema", "formatSchema", "limit", "excludeActionsFromHistory", "stateSelector", "discard", "reducer", "actions", "nameToSlug", "name", "slugify", "separator", "createUid", "name", "modelName", "nameToSlug", "createComponentUid", "category", "customFieldDefaultOptionsReducer", "acc", "option", "items", "reduce", "name", "defaultValue", "push", "shouldPluralizeName", "nature", "includes", "shouldPluralizeTargetAttribute", "initialState", "formErrors", "modifiedData", "initialData", "componentToCreate", "isCreatingComponentWhileAddingAField", "slice", "createSlice", "name", "reducers", "onChange", "state", "action", "keys", "value", "payload", "obj", "hasDefaultValue", "Boolean", "default", "length", "includes", "previousType", "type", "set", "onChangeRelationTarget", "target", "oneThatIsCreatingARelationWithAnother", "selectedContentTypeFriendlyName", "targetContentTypeAllowedRelations", "didChangeRelationTypeBecauseOfRestrictedRelation", "changedRelationType", "Array", "isArray", "currentRelationType", "getRelationType", "relation", "targetAttribute", "relationToSet", "nameToSet", "pluralize", "snakeCase", "nameToSlug", "shouldPluralizeName", "currentTargetAttribute", "targetAttributeToSet", "shouldPluralizeTargetAttribute", "onChangeRelationType", "currentName", "resetProps", "resetPropsAndSetFormForAddingAnExistingCompo", "options", "repeatable", "resetPropsAndSaveCurrentData", "displayName", "component", "createComponentUid", "category", "createComponent", "resetPropsAndSetTheFormForAddingACompoToADz", "createdDZ", "dataToSet", "setDataToEdit", "data", "setAttributeDataSchema", "isEditing", "modifiedDataToSetForEditing", "attributeType", "nameToSetForRelation", "targetUid", "step", "components", "allowedTypes", "multiple", "enum", "setCustomFieldDataSchema", "customField", "allOptions", "base", "advanced", "optionDefaults", "reduce", "customFieldDefaultOptionsReducer", "forEach", "defaultValue", "setDynamicZoneDataSchema", "attributeToEdit", "setErrors", "errors", "actions", "reducer"]
}
