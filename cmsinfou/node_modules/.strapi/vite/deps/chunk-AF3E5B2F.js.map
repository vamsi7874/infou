{
  "version": 3,
  "sources": ["../../../@strapi/admin/ee/admin/src/services/auditLogs.ts", "../../../@strapi/admin/ee/admin/src/pages/SettingsPage/pages/AuditLogs/utils/getActionTypesDefaultMessages.ts"],
  "sourcesContent": ["import { adminApi } from '../../../../admin/src/services/api';\nimport * as AuditLogs from '../../../../shared/contracts/audit-logs';\n\nconst auditLogsService = adminApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getAuditLogs: builder.query<AuditLogs.GetAll.Response, AuditLogs.GetAll.Request['query']>({\n      query: (params) => ({\n        url: `/admin/audit-logs`,\n        config: {\n          params,\n        },\n      }),\n    }),\n    getAuditLog: builder.query<AuditLogs.Get.Response, AuditLogs.Get.Params['id']>({\n      query: (id) => `/admin/audit-logs/${id}`,\n    }),\n  }),\n  overrideExisting: false,\n});\n\nconst { useGetAuditLogsQuery, useGetAuditLogQuery } = auditLogsService;\n\nexport { useGetAuditLogsQuery, useGetAuditLogQuery };\n", "export const actionTypes = {\n  'entry.create': 'Create entry{model, select, undefined {} other { ({model})}}',\n  'entry.update': 'Update entry{model, select, undefined {} other { ({model})}}',\n  'entry.delete': 'Delete entry{model, select, undefined {} other { ({model})}}',\n  'entry.publish': 'Publish entry{model, select, undefined {} other { ({model})}}',\n  'entry.unpublish': 'Unpublish entry{model, select, undefined {} other { ({model})}}',\n  'media.create': 'Create media',\n  'media.update': 'Update media',\n  'media.delete': 'Delete media',\n  'media-folder.create': 'Create media folder',\n  'media-folder.update': 'Update media folder',\n  'media-folder.delete': 'Delete media folder',\n  'user.create': 'Create user',\n  'user.update': 'Update user',\n  'user.delete': 'Delete user',\n  'admin.auth.success': 'Admin login',\n  'admin.logout': 'Admin logout',\n  'content-type.create': 'Create content type',\n  'content-type.update': 'Update content type',\n  'content-type.delete': 'Delete content type',\n  'component.create': 'Create component',\n  'component.update': 'Update component',\n  'component.delete': 'Delete component',\n  'role.create': 'Create role',\n  'role.update': 'Update role',\n  'role.delete': 'Delete role',\n  'permission.create': 'Create permission',\n  'permission.update': 'Update permission',\n  'permission.delete': 'Delete permission',\n};\n\nexport const getDefaultMessage = (value: keyof typeof actionTypes) => {\n  return actionTypes[value] || value;\n};\n"],
  "mappings": ";;;;;AAGA,IAAMA,mBAAmBC,SAASC,gBAAgB;EAChDC,WAAW,CAACC,aAAa;IACvBC,cAAcD,QAAQE,MAAoE;MACxFA,OAAO,CAACC,YAAY;QAClBC,KAAK;QACLC,QAAQ;UACNF;QACF;;IAEJ,CAAA;IACAG,aAAaN,QAAQE,MAA0D;MAC7EA,OAAO,CAACK,OAAO,qBAAqBA,EAAAA;IACtC,CAAA;;EAEFC,kBAAkB;AACpB,CAAA;AAEA,IAAM,EAAEC,sBAAsBC,oBAAmB,IAAKd;;;ICpBzCe,cAAc;EACzB,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,mBAAmB;EACnB,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,uBAAuB;EACvB,uBAAuB;EACvB,uBAAuB;EACvB,eAAe;EACf,eAAe;EACf,eAAe;EACf,sBAAsB;EACtB,gBAAgB;EAChB,uBAAuB;EACvB,uBAAuB;EACvB,uBAAuB;EACvB,oBAAoB;EACpB,oBAAoB;EACpB,oBAAoB;EACpB,eAAe;EACf,eAAe;EACf,eAAe;EACf,qBAAqB;EACrB,qBAAqB;EACrB,qBAAqB;AACvB;AAEO,IAAMC,oBAAoB,CAACC,UAAAA;AAChC,SAAOF,YAAYE,KAAAA,KAAUA;AAC/B;",
  "names": ["auditLogsService", "adminApi", "injectEndpoints", "endpoints", "builder", "getAuditLogs", "query", "params", "url", "config", "getAuditLog", "id", "overrideExisting", "useGetAuditLogsQuery", "useGetAuditLogQuery", "actionTypes", "getDefaultMessage", "value"]
}
