{
  "version": 3,
  "sources": ["../../../@strapi/review-workflows/admin/src/constants.ts", "../../../@strapi/review-workflows/admin/src/services/api.ts", "../../../@strapi/review-workflows/admin/src/services/content-manager.ts"],
  "sourcesContent": ["import { lightTheme } from '@strapi/design-system';\n\nconst PLUGIN_ID = 'review-workflows';\n/**\n * The name of the feature in the license.\n */\nconst FEATURE_ID = 'review-workflows';\n\nexport const CHARGEBEE_WORKFLOW_ENTITLEMENT_NAME = 'numberOfWorkflows';\nexport const CHARGEBEE_STAGES_PER_WORKFLOW_ENTITLEMENT_NAME = 'stagesPerWorkflow';\n\nexport const STAGE_COLOR_DEFAULT = lightTheme.colors.primary600;\n\nexport { FEATURE_ID, PLUGIN_ID };\n", "import { adminApi } from '@strapi/admin/strapi-admin';\n\nconst reviewWorkflowsApi = adminApi.enhanceEndpoints({\n  addTagTypes: ['ReviewWorkflow', 'ReviewWorkflowStages', 'Document', 'ContentTypeSettings'],\n});\n\nexport { reviewWorkflowsApi };\n", "import * as Homepage from '../../../shared/contracts/homepage';\n\n/* eslint-disable check-file/filename-naming-convention */\nimport { reviewWorkflowsApi } from './api';\n\nimport type {\n  GetStages,\n  UpdateStage,\n  UpdateAssignee,\n} from '../../../shared/contracts/review-workflows';\nimport type { Contracts } from '@strapi/content-manager/_internal/shared';\n\ntype ContentType = Contracts.ContentTypes.ContentType;\ninterface ContentTypes {\n  collectionType: ContentType[];\n  singleType: ContentType[];\n}\n\nconst SINGLE_TYPES = 'single-types';\n\nconst contentManagerApi = reviewWorkflowsApi\n  .enhanceEndpoints({\n    addTagTypes: ['RecentlyAssignedList', 'RecentDocumentList'],\n  })\n  .injectEndpoints({\n    endpoints: (builder) => ({\n      getStages: builder.query<\n        {\n          stages: NonNullable<GetStages.Response['data']>;\n          meta: NonNullable<GetStages.Response['meta']>;\n        },\n        GetStages.Params & { slug: string; params?: object }\n      >({\n        query: ({ model, slug, id, params }) => ({\n          url: `/review-workflows/content-manager/${slug}/${model}/${id}/stages`,\n          method: 'GET',\n          config: {\n            params,\n          },\n        }),\n        transformResponse: (res: GetStages.Response) => {\n          return {\n            meta: res.meta ?? { workflowCount: 0 },\n            stages: res.data ?? [],\n          };\n        },\n        providesTags: ['ReviewWorkflowStages'],\n      }),\n      updateStage: builder.mutation<\n        UpdateStage.Response['data'],\n        UpdateStage.Request['body'] & UpdateStage.Params & { slug: string; params?: object }\n      >({\n        query: ({ model, slug, id, params, ...data }) => ({\n          url: `/review-workflows/content-manager/${slug}/${model}/${id}/stage`,\n          method: 'PUT',\n          data,\n          config: {\n            params,\n          },\n        }),\n        transformResponse: (res: UpdateStage.Response) => res.data,\n        invalidatesTags: (_result, _error, { slug, id, model }) => {\n          return [\n            {\n              type: 'Document',\n              id: slug !== SINGLE_TYPES ? `${model}_${id}` : model,\n            },\n            { type: 'Document', id: `${model}_LIST` },\n            'ReviewWorkflowStages',\n          ];\n        },\n      }),\n      updateAssignee: builder.mutation<\n        UpdateAssignee.Response['data'],\n        UpdateAssignee.Request['body'] & UpdateAssignee.Params & { slug: string; params?: object }\n      >({\n        query: ({ model, slug, id, params, ...data }) => ({\n          url: `/review-workflows/content-manager/${slug}/${model}/${id}/assignee`,\n          method: 'PUT',\n          data,\n          config: {\n            params,\n          },\n        }),\n        transformResponse: (res: UpdateAssignee.Response) => res.data,\n        invalidatesTags: (_result, _error, { slug, id, model }) => {\n          return [\n            {\n              type: 'Document',\n              id: slug !== SINGLE_TYPES ? `${model}_${id}` : model,\n            },\n            { type: 'Document', id: `${model}_LIST` },\n            'RecentlyAssignedList',\n          ];\n        },\n      }),\n      getContentTypes: builder.query<ContentTypes, void>({\n        query: () => ({\n          url: `/content-manager/content-types`,\n          method: 'GET',\n        }),\n        transformResponse: (res: { data: Contracts.ContentTypes.ContentType[] }) => {\n          return res.data.reduce<ContentTypes>(\n            (acc, curr) => {\n              if (curr.isDisplayed) {\n                acc[curr.kind].push(curr);\n              }\n              return acc;\n            },\n            {\n              collectionType: [],\n              singleType: [],\n            }\n          );\n        },\n      }),\n      getRecentlyAssignedDocuments: builder.query<\n        Homepage.GetRecentlyAssignedDocuments.Response['data'],\n        void\n      >({\n        query: () => '/review-workflows/homepage/recently-assigned-documents',\n        transformResponse: (response: Homepage.GetRecentlyAssignedDocuments.Response) =>\n          response.data,\n        providesTags: (_, _err) => ['RecentlyAssignedList', 'RecentDocumentList'],\n      }),\n    }),\n    overrideExisting: true,\n  });\n\nconst {\n  useGetStagesQuery,\n  useUpdateStageMutation,\n  useUpdateAssigneeMutation,\n  useGetContentTypesQuery,\n  useGetRecentlyAssignedDocumentsQuery,\n} = contentManagerApi;\n\nexport {\n  useGetStagesQuery,\n  useUpdateStageMutation,\n  useUpdateAssigneeMutation,\n  useGetContentTypesQuery,\n  useGetRecentlyAssignedDocumentsQuery,\n};\nexport type { ContentTypes, ContentType };\n"],
  "mappings": ";;;;;;;;AAEA,IAAMA,YAAY;AAGjB,IACKC,aAAa;AAEZ,IAAMC,sCAAsC;AAC5C,IAAMC,iDAAiD;IAEjDC,sBAAsBC,WAAWC,OAAOC;;;ACT/CC,IAAAA,qBAAqBC,SAASC,iBAAiB;EACnDC,aAAa;IAAC;IAAkB;IAAwB;IAAY;EAAsB;AAC5F,CAAA;;;ACcA,IAAMC,eAAe;AAErB,IAAMC,oBAAoBC,mBACvBC,iBAAiB;EAChBC,aAAa;IAAC;IAAwB;EAAqB;AAC7D,CAAA,EACCC,gBAAgB;EACfC,WAAW,CAACC,aAAa;IACvBC,WAAWD,QAAQE,MAMjB;MACAA,OAAO,CAAC,EAAEC,OAAOC,MAAMC,IAAIC,OAAM,OAAQ;QACvCC,KAAK,qCAAqCH,IAAK,IAAGD,KAAAA,IAASE,EAAG;QAC9DG,QAAQ;QACRC,QAAQ;UACNH;QACF;;MAEFI,mBAAmB,CAACC,QAAAA;AAClB,eAAO;UACLC,MAAMD,IAAIC,QAAQ;YAAEC,eAAe;UAAE;UACrCC,QAAQH,IAAII,QAAQ,CAAA;QACtB;MACF;MACAC,cAAc;QAAC;MAAuB;IACxC,CAAA;IACAC,aAAajB,QAAQkB,SAGnB;MACAhB,OAAO,CAAC,EAAEC,OAAOC,MAAMC,IAAIC,QAAQ,GAAGS,KAAAA,OAAY;QAChDR,KAAK,qCAAqCH,IAAK,IAAGD,KAAAA,IAASE,EAAG;QAC9DG,QAAQ;QACRO;QACAN,QAAQ;UACNH;QACF;;MAEFI,mBAAmB,CAACC,QAA8BA,IAAII;MACtDI,iBAAiB,CAACC,SAASC,QAAQ,EAAEjB,MAAMC,IAAIF,MAAK,MAAE;AACpD,eAAO;UACL;YACEmB,MAAM;YACNjB,IAAID,SAASX,eAAe,GAAGU,KAAAA,IAASE,EAAG,KAAIF;UACjD;UACA;YAAEmB,MAAM;YAAYjB,IAAI,GAAGF,KAAM;UAAO;UACxC;QACD;MACH;IACF,CAAA;IACAoB,gBAAgBvB,QAAQkB,SAGtB;MACAhB,OAAO,CAAC,EAAEC,OAAOC,MAAMC,IAAIC,QAAQ,GAAGS,KAAAA,OAAY;QAChDR,KAAK,qCAAqCH,IAAK,IAAGD,KAAAA,IAASE,EAAG;QAC9DG,QAAQ;QACRO;QACAN,QAAQ;UACNH;QACF;;MAEFI,mBAAmB,CAACC,QAAiCA,IAAII;MACzDI,iBAAiB,CAACC,SAASC,QAAQ,EAAEjB,MAAMC,IAAIF,MAAK,MAAE;AACpD,eAAO;UACL;YACEmB,MAAM;YACNjB,IAAID,SAASX,eAAe,GAAGU,KAAAA,IAASE,EAAG,KAAIF;UACjD;UACA;YAAEmB,MAAM;YAAYjB,IAAI,GAAGF,KAAM;UAAO;UACxC;QACD;MACH;IACF,CAAA;IACAqB,iBAAiBxB,QAAQE,MAA0B;MACjDA,OAAO,OAAO;QACZK,KAAK;QACLC,QAAQ;;MAEVE,mBAAmB,CAACC,QAAAA;AAClB,eAAOA,IAAII,KAAKU,OACd,CAACC,KAAKC,SAAAA;AACJ,cAAIA,KAAKC,aAAa;AACpBF,gBAAIC,KAAKE,IAAI,EAAEC,KAAKH,IAAAA;UACtB;AACA,iBAAOD;WAET;UACEK,gBAAgB,CAAA;UAChBC,YAAY,CAAA;QACd,CAAA;MAEJ;IACF,CAAA;IACAC,8BAA8BjC,QAAQE,MAGpC;MACAA,OAAO,MAAM;MACbQ,mBAAmB,CAACwB,aAClBA,SAASnB;MACXC,cAAc,CAACmB,GAAGC,SAAS;QAAC;QAAwB;MAAqB;IAC3E,CAAA;;EAEFC,kBAAkB;AACpB,CAAA;AAEI,IAAA,EACJC,mBACAC,wBACAC,2BACAC,yBACAC,qCAAoC,IAClChD;",
  "names": ["PLUGIN_ID", "FEATURE_ID", "CHARGEBEE_WORKFLOW_ENTITLEMENT_NAME", "CHARGEBEE_STAGES_PER_WORKFLOW_ENTITLEMENT_NAME", "STAGE_COLOR_DEFAULT", "lightTheme", "colors", "primary600", "reviewWorkflowsApi", "adminApi", "enhanceEndpoints", "addTagTypes", "SINGLE_TYPES", "contentManagerApi", "reviewWorkflowsApi", "enhanceEndpoints", "addTagTypes", "injectEndpoints", "endpoints", "builder", "getStages", "query", "model", "slug", "id", "params", "url", "method", "config", "transformResponse", "res", "meta", "workflowCount", "stages", "data", "providesTags", "updateStage", "mutation", "invalidatesTags", "_result", "_error", "type", "updateAssignee", "getContentTypes", "reduce", "acc", "curr", "isDisplayed", "kind", "push", "collectionType", "singleType", "getRecentlyAssignedDocuments", "response", "_", "_err", "overrideExisting", "useGetStagesQuery", "useUpdateStageMutation", "useUpdateAssigneeMutation", "useGetContentTypesQuery", "useGetRecentlyAssignedDocumentsQuery"]
}
