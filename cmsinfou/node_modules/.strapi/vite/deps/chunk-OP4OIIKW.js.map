{
  "version": 3,
  "sources": ["../../../es-errors/type.js", "../../../object-inspect/index.js", "../../../side-channel-list/index.js", "../../../es-object-atoms/index.js", "../../../es-errors/index.js", "../../../es-errors/eval.js", "../../../es-errors/range.js", "../../../es-errors/ref.js", "../../../es-errors/syntax.js", "../../../es-errors/uri.js", "../../../math-intrinsics/abs.js", "../../../math-intrinsics/floor.js", "../../../math-intrinsics/max.js", "../../../math-intrinsics/min.js", "../../../math-intrinsics/pow.js", "../../../math-intrinsics/round.js", "../../../math-intrinsics/isNaN.js", "../../../math-intrinsics/sign.js", "../../../gopd/gOPD.js", "../../../gopd/index.js", "../../../es-define-property/index.js", "../../../has-symbols/shams.js", "../../../has-symbols/index.js", "../../../get-proto/Reflect.getPrototypeOf.js", "../../../get-proto/Object.getPrototypeOf.js", "../../../function-bind/implementation.js", "../../../function-bind/index.js", "../../../call-bind-apply-helpers/functionCall.js", "../../../call-bind-apply-helpers/functionApply.js", "../../../call-bind-apply-helpers/reflectApply.js", "../../../call-bind-apply-helpers/actualApply.js", "../../../call-bind-apply-helpers/index.js", "../../../dunder-proto/get.js", "../../../get-proto/index.js", "../../../hasown/index.js", "../../../get-intrinsic/index.js", "../../../call-bound/index.js", "../../../side-channel-map/index.js", "../../../side-channel-weakmap/index.js", "../../../side-channel/index.js", "../../../qs/lib/formats.js", "../../../qs/lib/utils.js", "../../../qs/lib/stringify.js", "../../../qs/lib/parse.js", "../../../qs/lib/index.js", "../../../lodash/fp/_mapping.js", "../../../lodash/fp/placeholder.js", "../../../lodash/fp/_baseConvert.js", "../../../lodash/identity.js", "../../../lodash/_metaMap.js", "../../../lodash/_baseSetData.js", "../../../lodash/_createCtor.js", "../../../lodash/_createBind.js", "../../../lodash/_apply.js", "../../../lodash/_composeArgs.js", "../../../lodash/_composeArgsRight.js", "../../../lodash/_countHolders.js", "../../../lodash/_baseLodash.js", "../../../lodash/_LazyWrapper.js", "../../../lodash/noop.js", "../../../lodash/_getData.js", "../../../lodash/_realNames.js", "../../../lodash/_getFuncName.js", "../../../lodash/_LodashWrapper.js", "../../../lodash/_wrapperClone.js", "../../../lodash/wrapperLodash.js", "../../../lodash/_isLaziable.js", "../../../lodash/_shortOut.js", "../../../lodash/_setData.js", "../../../lodash/_getWrapDetails.js", "../../../lodash/_insertWrapDetails.js", "../../../lodash/constant.js", "../../../lodash/_baseSetToString.js", "../../../lodash/_setToString.js", "../../../lodash/_baseFindIndex.js", "../../../lodash/_baseIsNaN.js", "../../../lodash/_strictIndexOf.js", "../../../lodash/_baseIndexOf.js", "../../../lodash/_arrayIncludes.js", "../../../lodash/_updateWrapDetails.js", "../../../lodash/_setWrapToString.js", "../../../lodash/_createRecurry.js", "../../../lodash/_getHolder.js", "../../../lodash/_reorder.js", "../../../lodash/_replaceHolders.js", "../../../lodash/_createHybrid.js", "../../../lodash/_createCurry.js", "../../../lodash/_createPartial.js", "../../../lodash/_mergeData.js", "../../../lodash/_trimmedEndIndex.js", "../../../lodash/_baseTrim.js", "../../../lodash/toNumber.js", "../../../lodash/toFinite.js", "../../../lodash/toInteger.js", "../../../lodash/_createWrap.js", "../../../lodash/ary.js", "../../../lodash/curry.js", "../../../lodash/isPlainObject.js", "../../../lodash/isError.js", "../../../lodash/isWeakMap.js", "../../../lodash/_baseIsMatch.js", "../../../lodash/_isStrictComparable.js", "../../../lodash/_getMatchData.js", "../../../lodash/_matchesStrictComparable.js", "../../../lodash/_baseMatches.js", "../../../lodash/_isKey.js", "../../../lodash/_castPath.js", "../../../lodash/_baseGet.js", "../../../lodash/get.js", "../../../lodash/_baseHasIn.js", "../../../lodash/_hasPath.js", "../../../lodash/hasIn.js", "../../../lodash/_baseMatchesProperty.js", "../../../lodash/_baseProperty.js", "../../../lodash/_basePropertyDeep.js", "../../../lodash/property.js", "../../../lodash/_baseIteratee.js", "../../../lodash/iteratee.js", "../../../lodash/_isFlattenable.js", "../../../lodash/_baseFlatten.js", "../../../lodash/flatten.js", "../../../lodash/_overRest.js", "../../../lodash/_flatRest.js", "../../../lodash/rearg.js", "../../../lodash/fp/_util.js", "../../../lodash/fp/convert.js", "../../../lodash/_createFlow.js", "../../../lodash/flow.js", "../../../lodash/fp/flow.js", "../../../lodash/fp/pipe.js", "../../../@strapi/admin/admin/src/utils/cookies.ts", "../../../@strapi/admin/admin/src/reducer.ts", "../../../@strapi/admin/admin/src/utils/getFetchClient.ts", "../../../@strapi/admin/admin/src/utils/baseQuery.ts", "../../../@reduxjs/toolkit/src/query/core/apiState.ts", "../../../@reduxjs/toolkit/src/query/utils/isAbsoluteUrl.ts", "../../../@reduxjs/toolkit/src/query/utils/joinUrls.ts", "../../../@reduxjs/toolkit/src/query/utils/flatten.ts", "../../../@reduxjs/toolkit/src/query/utils/isOnline.ts", "../../../@reduxjs/toolkit/src/query/utils/isDocumentVisible.ts", "../../../@reduxjs/toolkit/src/query/utils/copyWithStructuralSharing.ts", "../../../@reduxjs/toolkit/src/query/fetchBaseQuery.ts", "../../../@reduxjs/toolkit/src/query/HandledError.ts", "../../../@reduxjs/toolkit/src/query/retry.ts", "../../../@reduxjs/toolkit/src/query/core/setupListeners.ts", "../../../@reduxjs/toolkit/src/query/core/buildSelectors.ts", "../../../@reduxjs/toolkit/src/query/endpointDefinitions.ts", "../../../@reduxjs/toolkit/src/query/core/buildSlice.ts", "../../../@reduxjs/toolkit/src/query/utils/isNotNullish.ts", "../../../@reduxjs/toolkit/src/query/core/buildInitiate.ts", "../../../@reduxjs/toolkit/src/query/core/buildThunks.ts", "../../../@reduxjs/toolkit/src/query/defaultSerializeQueryArgs.ts", "../../../@reduxjs/toolkit/src/query/createApi.ts", "../../../@reduxjs/toolkit/src/query/fakeBaseQuery.ts", "../../../@reduxjs/toolkit/src/query/core/buildMiddleware/index.ts", "../../../@reduxjs/toolkit/src/query/core/buildMiddleware/cacheCollection.ts", "../../../@reduxjs/toolkit/src/query/core/buildMiddleware/invalidationByTags.ts", "../../../@reduxjs/toolkit/src/query/core/buildMiddleware/polling.ts", "../../../@reduxjs/toolkit/src/query/core/buildMiddleware/windowEventHandling.ts", "../../../@reduxjs/toolkit/src/query/core/buildMiddleware/cacheLifecycle.ts", "../../../@reduxjs/toolkit/src/query/core/buildMiddleware/queryLifecycle.ts", "../../../@reduxjs/toolkit/src/query/core/buildMiddleware/devMiddleware.ts", "../../../@reduxjs/toolkit/src/query/core/buildMiddleware/batchActions.ts", "../../../@reduxjs/toolkit/src/query/tsHelpers.ts", "../../../@reduxjs/toolkit/src/query/core/module.ts", "../../../@reduxjs/toolkit/src/query/core/index.ts", "../../../@reduxjs/toolkit/dist/query/rtk-query.esm.js", "../../../@reduxjs/toolkit/src/query/react/index.ts", "../../../@reduxjs/toolkit/src/query/react/buildHooks.ts", "../../../@reduxjs/toolkit/src/query/react/useSerializedStableValue.ts", "../../../@reduxjs/toolkit/src/query/react/constants.ts", "../../../@reduxjs/toolkit/src/query/react/useShallowStableValue.ts", "../../../@reduxjs/toolkit/src/query/defaultSerializeQueryArgs.ts", "../../../@reduxjs/toolkit/src/query/endpointDefinitions.ts", "../../../@reduxjs/toolkit/src/query/utils/capitalize.ts", "../../../@reduxjs/toolkit/src/query/tsHelpers.ts", "../../../@reduxjs/toolkit/src/query/react/module.ts", "../../../@reduxjs/toolkit/src/query/react/ApiProvider.tsx", "../../../@reduxjs/toolkit/dist/query/react/rtk-query-react.esm.js", "../../../@strapi/admin/admin/src/services/api.ts"],
  "sourcesContent": ["'use strict';\r\n\r\n/** @type {import('./type')} */\r\nmodule.exports = TypeError;\r\n", "var hasMap = typeof Map === 'function' && Map.prototype;\r\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\r\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\r\nvar mapForEach = hasMap && Map.prototype.forEach;\r\nvar hasSet = typeof Set === 'function' && Set.prototype;\r\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\r\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\r\nvar setForEach = hasSet && Set.prototype.forEach;\r\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\r\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\r\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\r\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\r\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\r\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\r\nvar booleanValueOf = Boolean.prototype.valueOf;\r\nvar objectToString = Object.prototype.toString;\r\nvar functionToString = Function.prototype.toString;\r\nvar $match = String.prototype.match;\r\nvar $slice = String.prototype.slice;\r\nvar $replace = String.prototype.replace;\r\nvar $toUpperCase = String.prototype.toUpperCase;\r\nvar $toLowerCase = String.prototype.toLowerCase;\r\nvar $test = RegExp.prototype.test;\r\nvar $concat = Array.prototype.concat;\r\nvar $join = Array.prototype.join;\r\nvar $arrSlice = Array.prototype.slice;\r\nvar $floor = Math.floor;\r\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\r\nvar gOPS = Object.getOwnPropertySymbols;\r\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\r\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\r\n// ie, `has-tostringtag/shams\r\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\r\n    ? Symbol.toStringTag\r\n    : null;\r\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\r\n\r\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\r\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\r\n        ? function (O) {\r\n            return O.__proto__; // eslint-disable-line no-proto\r\n        }\r\n        : null\r\n);\r\n\r\nfunction addNumericSeparator(num, str) {\r\n    if (\r\n        num === Infinity\r\n        || num === -Infinity\r\n        || num !== num\r\n        || (num && num > -1000 && num < 1000)\r\n        || $test.call(/e/, str)\r\n    ) {\r\n        return str;\r\n    }\r\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\r\n    if (typeof num === 'number') {\r\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\r\n        if (int !== num) {\r\n            var intStr = String(int);\r\n            var dec = $slice.call(str, intStr.length + 1);\r\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\r\n        }\r\n    }\r\n    return $replace.call(str, sepRegex, '$&_');\r\n}\r\n\r\nvar utilInspect = require('./util.inspect');\r\nvar inspectCustom = utilInspect.custom;\r\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\r\n\r\nvar quotes = {\r\n    __proto__: null,\r\n    'double': '\"',\r\n    single: \"'\"\r\n};\r\nvar quoteREs = {\r\n    __proto__: null,\r\n    'double': /([\"\\\\])/g,\r\n    single: /(['\\\\])/g\r\n};\r\n\r\nmodule.exports = function inspect_(obj, options, depth, seen) {\r\n    var opts = options || {};\r\n\r\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\r\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\r\n    }\r\n    if (\r\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\r\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\r\n            : opts.maxStringLength !== null\r\n        )\r\n    ) {\r\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\r\n    }\r\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\r\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\r\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\r\n    }\r\n\r\n    if (\r\n        has(opts, 'indent')\r\n        && opts.indent !== null\r\n        && opts.indent !== '\\t'\r\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\r\n    ) {\r\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\r\n    }\r\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\r\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\r\n    }\r\n    var numericSeparator = opts.numericSeparator;\r\n\r\n    if (typeof obj === 'undefined') {\r\n        return 'undefined';\r\n    }\r\n    if (obj === null) {\r\n        return 'null';\r\n    }\r\n    if (typeof obj === 'boolean') {\r\n        return obj ? 'true' : 'false';\r\n    }\r\n\r\n    if (typeof obj === 'string') {\r\n        return inspectString(obj, opts);\r\n    }\r\n    if (typeof obj === 'number') {\r\n        if (obj === 0) {\r\n            return Infinity / obj > 0 ? '0' : '-0';\r\n        }\r\n        var str = String(obj);\r\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\r\n    }\r\n    if (typeof obj === 'bigint') {\r\n        var bigIntStr = String(obj) + 'n';\r\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\r\n    }\r\n\r\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\r\n    if (typeof depth === 'undefined') { depth = 0; }\r\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\r\n        return isArray(obj) ? '[Array]' : '[Object]';\r\n    }\r\n\r\n    var indent = getIndent(opts, depth);\r\n\r\n    if (typeof seen === 'undefined') {\r\n        seen = [];\r\n    } else if (indexOf(seen, obj) >= 0) {\r\n        return '[Circular]';\r\n    }\r\n\r\n    function inspect(value, from, noIndent) {\r\n        if (from) {\r\n            seen = $arrSlice.call(seen);\r\n            seen.push(from);\r\n        }\r\n        if (noIndent) {\r\n            var newOpts = {\r\n                depth: opts.depth\r\n            };\r\n            if (has(opts, 'quoteStyle')) {\r\n                newOpts.quoteStyle = opts.quoteStyle;\r\n            }\r\n            return inspect_(value, newOpts, depth + 1, seen);\r\n        }\r\n        return inspect_(value, opts, depth + 1, seen);\r\n    }\r\n\r\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\r\n        var name = nameOf(obj);\r\n        var keys = arrObjKeys(obj, inspect);\r\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\r\n    }\r\n    if (isSymbol(obj)) {\r\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\r\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\r\n    }\r\n    if (isElement(obj)) {\r\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\r\n        var attrs = obj.attributes || [];\r\n        for (var i = 0; i < attrs.length; i++) {\r\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\r\n        }\r\n        s += '>';\r\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\r\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\r\n        return s;\r\n    }\r\n    if (isArray(obj)) {\r\n        if (obj.length === 0) { return '[]'; }\r\n        var xs = arrObjKeys(obj, inspect);\r\n        if (indent && !singleLineValues(xs)) {\r\n            return '[' + indentedJoin(xs, indent) + ']';\r\n        }\r\n        return '[ ' + $join.call(xs, ', ') + ' ]';\r\n    }\r\n    if (isError(obj)) {\r\n        var parts = arrObjKeys(obj, inspect);\r\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\r\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\r\n        }\r\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\r\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\r\n    }\r\n    if (typeof obj === 'object' && customInspect) {\r\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\r\n            return utilInspect(obj, { depth: maxDepth - depth });\r\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\r\n            return obj.inspect();\r\n        }\r\n    }\r\n    if (isMap(obj)) {\r\n        var mapParts = [];\r\n        if (mapForEach) {\r\n            mapForEach.call(obj, function (value, key) {\r\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\r\n            });\r\n        }\r\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\r\n    }\r\n    if (isSet(obj)) {\r\n        var setParts = [];\r\n        if (setForEach) {\r\n            setForEach.call(obj, function (value) {\r\n                setParts.push(inspect(value, obj));\r\n            });\r\n        }\r\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\r\n    }\r\n    if (isWeakMap(obj)) {\r\n        return weakCollectionOf('WeakMap');\r\n    }\r\n    if (isWeakSet(obj)) {\r\n        return weakCollectionOf('WeakSet');\r\n    }\r\n    if (isWeakRef(obj)) {\r\n        return weakCollectionOf('WeakRef');\r\n    }\r\n    if (isNumber(obj)) {\r\n        return markBoxed(inspect(Number(obj)));\r\n    }\r\n    if (isBigInt(obj)) {\r\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\r\n    }\r\n    if (isBoolean(obj)) {\r\n        return markBoxed(booleanValueOf.call(obj));\r\n    }\r\n    if (isString(obj)) {\r\n        return markBoxed(inspect(String(obj)));\r\n    }\r\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\r\n    /* eslint-env browser */\r\n    if (typeof window !== 'undefined' && obj === window) {\r\n        return '{ [object Window] }';\r\n    }\r\n    if (\r\n        (typeof globalThis !== 'undefined' && obj === globalThis)\r\n        || (typeof global !== 'undefined' && obj === global)\r\n    ) {\r\n        return '{ [object globalThis] }';\r\n    }\r\n    if (!isDate(obj) && !isRegExp(obj)) {\r\n        var ys = arrObjKeys(obj, inspect);\r\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\r\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\r\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\r\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\r\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\r\n        if (ys.length === 0) { return tag + '{}'; }\r\n        if (indent) {\r\n            return tag + '{' + indentedJoin(ys, indent) + '}';\r\n        }\r\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\r\n    }\r\n    return String(obj);\r\n};\r\n\r\nfunction wrapQuotes(s, defaultStyle, opts) {\r\n    var style = opts.quoteStyle || defaultStyle;\r\n    var quoteChar = quotes[style];\r\n    return quoteChar + s + quoteChar;\r\n}\r\n\r\nfunction quote(s) {\r\n    return $replace.call(String(s), /\"/g, '&quot;');\r\n}\r\n\r\nfunction canTrustToString(obj) {\r\n    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));\r\n}\r\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }\r\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }\r\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }\r\nfunction isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }\r\nfunction isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }\r\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }\r\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }\r\n\r\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\r\nfunction isSymbol(obj) {\r\n    if (hasShammedSymbols) {\r\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\r\n    }\r\n    if (typeof obj === 'symbol') {\r\n        return true;\r\n    }\r\n    if (!obj || typeof obj !== 'object' || !symToString) {\r\n        return false;\r\n    }\r\n    try {\r\n        symToString.call(obj);\r\n        return true;\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isBigInt(obj) {\r\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\r\n        return false;\r\n    }\r\n    try {\r\n        bigIntValueOf.call(obj);\r\n        return true;\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\r\nfunction has(obj, key) {\r\n    return hasOwn.call(obj, key);\r\n}\r\n\r\nfunction toStr(obj) {\r\n    return objectToString.call(obj);\r\n}\r\n\r\nfunction nameOf(f) {\r\n    if (f.name) { return f.name; }\r\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\r\n    if (m) { return m[1]; }\r\n    return null;\r\n}\r\n\r\nfunction indexOf(xs, x) {\r\n    if (xs.indexOf) { return xs.indexOf(x); }\r\n    for (var i = 0, l = xs.length; i < l; i++) {\r\n        if (xs[i] === x) { return i; }\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction isMap(x) {\r\n    if (!mapSize || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        mapSize.call(x);\r\n        try {\r\n            setSize.call(x);\r\n        } catch (s) {\r\n            return true;\r\n        }\r\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isWeakMap(x) {\r\n    if (!weakMapHas || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        weakMapHas.call(x, weakMapHas);\r\n        try {\r\n            weakSetHas.call(x, weakSetHas);\r\n        } catch (s) {\r\n            return true;\r\n        }\r\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isWeakRef(x) {\r\n    if (!weakRefDeref || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        weakRefDeref.call(x);\r\n        return true;\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isSet(x) {\r\n    if (!setSize || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        setSize.call(x);\r\n        try {\r\n            mapSize.call(x);\r\n        } catch (m) {\r\n            return true;\r\n        }\r\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isWeakSet(x) {\r\n    if (!weakSetHas || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        weakSetHas.call(x, weakSetHas);\r\n        try {\r\n            weakMapHas.call(x, weakMapHas);\r\n        } catch (s) {\r\n            return true;\r\n        }\r\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isElement(x) {\r\n    if (!x || typeof x !== 'object') { return false; }\r\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\r\n        return true;\r\n    }\r\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\r\n}\r\n\r\nfunction inspectString(str, opts) {\r\n    if (str.length > opts.maxStringLength) {\r\n        var remaining = str.length - opts.maxStringLength;\r\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\r\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\r\n    }\r\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\r\n    quoteRE.lastIndex = 0;\r\n    // eslint-disable-next-line no-control-regex\r\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\r\n    return wrapQuotes(s, 'single', opts);\r\n}\r\n\r\nfunction lowbyte(c) {\r\n    var n = c.charCodeAt(0);\r\n    var x = {\r\n        8: 'b',\r\n        9: 't',\r\n        10: 'n',\r\n        12: 'f',\r\n        13: 'r'\r\n    }[n];\r\n    if (x) { return '\\\\' + x; }\r\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\r\n}\r\n\r\nfunction markBoxed(str) {\r\n    return 'Object(' + str + ')';\r\n}\r\n\r\nfunction weakCollectionOf(type) {\r\n    return type + ' { ? }';\r\n}\r\n\r\nfunction collectionOf(type, size, entries, indent) {\r\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\r\n    return type + ' (' + size + ') {' + joinedEntries + '}';\r\n}\r\n\r\nfunction singleLineValues(xs) {\r\n    for (var i = 0; i < xs.length; i++) {\r\n        if (indexOf(xs[i], '\\n') >= 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction getIndent(opts, depth) {\r\n    var baseIndent;\r\n    if (opts.indent === '\\t') {\r\n        baseIndent = '\\t';\r\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\r\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\r\n    } else {\r\n        return null;\r\n    }\r\n    return {\r\n        base: baseIndent,\r\n        prev: $join.call(Array(depth + 1), baseIndent)\r\n    };\r\n}\r\n\r\nfunction indentedJoin(xs, indent) {\r\n    if (xs.length === 0) { return ''; }\r\n    var lineJoiner = '\\n' + indent.prev + indent.base;\r\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\r\n}\r\n\r\nfunction arrObjKeys(obj, inspect) {\r\n    var isArr = isArray(obj);\r\n    var xs = [];\r\n    if (isArr) {\r\n        xs.length = obj.length;\r\n        for (var i = 0; i < obj.length; i++) {\r\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\r\n        }\r\n    }\r\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\r\n    var symMap;\r\n    if (hasShammedSymbols) {\r\n        symMap = {};\r\n        for (var k = 0; k < syms.length; k++) {\r\n            symMap['$' + syms[k]] = syms[k];\r\n        }\r\n    }\r\n\r\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\r\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\r\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\r\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\r\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\r\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\r\n        } else if ($test.call(/[^\\w$]/, key)) {\r\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\r\n        } else {\r\n            xs.push(key + ': ' + inspect(obj[key], obj));\r\n        }\r\n    }\r\n    if (typeof gOPS === 'function') {\r\n        for (var j = 0; j < syms.length; j++) {\r\n            if (isEnumerable.call(obj, syms[j])) {\r\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\r\n            }\r\n        }\r\n    }\r\n    return xs;\r\n}\r\n", "'use strict';\r\n\r\nvar inspect = require('object-inspect');\r\n\r\nvar $TypeError = require('es-errors/type');\r\n\r\n/*\r\n* This function traverses the list returning the node corresponding to the given key.\r\n*\r\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.\r\n* By doing so, all the recently used nodes can be accessed relatively quickly.\r\n*/\r\n/** @type {import('./list.d.ts').listGetNode} */\r\n// eslint-disable-next-line consistent-return\r\nvar listGetNode = function (list, key, isDelete) {\r\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\r\n\tvar prev = list;\r\n\t/** @type {(typeof list)['next']} */\r\n\tvar curr;\r\n\t// eslint-disable-next-line eqeqeq\r\n\tfor (; (curr = prev.next) != null; prev = curr) {\r\n\t\tif (curr.key === key) {\r\n\t\t\tprev.next = curr.next;\r\n\t\t\tif (!isDelete) {\r\n\t\t\t\t// eslint-disable-next-line no-extra-parens\r\n\t\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\r\n\t\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\r\n\t\t\t}\r\n\t\t\treturn curr;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/** @type {import('./list.d.ts').listGet} */\r\nvar listGet = function (objects, key) {\r\n\tif (!objects) {\r\n\t\treturn void undefined;\r\n\t}\r\n\tvar node = listGetNode(objects, key);\r\n\treturn node && node.value;\r\n};\r\n/** @type {import('./list.d.ts').listSet} */\r\nvar listSet = function (objects, key, value) {\r\n\tvar node = listGetNode(objects, key);\r\n\tif (node) {\r\n\t\tnode.value = value;\r\n\t} else {\r\n\t\t// Prepend the new node to the beginning of the list\r\n\t\tobjects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\r\n\t\t\tkey: key,\r\n\t\t\tnext: objects.next,\r\n\t\t\tvalue: value\r\n\t\t});\r\n\t}\r\n};\r\n/** @type {import('./list.d.ts').listHas} */\r\nvar listHas = function (objects, key) {\r\n\tif (!objects) {\r\n\t\treturn false;\r\n\t}\r\n\treturn !!listGetNode(objects, key);\r\n};\r\n/** @type {import('./list.d.ts').listDelete} */\r\n// eslint-disable-next-line consistent-return\r\nvar listDelete = function (objects, key) {\r\n\tif (objects) {\r\n\t\treturn listGetNode(objects, key, true);\r\n\t}\r\n};\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = function getSideChannelList() {\r\n\t/** @typedef {ReturnType<typeof getSideChannelList>} Channel */\r\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\r\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\r\n\r\n\t/** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;\r\n\r\n\t/** @type {Channel} */\r\n\tvar channel = {\r\n\t\tassert: function (key) {\r\n\t\t\tif (!channel.has(key)) {\r\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\r\n\t\t\t}\r\n\t\t},\r\n\t\t'delete': function (key) {\r\n\t\t\tvar root = $o && $o.next;\r\n\t\t\tvar deletedNode = listDelete($o, key);\r\n\t\t\tif (deletedNode && root && root === deletedNode) {\r\n\t\t\t\t$o = void undefined;\r\n\t\t\t}\r\n\t\t\treturn !!deletedNode;\r\n\t\t},\r\n\t\tget: function (key) {\r\n\t\t\treturn listGet($o, key);\r\n\t\t},\r\n\t\thas: function (key) {\r\n\t\t\treturn listHas($o, key);\r\n\t\t},\r\n\t\tset: function (key, value) {\r\n\t\t\tif (!$o) {\r\n\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\r\n\t\t\t\t$o = {\r\n\t\t\t\t\tnext: void undefined\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t// eslint-disable-next-line no-extra-parens\r\n\t\t\tlistSet(/** @type {NonNullable<typeof $o>} */ ($o), key, value);\r\n\t\t}\r\n\t};\r\n\t// @ts-expect-error TODO: figure out why this is erroring\r\n\treturn channel;\r\n};\r\n", "'use strict';\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = Object;\r\n", "'use strict';\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = Error;\r\n", "'use strict';\r\n\r\n/** @type {import('./eval')} */\r\nmodule.exports = EvalError;\r\n", "'use strict';\r\n\r\n/** @type {import('./range')} */\r\nmodule.exports = RangeError;\r\n", "'use strict';\r\n\r\n/** @type {import('./ref')} */\r\nmodule.exports = ReferenceError;\r\n", "'use strict';\r\n\r\n/** @type {import('./syntax')} */\r\nmodule.exports = SyntaxError;\r\n", "'use strict';\r\n\r\n/** @type {import('./uri')} */\r\nmodule.exports = URIError;\r\n", "'use strict';\r\n\r\n/** @type {import('./abs')} */\r\nmodule.exports = Math.abs;\r\n", "'use strict';\r\n\r\n/** @type {import('./floor')} */\r\nmodule.exports = Math.floor;\r\n", "'use strict';\r\n\r\n/** @type {import('./max')} */\r\nmodule.exports = Math.max;\r\n", "'use strict';\r\n\r\n/** @type {import('./min')} */\r\nmodule.exports = Math.min;\r\n", "'use strict';\r\n\r\n/** @type {import('./pow')} */\r\nmodule.exports = Math.pow;\r\n", "'use strict';\r\n\r\n/** @type {import('./round')} */\r\nmodule.exports = Math.round;\r\n", "'use strict';\r\n\r\n/** @type {import('./isNaN')} */\r\nmodule.exports = Number.isNaN || function isNaN(a) {\r\n\treturn a !== a;\r\n};\r\n", "'use strict';\r\n\r\nvar $isNaN = require('./isNaN');\r\n\r\n/** @type {import('./sign')} */\r\nmodule.exports = function sign(number) {\r\n\tif ($isNaN(number) || number === 0) {\r\n\t\treturn number;\r\n\t}\r\n\treturn number < 0 ? -1 : +1;\r\n};\r\n", "'use strict';\r\n\r\n/** @type {import('./gOPD')} */\r\nmodule.exports = Object.getOwnPropertyDescriptor;\r\n", "'use strict';\r\n\r\n/** @type {import('.')} */\r\nvar $gOPD = require('./gOPD');\r\n\r\nif ($gOPD) {\r\n\ttry {\r\n\t\t$gOPD([], 'length');\r\n\t} catch (e) {\r\n\t\t// IE 8 has a broken gOPD\r\n\t\t$gOPD = null;\r\n\t}\r\n}\r\n\r\nmodule.exports = $gOPD;\r\n", "'use strict';\r\n\r\n/** @type {import('.')} */\r\nvar $defineProperty = Object.defineProperty || false;\r\nif ($defineProperty) {\r\n\ttry {\r\n\t\t$defineProperty({}, 'a', { value: 1 });\r\n\t} catch (e) {\r\n\t\t// IE 8 has a broken defineProperty\r\n\t\t$defineProperty = false;\r\n\t}\r\n}\r\n\r\nmodule.exports = $defineProperty;\r\n", "'use strict';\r\n\r\n/** @type {import('./shams')} */\r\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\r\nmodule.exports = function hasSymbols() {\r\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\r\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\r\n\r\n\t/** @type {{ [k in symbol]?: unknown }} */\r\n\tvar obj = {};\r\n\tvar sym = Symbol('test');\r\n\tvar symObj = Object(sym);\r\n\tif (typeof sym === 'string') { return false; }\r\n\r\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\r\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\r\n\r\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\r\n\t// if (sym instanceof Symbol) { return false; }\r\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\r\n\t// if (!(symObj instanceof Symbol)) { return false; }\r\n\r\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\r\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\r\n\r\n\tvar symVal = 42;\r\n\tobj[sym] = symVal;\r\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\r\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\r\n\r\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\r\n\r\n\tvar syms = Object.getOwnPropertySymbols(obj);\r\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\r\n\r\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\r\n\r\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\r\n\t\t// eslint-disable-next-line no-extra-parens\r\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\r\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n", "'use strict';\r\n\r\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\r\nvar hasSymbolSham = require('./shams');\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = function hasNativeSymbols() {\r\n\tif (typeof origSymbol !== 'function') { return false; }\r\n\tif (typeof Symbol !== 'function') { return false; }\r\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\r\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\r\n\r\n\treturn hasSymbolSham();\r\n};\r\n", "'use strict';\r\n\r\n/** @type {import('./Reflect.getPrototypeOf')} */\r\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\r\n", "'use strict';\r\n\r\nvar $Object = require('es-object-atoms');\r\n\r\n/** @type {import('./Object.getPrototypeOf')} */\r\nmodule.exports = $Object.getPrototypeOf || null;\r\n", "'use strict';\r\n\r\n/* eslint no-invalid-this: 1 */\r\n\r\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\r\nvar toStr = Object.prototype.toString;\r\nvar max = Math.max;\r\nvar funcType = '[object Function]';\r\n\r\nvar concatty = function concatty(a, b) {\r\n    var arr = [];\r\n\r\n    for (var i = 0; i < a.length; i += 1) {\r\n        arr[i] = a[i];\r\n    }\r\n    for (var j = 0; j < b.length; j += 1) {\r\n        arr[j + a.length] = b[j];\r\n    }\r\n\r\n    return arr;\r\n};\r\n\r\nvar slicy = function slicy(arrLike, offset) {\r\n    var arr = [];\r\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\r\n        arr[j] = arrLike[i];\r\n    }\r\n    return arr;\r\n};\r\n\r\nvar joiny = function (arr, joiner) {\r\n    var str = '';\r\n    for (var i = 0; i < arr.length; i += 1) {\r\n        str += arr[i];\r\n        if (i + 1 < arr.length) {\r\n            str += joiner;\r\n        }\r\n    }\r\n    return str;\r\n};\r\n\r\nmodule.exports = function bind(that) {\r\n    var target = this;\r\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\r\n        throw new TypeError(ERROR_MESSAGE + target);\r\n    }\r\n    var args = slicy(arguments, 1);\r\n\r\n    var bound;\r\n    var binder = function () {\r\n        if (this instanceof bound) {\r\n            var result = target.apply(\r\n                this,\r\n                concatty(args, arguments)\r\n            );\r\n            if (Object(result) === result) {\r\n                return result;\r\n            }\r\n            return this;\r\n        }\r\n        return target.apply(\r\n            that,\r\n            concatty(args, arguments)\r\n        );\r\n\r\n    };\r\n\r\n    var boundLength = max(0, target.length - args.length);\r\n    var boundArgs = [];\r\n    for (var i = 0; i < boundLength; i++) {\r\n        boundArgs[i] = '$' + i;\r\n    }\r\n\r\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\r\n\r\n    if (target.prototype) {\r\n        var Empty = function Empty() {};\r\n        Empty.prototype = target.prototype;\r\n        bound.prototype = new Empty();\r\n        Empty.prototype = null;\r\n    }\r\n\r\n    return bound;\r\n};\r\n", "'use strict';\r\n\r\nvar implementation = require('./implementation');\r\n\r\nmodule.exports = Function.prototype.bind || implementation;\r\n", "'use strict';\r\n\r\n/** @type {import('./functionCall')} */\r\nmodule.exports = Function.prototype.call;\r\n", "'use strict';\r\n\r\n/** @type {import('./functionApply')} */\r\nmodule.exports = Function.prototype.apply;\r\n", "'use strict';\r\n\r\n/** @type {import('./reflectApply')} */\r\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\r\n", "'use strict';\r\n\r\nvar bind = require('function-bind');\r\n\r\nvar $apply = require('./functionApply');\r\nvar $call = require('./functionCall');\r\nvar $reflectApply = require('./reflectApply');\r\n\r\n/** @type {import('./actualApply')} */\r\nmodule.exports = $reflectApply || bind.call($call, $apply);\r\n", "'use strict';\r\n\r\nvar bind = require('function-bind');\r\nvar $TypeError = require('es-errors/type');\r\n\r\nvar $call = require('./functionCall');\r\nvar $actualApply = require('./actualApply');\r\n\r\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\r\nmodule.exports = function callBindBasic(args) {\r\n\tif (args.length < 1 || typeof args[0] !== 'function') {\r\n\t\tthrow new $TypeError('a function is required');\r\n\t}\r\n\treturn $actualApply(bind, $call, args);\r\n};\r\n", "'use strict';\r\n\r\nvar callBind = require('call-bind-apply-helpers');\r\nvar gOPD = require('gopd');\r\n\r\nvar hasProtoAccessor;\r\ntry {\r\n\t// eslint-disable-next-line no-extra-parens, no-proto\r\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\r\n} catch (e) {\r\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\r\n\t\tthrow e;\r\n\t}\r\n}\r\n\r\n// eslint-disable-next-line no-extra-parens\r\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\r\n\r\nvar $Object = Object;\r\nvar $getPrototypeOf = $Object.getPrototypeOf;\r\n\r\n/** @type {import('./get')} */\r\nmodule.exports = desc && typeof desc.get === 'function'\r\n\t? callBind([desc.get])\r\n\t: typeof $getPrototypeOf === 'function'\r\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\r\n\t\t\t// eslint-disable-next-line eqeqeq\r\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\r\n\t\t}\r\n\t\t: false;\r\n", "'use strict';\r\n\r\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\r\nvar originalGetProto = require('./Object.getPrototypeOf');\r\n\r\nvar getDunderProto = require('dunder-proto/get');\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = reflectGetProto\r\n\t? function getProto(O) {\r\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\r\n\t\treturn reflectGetProto(O);\r\n\t}\r\n\t: originalGetProto\r\n\t\t? function getProto(O) {\r\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\r\n\t\t\t\tthrow new TypeError('getProto: not an object');\r\n\t\t\t}\r\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\r\n\t\t\treturn originalGetProto(O);\r\n\t\t}\r\n\t\t: getDunderProto\r\n\t\t\t? function getProto(O) {\r\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\r\n\t\t\t\treturn getDunderProto(O);\r\n\t\t\t}\r\n\t\t\t: null;\r\n", "'use strict';\r\n\r\nvar call = Function.prototype.call;\r\nvar $hasOwn = Object.prototype.hasOwnProperty;\r\nvar bind = require('function-bind');\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = bind.call(call, $hasOwn);\r\n", "'use strict';\r\n\r\nvar undefined;\r\n\r\nvar $Object = require('es-object-atoms');\r\n\r\nvar $Error = require('es-errors');\r\nvar $EvalError = require('es-errors/eval');\r\nvar $RangeError = require('es-errors/range');\r\nvar $ReferenceError = require('es-errors/ref');\r\nvar $SyntaxError = require('es-errors/syntax');\r\nvar $TypeError = require('es-errors/type');\r\nvar $URIError = require('es-errors/uri');\r\n\r\nvar abs = require('math-intrinsics/abs');\r\nvar floor = require('math-intrinsics/floor');\r\nvar max = require('math-intrinsics/max');\r\nvar min = require('math-intrinsics/min');\r\nvar pow = require('math-intrinsics/pow');\r\nvar round = require('math-intrinsics/round');\r\nvar sign = require('math-intrinsics/sign');\r\n\r\nvar $Function = Function;\r\n\r\n// eslint-disable-next-line consistent-return\r\nvar getEvalledConstructor = function (expressionSyntax) {\r\n\ttry {\r\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\r\n\t} catch (e) {}\r\n};\r\n\r\nvar $gOPD = require('gopd');\r\nvar $defineProperty = require('es-define-property');\r\n\r\nvar throwTypeError = function () {\r\n\tthrow new $TypeError();\r\n};\r\nvar ThrowTypeError = $gOPD\r\n\t? (function () {\r\n\t\ttry {\r\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\r\n\t\t\targuments.callee; // IE 8 does not throw here\r\n\t\t\treturn throwTypeError;\r\n\t\t} catch (calleeThrows) {\r\n\t\t\ttry {\r\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\r\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\r\n\t\t\t} catch (gOPDthrows) {\r\n\t\t\t\treturn throwTypeError;\r\n\t\t\t}\r\n\t\t}\r\n\t}())\r\n\t: throwTypeError;\r\n\r\nvar hasSymbols = require('has-symbols')();\r\n\r\nvar getProto = require('get-proto');\r\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\r\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\r\n\r\nvar $apply = require('call-bind-apply-helpers/functionApply');\r\nvar $call = require('call-bind-apply-helpers/functionCall');\r\n\r\nvar needsEval = {};\r\n\r\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\r\n\r\nvar INTRINSICS = {\r\n\t__proto__: null,\r\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\r\n\t'%Array%': Array,\r\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\r\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\r\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\r\n\t'%AsyncFunction%': needsEval,\r\n\t'%AsyncGenerator%': needsEval,\r\n\t'%AsyncGeneratorFunction%': needsEval,\r\n\t'%AsyncIteratorPrototype%': needsEval,\r\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\r\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\r\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\r\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\r\n\t'%Boolean%': Boolean,\r\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\r\n\t'%Date%': Date,\r\n\t'%decodeURI%': decodeURI,\r\n\t'%decodeURIComponent%': decodeURIComponent,\r\n\t'%encodeURI%': encodeURI,\r\n\t'%encodeURIComponent%': encodeURIComponent,\r\n\t'%Error%': $Error,\r\n\t'%eval%': eval, // eslint-disable-line no-eval\r\n\t'%EvalError%': $EvalError,\r\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\r\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\r\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\r\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\r\n\t'%Function%': $Function,\r\n\t'%GeneratorFunction%': needsEval,\r\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\r\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\r\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\r\n\t'%isFinite%': isFinite,\r\n\t'%isNaN%': isNaN,\r\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\r\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\r\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\r\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\r\n\t'%Math%': Math,\r\n\t'%Number%': Number,\r\n\t'%Object%': $Object,\r\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\r\n\t'%parseFloat%': parseFloat,\r\n\t'%parseInt%': parseInt,\r\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\r\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\r\n\t'%RangeError%': $RangeError,\r\n\t'%ReferenceError%': $ReferenceError,\r\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\r\n\t'%RegExp%': RegExp,\r\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\r\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\r\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\r\n\t'%String%': String,\r\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\r\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\r\n\t'%SyntaxError%': $SyntaxError,\r\n\t'%ThrowTypeError%': ThrowTypeError,\r\n\t'%TypedArray%': TypedArray,\r\n\t'%TypeError%': $TypeError,\r\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\r\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\r\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\r\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\r\n\t'%URIError%': $URIError,\r\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\r\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\r\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\r\n\r\n\t'%Function.prototype.call%': $call,\r\n\t'%Function.prototype.apply%': $apply,\r\n\t'%Object.defineProperty%': $defineProperty,\r\n\t'%Object.getPrototypeOf%': $ObjectGPO,\r\n\t'%Math.abs%': abs,\r\n\t'%Math.floor%': floor,\r\n\t'%Math.max%': max,\r\n\t'%Math.min%': min,\r\n\t'%Math.pow%': pow,\r\n\t'%Math.round%': round,\r\n\t'%Math.sign%': sign,\r\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\r\n};\r\n\r\nif (getProto) {\r\n\ttry {\r\n\t\tnull.error; // eslint-disable-line no-unused-expressions\r\n\t} catch (e) {\r\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\r\n\t\tvar errorProto = getProto(getProto(e));\r\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\r\n\t}\r\n}\r\n\r\nvar doEval = function doEval(name) {\r\n\tvar value;\r\n\tif (name === '%AsyncFunction%') {\r\n\t\tvalue = getEvalledConstructor('async function () {}');\r\n\t} else if (name === '%GeneratorFunction%') {\r\n\t\tvalue = getEvalledConstructor('function* () {}');\r\n\t} else if (name === '%AsyncGeneratorFunction%') {\r\n\t\tvalue = getEvalledConstructor('async function* () {}');\r\n\t} else if (name === '%AsyncGenerator%') {\r\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\r\n\t\tif (fn) {\r\n\t\t\tvalue = fn.prototype;\r\n\t\t}\r\n\t} else if (name === '%AsyncIteratorPrototype%') {\r\n\t\tvar gen = doEval('%AsyncGenerator%');\r\n\t\tif (gen && getProto) {\r\n\t\t\tvalue = getProto(gen.prototype);\r\n\t\t}\r\n\t}\r\n\r\n\tINTRINSICS[name] = value;\r\n\r\n\treturn value;\r\n};\r\n\r\nvar LEGACY_ALIASES = {\r\n\t__proto__: null,\r\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\r\n\t'%ArrayPrototype%': ['Array', 'prototype'],\r\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\r\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\r\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\r\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\r\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\r\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\r\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\r\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\r\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\r\n\t'%DatePrototype%': ['Date', 'prototype'],\r\n\t'%ErrorPrototype%': ['Error', 'prototype'],\r\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\r\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\r\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\r\n\t'%FunctionPrototype%': ['Function', 'prototype'],\r\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\r\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\r\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\r\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\r\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\r\n\t'%JSONParse%': ['JSON', 'parse'],\r\n\t'%JSONStringify%': ['JSON', 'stringify'],\r\n\t'%MapPrototype%': ['Map', 'prototype'],\r\n\t'%NumberPrototype%': ['Number', 'prototype'],\r\n\t'%ObjectPrototype%': ['Object', 'prototype'],\r\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\r\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\r\n\t'%PromisePrototype%': ['Promise', 'prototype'],\r\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\r\n\t'%Promise_all%': ['Promise', 'all'],\r\n\t'%Promise_reject%': ['Promise', 'reject'],\r\n\t'%Promise_resolve%': ['Promise', 'resolve'],\r\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\r\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\r\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\r\n\t'%SetPrototype%': ['Set', 'prototype'],\r\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\r\n\t'%StringPrototype%': ['String', 'prototype'],\r\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\r\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\r\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\r\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\r\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\r\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\r\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\r\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\r\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\r\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\r\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\r\n};\r\n\r\nvar bind = require('function-bind');\r\nvar hasOwn = require('hasown');\r\nvar $concat = bind.call($call, Array.prototype.concat);\r\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\r\nvar $replace = bind.call($call, String.prototype.replace);\r\nvar $strSlice = bind.call($call, String.prototype.slice);\r\nvar $exec = bind.call($call, RegExp.prototype.exec);\r\n\r\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\r\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\r\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\r\nvar stringToPath = function stringToPath(string) {\r\n\tvar first = $strSlice(string, 0, 1);\r\n\tvar last = $strSlice(string, -1);\r\n\tif (first === '%' && last !== '%') {\r\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\r\n\t} else if (last === '%' && first !== '%') {\r\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\r\n\t}\r\n\tvar result = [];\r\n\t$replace(string, rePropName, function (match, number, quote, subString) {\r\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\r\n\t});\r\n\treturn result;\r\n};\r\n/* end adaptation */\r\n\r\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\r\n\tvar intrinsicName = name;\r\n\tvar alias;\r\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\r\n\t\talias = LEGACY_ALIASES[intrinsicName];\r\n\t\tintrinsicName = '%' + alias[0] + '%';\r\n\t}\r\n\r\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\r\n\t\tvar value = INTRINSICS[intrinsicName];\r\n\t\tif (value === needsEval) {\r\n\t\t\tvalue = doEval(intrinsicName);\r\n\t\t}\r\n\t\tif (typeof value === 'undefined' && !allowMissing) {\r\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\talias: alias,\r\n\t\t\tname: intrinsicName,\r\n\t\t\tvalue: value\r\n\t\t};\r\n\t}\r\n\r\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\r\n};\r\n\r\nmodule.exports = function GetIntrinsic(name, allowMissing) {\r\n\tif (typeof name !== 'string' || name.length === 0) {\r\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\r\n\t}\r\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\r\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\r\n\t}\r\n\r\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\r\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\r\n\t}\r\n\tvar parts = stringToPath(name);\r\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\r\n\r\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\r\n\tvar intrinsicRealName = intrinsic.name;\r\n\tvar value = intrinsic.value;\r\n\tvar skipFurtherCaching = false;\r\n\r\n\tvar alias = intrinsic.alias;\r\n\tif (alias) {\r\n\t\tintrinsicBaseName = alias[0];\r\n\t\t$spliceApply(parts, $concat([0, 1], alias));\r\n\t}\r\n\r\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\r\n\t\tvar part = parts[i];\r\n\t\tvar first = $strSlice(part, 0, 1);\r\n\t\tvar last = $strSlice(part, -1);\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\r\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\r\n\t\t\t)\r\n\t\t\t&& first !== last\r\n\t\t) {\r\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\r\n\t\t}\r\n\t\tif (part === 'constructor' || !isOwn) {\r\n\t\t\tskipFurtherCaching = true;\r\n\t\t}\r\n\r\n\t\tintrinsicBaseName += '.' + part;\r\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\r\n\r\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\r\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\r\n\t\t} else if (value != null) {\r\n\t\t\tif (!(part in value)) {\r\n\t\t\t\tif (!allowMissing) {\r\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\r\n\t\t\t\t}\r\n\t\t\t\treturn void undefined;\r\n\t\t\t}\r\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\r\n\t\t\t\tvar desc = $gOPD(value, part);\r\n\t\t\t\tisOwn = !!desc;\r\n\r\n\t\t\t\t// By convention, when a data property is converted to an accessor\r\n\t\t\t\t// property to emulate a data property that does not suffer from\r\n\t\t\t\t// the override mistake, that accessor's getter is marked with\r\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\r\n\t\t\t\t// uphold the illusion by pretending to see that original data\r\n\t\t\t\t// property, i.e., returning the value rather than the getter\r\n\t\t\t\t// itself.\r\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\r\n\t\t\t\t\tvalue = desc.get;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value[part];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tisOwn = hasOwn(value, part);\r\n\t\t\t\tvalue = value[part];\r\n\t\t\t}\r\n\r\n\t\t\tif (isOwn && !skipFurtherCaching) {\r\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn value;\r\n};\r\n", "'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\n\r\nvar callBindBasic = require('call-bind-apply-helpers');\r\n\r\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\r\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\r\n\t/* eslint no-extra-parens: 0 */\r\n\r\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\r\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\r\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\r\n\t}\r\n\treturn intrinsic;\r\n};\r\n", "'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\nvar callBound = require('call-bound');\r\nvar inspect = require('object-inspect');\r\n\r\nvar $TypeError = require('es-errors/type');\r\nvar $Map = GetIntrinsic('%Map%', true);\r\n\r\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */\r\nvar $mapGet = callBound('Map.prototype.get', true);\r\n/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */\r\nvar $mapSet = callBound('Map.prototype.set', true);\r\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\r\nvar $mapHas = callBound('Map.prototype.has', true);\r\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\r\nvar $mapDelete = callBound('Map.prototype.delete', true);\r\n/** @type {<K, V>(thisArg: Map<K, V>) => number} */\r\nvar $mapSize = callBound('Map.prototype.size', true);\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {\r\n\t/** @typedef {ReturnType<typeof getSideChannelMap>} Channel */\r\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\r\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\r\n\r\n\t/** @type {Map<K, V> | undefined} */ var $m;\r\n\r\n\t/** @type {Channel} */\r\n\tvar channel = {\r\n\t\tassert: function (key) {\r\n\t\t\tif (!channel.has(key)) {\r\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\r\n\t\t\t}\r\n\t\t},\r\n\t\t'delete': function (key) {\r\n\t\t\tif ($m) {\r\n\t\t\t\tvar result = $mapDelete($m, key);\r\n\t\t\t\tif ($mapSize($m) === 0) {\r\n\t\t\t\t\t$m = void undefined;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tget: function (key) { // eslint-disable-line consistent-return\r\n\t\t\tif ($m) {\r\n\t\t\t\treturn $mapGet($m, key);\r\n\t\t\t}\r\n\t\t},\r\n\t\thas: function (key) {\r\n\t\t\tif ($m) {\r\n\t\t\t\treturn $mapHas($m, key);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tset: function (key, value) {\r\n\t\t\tif (!$m) {\r\n\t\t\t\t// @ts-expect-error TS can't handle narrowing a variable inside a closure\r\n\t\t\t\t$m = new $Map();\r\n\t\t\t}\r\n\t\t\t$mapSet($m, key, value);\r\n\t\t}\r\n\t};\r\n\r\n\t// @ts-expect-error TODO: figure out why TS is erroring here\r\n\treturn channel;\r\n};\r\n", "'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\nvar callBound = require('call-bound');\r\nvar inspect = require('object-inspect');\r\nvar getSideChannelMap = require('side-channel-map');\r\n\r\nvar $TypeError = require('es-errors/type');\r\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\r\n\r\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */\r\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\r\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */\r\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\r\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\r\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\r\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\r\nvar $weakMapDelete = callBound('WeakMap.prototype.delete', true);\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = $WeakMap\r\n\t? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {\r\n\t\t/** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */\r\n\t\t/** @typedef {Parameters<Channel['get']>[0]} K */\r\n\t\t/** @typedef {Parameters<Channel['set']>[1]} V */\r\n\r\n\t\t/** @type {WeakMap<K & object, V> | undefined} */ var $wm;\r\n\t\t/** @type {Channel | undefined} */ var $m;\r\n\r\n\t\t/** @type {Channel} */\r\n\t\tvar channel = {\r\n\t\t\tassert: function (key) {\r\n\t\t\t\tif (!channel.has(key)) {\r\n\t\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'delete': function (key) {\r\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\t\tif ($wm) {\r\n\t\t\t\t\t\treturn $weakMapDelete($wm, key);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (getSideChannelMap) {\r\n\t\t\t\t\tif ($m) {\r\n\t\t\t\t\t\treturn $m['delete'](key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tget: function (key) {\r\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\t\tif ($wm) {\r\n\t\t\t\t\t\treturn $weakMapGet($wm, key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn $m && $m.get(key);\r\n\t\t\t},\r\n\t\t\thas: function (key) {\r\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\t\tif ($wm) {\r\n\t\t\t\t\t\treturn $weakMapHas($wm, key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn !!$m && $m.has(key);\r\n\t\t\t},\r\n\t\t\tset: function (key, value) {\r\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\t\tif (!$wm) {\r\n\t\t\t\t\t\t$wm = new $WeakMap();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$weakMapSet($wm, key, value);\r\n\t\t\t\t} else if (getSideChannelMap) {\r\n\t\t\t\t\tif (!$m) {\r\n\t\t\t\t\t\t$m = getSideChannelMap();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// eslint-disable-next-line no-extra-parens\r\n\t\t\t\t\t/** @type {NonNullable<typeof $m>} */ ($m).set(key, value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// @ts-expect-error TODO: figure out why this is erroring\r\n\t\treturn channel;\r\n\t}\r\n\t: getSideChannelMap;\r\n", "'use strict';\r\n\r\nvar $TypeError = require('es-errors/type');\r\nvar inspect = require('object-inspect');\r\nvar getSideChannelList = require('side-channel-list');\r\nvar getSideChannelMap = require('side-channel-map');\r\nvar getSideChannelWeakMap = require('side-channel-weakmap');\r\n\r\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = function getSideChannel() {\r\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\r\n\r\n\t/** @type {Channel | undefined} */ var $channelData;\r\n\r\n\t/** @type {Channel} */\r\n\tvar channel = {\r\n\t\tassert: function (key) {\r\n\t\t\tif (!channel.has(key)) {\r\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\r\n\t\t\t}\r\n\t\t},\r\n\t\t'delete': function (key) {\r\n\t\t\treturn !!$channelData && $channelData['delete'](key);\r\n\t\t},\r\n\t\tget: function (key) {\r\n\t\t\treturn $channelData && $channelData.get(key);\r\n\t\t},\r\n\t\thas: function (key) {\r\n\t\t\treturn !!$channelData && $channelData.has(key);\r\n\t\t},\r\n\t\tset: function (key, value) {\r\n\t\t\tif (!$channelData) {\r\n\t\t\t\t$channelData = makeChannel();\r\n\t\t\t}\r\n\r\n\t\t\t$channelData.set(key, value);\r\n\t\t}\r\n\t};\r\n\t// @ts-expect-error TODO: figure out why this is erroring\r\n\treturn channel;\r\n};\r\n", "'use strict';\r\n\r\nvar replace = String.prototype.replace;\r\nvar percentTwenties = /%20/g;\r\n\r\nvar Format = {\r\n    RFC1738: 'RFC1738',\r\n    RFC3986: 'RFC3986'\r\n};\r\n\r\nmodule.exports = {\r\n    'default': Format.RFC3986,\r\n    formatters: {\r\n        RFC1738: function (value) {\r\n            return replace.call(value, percentTwenties, '+');\r\n        },\r\n        RFC3986: function (value) {\r\n            return String(value);\r\n        }\r\n    },\r\n    RFC1738: Format.RFC1738,\r\n    RFC3986: Format.RFC3986\r\n};\r\n", "'use strict';\r\n\r\nvar formats = require('./formats');\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\nvar isArray = Array.isArray;\r\n\r\nvar hexTable = (function () {\r\n    var array = [];\r\n    for (var i = 0; i < 256; ++i) {\r\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\r\n    }\r\n\r\n    return array;\r\n}());\r\n\r\nvar compactQueue = function compactQueue(queue) {\r\n    while (queue.length > 1) {\r\n        var item = queue.pop();\r\n        var obj = item.obj[item.prop];\r\n\r\n        if (isArray(obj)) {\r\n            var compacted = [];\r\n\r\n            for (var j = 0; j < obj.length; ++j) {\r\n                if (typeof obj[j] !== 'undefined') {\r\n                    compacted.push(obj[j]);\r\n                }\r\n            }\r\n\r\n            item.obj[item.prop] = compacted;\r\n        }\r\n    }\r\n};\r\n\r\nvar arrayToObject = function arrayToObject(source, options) {\r\n    var obj = options && options.plainObjects ? Object.create(null) : {};\r\n    for (var i = 0; i < source.length; ++i) {\r\n        if (typeof source[i] !== 'undefined') {\r\n            obj[i] = source[i];\r\n        }\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nvar merge = function merge(target, source, options) {\r\n    /* eslint no-param-reassign: 0 */\r\n    if (!source) {\r\n        return target;\r\n    }\r\n\r\n    if (typeof source !== 'object') {\r\n        if (isArray(target)) {\r\n            target.push(source);\r\n        } else if (target && typeof target === 'object') {\r\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\r\n                target[source] = true;\r\n            }\r\n        } else {\r\n            return [target, source];\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    if (!target || typeof target !== 'object') {\r\n        return [target].concat(source);\r\n    }\r\n\r\n    var mergeTarget = target;\r\n    if (isArray(target) && !isArray(source)) {\r\n        mergeTarget = arrayToObject(target, options);\r\n    }\r\n\r\n    if (isArray(target) && isArray(source)) {\r\n        source.forEach(function (item, i) {\r\n            if (has.call(target, i)) {\r\n                var targetItem = target[i];\r\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\r\n                    target[i] = merge(targetItem, item, options);\r\n                } else {\r\n                    target.push(item);\r\n                }\r\n            } else {\r\n                target[i] = item;\r\n            }\r\n        });\r\n        return target;\r\n    }\r\n\r\n    return Object.keys(source).reduce(function (acc, key) {\r\n        var value = source[key];\r\n\r\n        if (has.call(acc, key)) {\r\n            acc[key] = merge(acc[key], value, options);\r\n        } else {\r\n            acc[key] = value;\r\n        }\r\n        return acc;\r\n    }, mergeTarget);\r\n};\r\n\r\nvar assign = function assignSingleSource(target, source) {\r\n    return Object.keys(source).reduce(function (acc, key) {\r\n        acc[key] = source[key];\r\n        return acc;\r\n    }, target);\r\n};\r\n\r\nvar decode = function (str, decoder, charset) {\r\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\r\n    if (charset === 'iso-8859-1') {\r\n        // unescape never throws, no try...catch needed:\r\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\r\n    }\r\n    // utf-8\r\n    try {\r\n        return decodeURIComponent(strWithoutPlus);\r\n    } catch (e) {\r\n        return strWithoutPlus;\r\n    }\r\n};\r\n\r\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\r\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\r\n    // It has been adapted here for stricter adherence to RFC 3986\r\n    if (str.length === 0) {\r\n        return str;\r\n    }\r\n\r\n    var string = str;\r\n    if (typeof str === 'symbol') {\r\n        string = Symbol.prototype.toString.call(str);\r\n    } else if (typeof str !== 'string') {\r\n        string = String(str);\r\n    }\r\n\r\n    if (charset === 'iso-8859-1') {\r\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\r\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\r\n        });\r\n    }\r\n\r\n    var out = '';\r\n    for (var i = 0; i < string.length; ++i) {\r\n        var c = string.charCodeAt(i);\r\n\r\n        if (\r\n            c === 0x2D // -\r\n            || c === 0x2E // .\r\n            || c === 0x5F // _\r\n            || c === 0x7E // ~\r\n            || (c >= 0x30 && c <= 0x39) // 0-9\r\n            || (c >= 0x41 && c <= 0x5A) // a-z\r\n            || (c >= 0x61 && c <= 0x7A) // A-Z\r\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\r\n        ) {\r\n            out += string.charAt(i);\r\n            continue;\r\n        }\r\n\r\n        if (c < 0x80) {\r\n            out = out + hexTable[c];\r\n            continue;\r\n        }\r\n\r\n        if (c < 0x800) {\r\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\r\n            continue;\r\n        }\r\n\r\n        if (c < 0xD800 || c >= 0xE000) {\r\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\r\n            continue;\r\n        }\r\n\r\n        i += 1;\r\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\r\n        /* eslint operator-linebreak: [2, \"before\"] */\r\n        out += hexTable[0xF0 | (c >> 18)]\r\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\r\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\r\n            + hexTable[0x80 | (c & 0x3F)];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nvar compact = function compact(value) {\r\n    var queue = [{ obj: { o: value }, prop: 'o' }];\r\n    var refs = [];\r\n\r\n    for (var i = 0; i < queue.length; ++i) {\r\n        var item = queue[i];\r\n        var obj = item.obj[item.prop];\r\n\r\n        var keys = Object.keys(obj);\r\n        for (var j = 0; j < keys.length; ++j) {\r\n            var key = keys[j];\r\n            var val = obj[key];\r\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\r\n                queue.push({ obj: obj, prop: key });\r\n                refs.push(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    compactQueue(queue);\r\n\r\n    return value;\r\n};\r\n\r\nvar isRegExp = function isRegExp(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\r\n};\r\n\r\nvar isBuffer = function isBuffer(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return false;\r\n    }\r\n\r\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\r\n};\r\n\r\nvar combine = function combine(a, b) {\r\n    return [].concat(a, b);\r\n};\r\n\r\nvar maybeMap = function maybeMap(val, fn) {\r\n    if (isArray(val)) {\r\n        var mapped = [];\r\n        for (var i = 0; i < val.length; i += 1) {\r\n            mapped.push(fn(val[i]));\r\n        }\r\n        return mapped;\r\n    }\r\n    return fn(val);\r\n};\r\n\r\nmodule.exports = {\r\n    arrayToObject: arrayToObject,\r\n    assign: assign,\r\n    combine: combine,\r\n    compact: compact,\r\n    decode: decode,\r\n    encode: encode,\r\n    isBuffer: isBuffer,\r\n    isRegExp: isRegExp,\r\n    maybeMap: maybeMap,\r\n    merge: merge\r\n};\r\n", "'use strict';\r\n\r\nvar getSideChannel = require('side-channel');\r\nvar utils = require('./utils');\r\nvar formats = require('./formats');\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\nvar arrayPrefixGenerators = {\r\n    brackets: function brackets(prefix) {\r\n        return prefix + '[]';\r\n    },\r\n    comma: 'comma',\r\n    indices: function indices(prefix, key) {\r\n        return prefix + '[' + key + ']';\r\n    },\r\n    repeat: function repeat(prefix) {\r\n        return prefix;\r\n    }\r\n};\r\n\r\nvar isArray = Array.isArray;\r\nvar push = Array.prototype.push;\r\nvar pushToArray = function (arr, valueOrArray) {\r\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\r\n};\r\n\r\nvar toISO = Date.prototype.toISOString;\r\n\r\nvar defaultFormat = formats['default'];\r\nvar defaults = {\r\n    addQueryPrefix: false,\r\n    allowDots: false,\r\n    charset: 'utf-8',\r\n    charsetSentinel: false,\r\n    delimiter: '&',\r\n    encode: true,\r\n    encoder: utils.encode,\r\n    encodeValuesOnly: false,\r\n    format: defaultFormat,\r\n    formatter: formats.formatters[defaultFormat],\r\n    // deprecated\r\n    indices: false,\r\n    serializeDate: function serializeDate(date) {\r\n        return toISO.call(date);\r\n    },\r\n    skipNulls: false,\r\n    strictNullHandling: false\r\n};\r\n\r\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\r\n    return typeof v === 'string'\r\n        || typeof v === 'number'\r\n        || typeof v === 'boolean'\r\n        || typeof v === 'symbol'\r\n        || typeof v === 'bigint';\r\n};\r\n\r\nvar sentinel = {};\r\n\r\nvar stringify = function stringify(\r\n    object,\r\n    prefix,\r\n    generateArrayPrefix,\r\n    commaRoundTrip,\r\n    strictNullHandling,\r\n    skipNulls,\r\n    encoder,\r\n    filter,\r\n    sort,\r\n    allowDots,\r\n    serializeDate,\r\n    format,\r\n    formatter,\r\n    encodeValuesOnly,\r\n    charset,\r\n    sideChannel\r\n) {\r\n    var obj = object;\r\n\r\n    var tmpSc = sideChannel;\r\n    var step = 0;\r\n    var findFlag = false;\r\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\r\n        // Where object last appeared in the ref tree\r\n        var pos = tmpSc.get(object);\r\n        step += 1;\r\n        if (typeof pos !== 'undefined') {\r\n            if (pos === step) {\r\n                throw new RangeError('Cyclic object value');\r\n            } else {\r\n                findFlag = true; // Break while\r\n            }\r\n        }\r\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\r\n            step = 0;\r\n        }\r\n    }\r\n\r\n    if (typeof filter === 'function') {\r\n        obj = filter(prefix, obj);\r\n    } else if (obj instanceof Date) {\r\n        obj = serializeDate(obj);\r\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\r\n        obj = utils.maybeMap(obj, function (value) {\r\n            if (value instanceof Date) {\r\n                return serializeDate(value);\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n\r\n    if (obj === null) {\r\n        if (strictNullHandling) {\r\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\r\n        }\r\n\r\n        obj = '';\r\n    }\r\n\r\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\r\n        if (encoder) {\r\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\r\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\r\n        }\r\n        return [formatter(prefix) + '=' + formatter(String(obj))];\r\n    }\r\n\r\n    var values = [];\r\n\r\n    if (typeof obj === 'undefined') {\r\n        return values;\r\n    }\r\n\r\n    var objKeys;\r\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\r\n        // we need to join elements in\r\n        if (encodeValuesOnly && encoder) {\r\n            obj = utils.maybeMap(obj, encoder);\r\n        }\r\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\r\n    } else if (isArray(filter)) {\r\n        objKeys = filter;\r\n    } else {\r\n        var keys = Object.keys(obj);\r\n        objKeys = sort ? keys.sort(sort) : keys;\r\n    }\r\n\r\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\r\n\r\n    for (var j = 0; j < objKeys.length; ++j) {\r\n        var key = objKeys[j];\r\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\r\n\r\n        if (skipNulls && value === null) {\r\n            continue;\r\n        }\r\n\r\n        var keyPrefix = isArray(obj)\r\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\r\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\r\n\r\n        sideChannel.set(object, step);\r\n        var valueSideChannel = getSideChannel();\r\n        valueSideChannel.set(sentinel, sideChannel);\r\n        pushToArray(values, stringify(\r\n            value,\r\n            keyPrefix,\r\n            generateArrayPrefix,\r\n            commaRoundTrip,\r\n            strictNullHandling,\r\n            skipNulls,\r\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\r\n            filter,\r\n            sort,\r\n            allowDots,\r\n            serializeDate,\r\n            format,\r\n            formatter,\r\n            encodeValuesOnly,\r\n            charset,\r\n            valueSideChannel\r\n        ));\r\n    }\r\n\r\n    return values;\r\n};\r\n\r\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\r\n    if (!opts) {\r\n        return defaults;\r\n    }\r\n\r\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\r\n        throw new TypeError('Encoder has to be a function.');\r\n    }\r\n\r\n    var charset = opts.charset || defaults.charset;\r\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\r\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\r\n    }\r\n\r\n    var format = formats['default'];\r\n    if (typeof opts.format !== 'undefined') {\r\n        if (!has.call(formats.formatters, opts.format)) {\r\n            throw new TypeError('Unknown format option provided.');\r\n        }\r\n        format = opts.format;\r\n    }\r\n    var formatter = formats.formatters[format];\r\n\r\n    var filter = defaults.filter;\r\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\r\n        filter = opts.filter;\r\n    }\r\n\r\n    return {\r\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\r\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\r\n        charset: charset,\r\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\r\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\r\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\r\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\r\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\r\n        filter: filter,\r\n        format: format,\r\n        formatter: formatter,\r\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\r\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\r\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\r\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\r\n    };\r\n};\r\n\r\nmodule.exports = function (object, opts) {\r\n    var obj = object;\r\n    var options = normalizeStringifyOptions(opts);\r\n\r\n    var objKeys;\r\n    var filter;\r\n\r\n    if (typeof options.filter === 'function') {\r\n        filter = options.filter;\r\n        obj = filter('', obj);\r\n    } else if (isArray(options.filter)) {\r\n        filter = options.filter;\r\n        objKeys = filter;\r\n    }\r\n\r\n    var keys = [];\r\n\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return '';\r\n    }\r\n\r\n    var arrayFormat;\r\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\r\n        arrayFormat = opts.arrayFormat;\r\n    } else if (opts && 'indices' in opts) {\r\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\r\n    } else {\r\n        arrayFormat = 'indices';\r\n    }\r\n\r\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\r\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\r\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\r\n    }\r\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\r\n\r\n    if (!objKeys) {\r\n        objKeys = Object.keys(obj);\r\n    }\r\n\r\n    if (options.sort) {\r\n        objKeys.sort(options.sort);\r\n    }\r\n\r\n    var sideChannel = getSideChannel();\r\n    for (var i = 0; i < objKeys.length; ++i) {\r\n        var key = objKeys[i];\r\n\r\n        if (options.skipNulls && obj[key] === null) {\r\n            continue;\r\n        }\r\n        pushToArray(keys, stringify(\r\n            obj[key],\r\n            key,\r\n            generateArrayPrefix,\r\n            commaRoundTrip,\r\n            options.strictNullHandling,\r\n            options.skipNulls,\r\n            options.encode ? options.encoder : null,\r\n            options.filter,\r\n            options.sort,\r\n            options.allowDots,\r\n            options.serializeDate,\r\n            options.format,\r\n            options.formatter,\r\n            options.encodeValuesOnly,\r\n            options.charset,\r\n            sideChannel\r\n        ));\r\n    }\r\n\r\n    var joined = keys.join(options.delimiter);\r\n    var prefix = options.addQueryPrefix === true ? '?' : '';\r\n\r\n    if (options.charsetSentinel) {\r\n        if (options.charset === 'iso-8859-1') {\r\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\r\n            prefix += 'utf8=%26%2310003%3B&';\r\n        } else {\r\n            // encodeURIComponent('✓')\r\n            prefix += 'utf8=%E2%9C%93&';\r\n        }\r\n    }\r\n\r\n    return joined.length > 0 ? prefix + joined : '';\r\n};\r\n", "'use strict';\r\n\r\nvar utils = require('./utils');\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\nvar isArray = Array.isArray;\r\n\r\nvar defaults = {\r\n    allowDots: false,\r\n    allowPrototypes: false,\r\n    allowSparse: false,\r\n    arrayLimit: 20,\r\n    charset: 'utf-8',\r\n    charsetSentinel: false,\r\n    comma: false,\r\n    decoder: utils.decode,\r\n    delimiter: '&',\r\n    depth: 5,\r\n    ignoreQueryPrefix: false,\r\n    interpretNumericEntities: false,\r\n    parameterLimit: 1000,\r\n    parseArrays: true,\r\n    plainObjects: false,\r\n    strictNullHandling: false\r\n};\r\n\r\nvar interpretNumericEntities = function (str) {\r\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\r\n        return String.fromCharCode(parseInt(numberStr, 10));\r\n    });\r\n};\r\n\r\nvar parseArrayValue = function (val, options) {\r\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\r\n        return val.split(',');\r\n    }\r\n\r\n    return val;\r\n};\r\n\r\n// This is what browsers will submit when the ✓ character occurs in an\r\n// application/x-www-form-urlencoded body and the encoding of the page containing\r\n// the form is iso-8859-1, or when the submitted form has an accept-charset\r\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\r\n// the ✓ character, such as us-ascii.\r\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\r\n\r\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\r\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\r\n\r\nvar parseValues = function parseQueryStringValues(str, options) {\r\n    var obj = {};\r\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\r\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\r\n    var parts = cleanStr.split(options.delimiter, limit);\r\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\r\n    var i;\r\n\r\n    var charset = options.charset;\r\n    if (options.charsetSentinel) {\r\n        for (i = 0; i < parts.length; ++i) {\r\n            if (parts[i].indexOf('utf8=') === 0) {\r\n                if (parts[i] === charsetSentinel) {\r\n                    charset = 'utf-8';\r\n                } else if (parts[i] === isoSentinel) {\r\n                    charset = 'iso-8859-1';\r\n                }\r\n                skipIndex = i;\r\n                i = parts.length; // The eslint settings do not allow break;\r\n            }\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < parts.length; ++i) {\r\n        if (i === skipIndex) {\r\n            continue;\r\n        }\r\n        var part = parts[i];\r\n\r\n        var bracketEqualsPos = part.indexOf(']=');\r\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\r\n\r\n        var key, val;\r\n        if (pos === -1) {\r\n            key = options.decoder(part, defaults.decoder, charset, 'key');\r\n            val = options.strictNullHandling ? null : '';\r\n        } else {\r\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\r\n            val = utils.maybeMap(\r\n                parseArrayValue(part.slice(pos + 1), options),\r\n                function (encodedVal) {\r\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\r\n                }\r\n            );\r\n        }\r\n\r\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\r\n            val = interpretNumericEntities(val);\r\n        }\r\n\r\n        if (part.indexOf('[]=') > -1) {\r\n            val = isArray(val) ? [val] : val;\r\n        }\r\n\r\n        if (has.call(obj, key)) {\r\n            obj[key] = utils.combine(obj[key], val);\r\n        } else {\r\n            obj[key] = val;\r\n        }\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nvar parseObject = function (chain, val, options, valuesParsed) {\r\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\r\n\r\n    for (var i = chain.length - 1; i >= 0; --i) {\r\n        var obj;\r\n        var root = chain[i];\r\n\r\n        if (root === '[]' && options.parseArrays) {\r\n            obj = [].concat(leaf);\r\n        } else {\r\n            obj = options.plainObjects ? Object.create(null) : {};\r\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\r\n            var index = parseInt(cleanRoot, 10);\r\n            if (!options.parseArrays && cleanRoot === '') {\r\n                obj = { 0: leaf };\r\n            } else if (\r\n                !isNaN(index)\r\n                && root !== cleanRoot\r\n                && String(index) === cleanRoot\r\n                && index >= 0\r\n                && (options.parseArrays && index <= options.arrayLimit)\r\n            ) {\r\n                obj = [];\r\n                obj[index] = leaf;\r\n            } else if (cleanRoot !== '__proto__') {\r\n                obj[cleanRoot] = leaf;\r\n            }\r\n        }\r\n\r\n        leaf = obj;\r\n    }\r\n\r\n    return leaf;\r\n};\r\n\r\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\r\n    if (!givenKey) {\r\n        return;\r\n    }\r\n\r\n    // Transform dot notation to bracket notation\r\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\r\n\r\n    // The regex chunks\r\n\r\n    var brackets = /(\\[[^[\\]]*])/;\r\n    var child = /(\\[[^[\\]]*])/g;\r\n\r\n    // Get the parent\r\n\r\n    var segment = options.depth > 0 && brackets.exec(key);\r\n    var parent = segment ? key.slice(0, segment.index) : key;\r\n\r\n    // Stash the parent if it exists\r\n\r\n    var keys = [];\r\n    if (parent) {\r\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\r\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\r\n            if (!options.allowPrototypes) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        keys.push(parent);\r\n    }\r\n\r\n    // Loop through children appending to the array until we hit depth\r\n\r\n    var i = 0;\r\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\r\n        i += 1;\r\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\r\n            if (!options.allowPrototypes) {\r\n                return;\r\n            }\r\n        }\r\n        keys.push(segment[1]);\r\n    }\r\n\r\n    // If there's a remainder, just add whatever is left\r\n\r\n    if (segment) {\r\n        keys.push('[' + key.slice(segment.index) + ']');\r\n    }\r\n\r\n    return parseObject(keys, val, options, valuesParsed);\r\n};\r\n\r\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\r\n    if (!opts) {\r\n        return defaults;\r\n    }\r\n\r\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\r\n        throw new TypeError('Decoder has to be a function.');\r\n    }\r\n\r\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\r\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\r\n    }\r\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\r\n\r\n    return {\r\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\r\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\r\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\r\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\r\n        charset: charset,\r\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\r\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\r\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\r\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\r\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\r\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\r\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\r\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\r\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\r\n        parseArrays: opts.parseArrays !== false,\r\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\r\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\r\n    };\r\n};\r\n\r\nmodule.exports = function (str, opts) {\r\n    var options = normalizeParseOptions(opts);\r\n\r\n    if (str === '' || str === null || typeof str === 'undefined') {\r\n        return options.plainObjects ? Object.create(null) : {};\r\n    }\r\n\r\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\r\n    var obj = options.plainObjects ? Object.create(null) : {};\r\n\r\n    // Iterate over the keys and setup the new object\r\n\r\n    var keys = Object.keys(tempObj);\r\n    for (var i = 0; i < keys.length; ++i) {\r\n        var key = keys[i];\r\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\r\n        obj = utils.merge(obj, newObj, options);\r\n    }\r\n\r\n    if (options.allowSparse === true) {\r\n        return obj;\r\n    }\r\n\r\n    return utils.compact(obj);\r\n};\r\n", "'use strict';\r\n\r\nvar stringify = require('./stringify');\r\nvar parse = require('./parse');\r\nvar formats = require('./formats');\r\n\r\nmodule.exports = {\r\n    formats: formats,\r\n    parse: parse,\r\n    stringify: stringify\r\n};\r\n", "/** Used to map aliases to their real names. */\r\nexports.aliasToReal = {\r\n\r\n  // Lodash aliases.\r\n  'each': 'forEach',\r\n  'eachRight': 'forEachRight',\r\n  'entries': 'toPairs',\r\n  'entriesIn': 'toPairsIn',\r\n  'extend': 'assignIn',\r\n  'extendAll': 'assignInAll',\r\n  'extendAllWith': 'assignInAllWith',\r\n  'extendWith': 'assignInWith',\r\n  'first': 'head',\r\n\r\n  // Methods that are curried variants of others.\r\n  'conforms': 'conformsTo',\r\n  'matches': 'isMatch',\r\n  'property': 'get',\r\n\r\n  // Ramda aliases.\r\n  '__': 'placeholder',\r\n  'F': 'stubFalse',\r\n  'T': 'stubTrue',\r\n  'all': 'every',\r\n  'allPass': 'overEvery',\r\n  'always': 'constant',\r\n  'any': 'some',\r\n  'anyPass': 'overSome',\r\n  'apply': 'spread',\r\n  'assoc': 'set',\r\n  'assocPath': 'set',\r\n  'complement': 'negate',\r\n  'compose': 'flowRight',\r\n  'contains': 'includes',\r\n  'dissoc': 'unset',\r\n  'dissocPath': 'unset',\r\n  'dropLast': 'dropRight',\r\n  'dropLastWhile': 'dropRightWhile',\r\n  'equals': 'isEqual',\r\n  'identical': 'eq',\r\n  'indexBy': 'keyBy',\r\n  'init': 'initial',\r\n  'invertObj': 'invert',\r\n  'juxt': 'over',\r\n  'omitAll': 'omit',\r\n  'nAry': 'ary',\r\n  'path': 'get',\r\n  'pathEq': 'matchesProperty',\r\n  'pathOr': 'getOr',\r\n  'paths': 'at',\r\n  'pickAll': 'pick',\r\n  'pipe': 'flow',\r\n  'pluck': 'map',\r\n  'prop': 'get',\r\n  'propEq': 'matchesProperty',\r\n  'propOr': 'getOr',\r\n  'props': 'at',\r\n  'symmetricDifference': 'xor',\r\n  'symmetricDifferenceBy': 'xorBy',\r\n  'symmetricDifferenceWith': 'xorWith',\r\n  'takeLast': 'takeRight',\r\n  'takeLastWhile': 'takeRightWhile',\r\n  'unapply': 'rest',\r\n  'unnest': 'flatten',\r\n  'useWith': 'overArgs',\r\n  'where': 'conformsTo',\r\n  'whereEq': 'isMatch',\r\n  'zipObj': 'zipObject'\r\n};\r\n\r\n/** Used to map ary to method names. */\r\nexports.aryMethod = {\r\n  '1': [\r\n    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',\r\n    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',\r\n    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',\r\n    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',\r\n    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',\r\n    'uniqueId', 'words', 'zipAll'\r\n  ],\r\n  '2': [\r\n    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',\r\n    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',\r\n    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',\r\n    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',\r\n    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',\r\n    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',\r\n    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',\r\n    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',\r\n    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',\r\n    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',\r\n    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',\r\n    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',\r\n    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',\r\n    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',\r\n    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',\r\n    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',\r\n    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',\r\n    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',\r\n    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',\r\n    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',\r\n    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',\r\n    'zipObjectDeep'\r\n  ],\r\n  '3': [\r\n    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',\r\n    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',\r\n    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',\r\n    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',\r\n    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',\r\n    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',\r\n    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',\r\n    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',\r\n    'xorWith', 'zipWith'\r\n  ],\r\n  '4': [\r\n    'fill', 'setWith', 'updateWith'\r\n  ]\r\n};\r\n\r\n/** Used to map ary to rearg configs. */\r\nexports.aryRearg = {\r\n  '2': [1, 0],\r\n  '3': [2, 0, 1],\r\n  '4': [3, 2, 0, 1]\r\n};\r\n\r\n/** Used to map method names to their iteratee ary. */\r\nexports.iterateeAry = {\r\n  'dropRightWhile': 1,\r\n  'dropWhile': 1,\r\n  'every': 1,\r\n  'filter': 1,\r\n  'find': 1,\r\n  'findFrom': 1,\r\n  'findIndex': 1,\r\n  'findIndexFrom': 1,\r\n  'findKey': 1,\r\n  'findLast': 1,\r\n  'findLastFrom': 1,\r\n  'findLastIndex': 1,\r\n  'findLastIndexFrom': 1,\r\n  'findLastKey': 1,\r\n  'flatMap': 1,\r\n  'flatMapDeep': 1,\r\n  'flatMapDepth': 1,\r\n  'forEach': 1,\r\n  'forEachRight': 1,\r\n  'forIn': 1,\r\n  'forInRight': 1,\r\n  'forOwn': 1,\r\n  'forOwnRight': 1,\r\n  'map': 1,\r\n  'mapKeys': 1,\r\n  'mapValues': 1,\r\n  'partition': 1,\r\n  'reduce': 2,\r\n  'reduceRight': 2,\r\n  'reject': 1,\r\n  'remove': 1,\r\n  'some': 1,\r\n  'takeRightWhile': 1,\r\n  'takeWhile': 1,\r\n  'times': 1,\r\n  'transform': 2\r\n};\r\n\r\n/** Used to map method names to iteratee rearg configs. */\r\nexports.iterateeRearg = {\r\n  'mapKeys': [1],\r\n  'reduceRight': [1, 0]\r\n};\r\n\r\n/** Used to map method names to rearg configs. */\r\nexports.methodRearg = {\r\n  'assignInAllWith': [1, 0],\r\n  'assignInWith': [1, 2, 0],\r\n  'assignAllWith': [1, 0],\r\n  'assignWith': [1, 2, 0],\r\n  'differenceBy': [1, 2, 0],\r\n  'differenceWith': [1, 2, 0],\r\n  'getOr': [2, 1, 0],\r\n  'intersectionBy': [1, 2, 0],\r\n  'intersectionWith': [1, 2, 0],\r\n  'isEqualWith': [1, 2, 0],\r\n  'isMatchWith': [2, 1, 0],\r\n  'mergeAllWith': [1, 0],\r\n  'mergeWith': [1, 2, 0],\r\n  'padChars': [2, 1, 0],\r\n  'padCharsEnd': [2, 1, 0],\r\n  'padCharsStart': [2, 1, 0],\r\n  'pullAllBy': [2, 1, 0],\r\n  'pullAllWith': [2, 1, 0],\r\n  'rangeStep': [1, 2, 0],\r\n  'rangeStepRight': [1, 2, 0],\r\n  'setWith': [3, 1, 2, 0],\r\n  'sortedIndexBy': [2, 1, 0],\r\n  'sortedLastIndexBy': [2, 1, 0],\r\n  'unionBy': [1, 2, 0],\r\n  'unionWith': [1, 2, 0],\r\n  'updateWith': [3, 1, 2, 0],\r\n  'xorBy': [1, 2, 0],\r\n  'xorWith': [1, 2, 0],\r\n  'zipWith': [1, 2, 0]\r\n};\r\n\r\n/** Used to map method names to spread configs. */\r\nexports.methodSpread = {\r\n  'assignAll': { 'start': 0 },\r\n  'assignAllWith': { 'start': 0 },\r\n  'assignInAll': { 'start': 0 },\r\n  'assignInAllWith': { 'start': 0 },\r\n  'defaultsAll': { 'start': 0 },\r\n  'defaultsDeepAll': { 'start': 0 },\r\n  'invokeArgs': { 'start': 2 },\r\n  'invokeArgsMap': { 'start': 2 },\r\n  'mergeAll': { 'start': 0 },\r\n  'mergeAllWith': { 'start': 0 },\r\n  'partial': { 'start': 1 },\r\n  'partialRight': { 'start': 1 },\r\n  'without': { 'start': 1 },\r\n  'zipAll': { 'start': 0 }\r\n};\r\n\r\n/** Used to identify methods which mutate arrays or objects. */\r\nexports.mutate = {\r\n  'array': {\r\n    'fill': true,\r\n    'pull': true,\r\n    'pullAll': true,\r\n    'pullAllBy': true,\r\n    'pullAllWith': true,\r\n    'pullAt': true,\r\n    'remove': true,\r\n    'reverse': true\r\n  },\r\n  'object': {\r\n    'assign': true,\r\n    'assignAll': true,\r\n    'assignAllWith': true,\r\n    'assignIn': true,\r\n    'assignInAll': true,\r\n    'assignInAllWith': true,\r\n    'assignInWith': true,\r\n    'assignWith': true,\r\n    'defaults': true,\r\n    'defaultsAll': true,\r\n    'defaultsDeep': true,\r\n    'defaultsDeepAll': true,\r\n    'merge': true,\r\n    'mergeAll': true,\r\n    'mergeAllWith': true,\r\n    'mergeWith': true,\r\n  },\r\n  'set': {\r\n    'set': true,\r\n    'setWith': true,\r\n    'unset': true,\r\n    'update': true,\r\n    'updateWith': true\r\n  }\r\n};\r\n\r\n/** Used to map real names to their aliases. */\r\nexports.realToAlias = (function() {\r\n  var hasOwnProperty = Object.prototype.hasOwnProperty,\r\n      object = exports.aliasToReal,\r\n      result = {};\r\n\r\n  for (var key in object) {\r\n    var value = object[key];\r\n    if (hasOwnProperty.call(result, value)) {\r\n      result[value].push(key);\r\n    } else {\r\n      result[value] = [key];\r\n    }\r\n  }\r\n  return result;\r\n}());\r\n\r\n/** Used to map method names to other names. */\r\nexports.remap = {\r\n  'assignAll': 'assign',\r\n  'assignAllWith': 'assignWith',\r\n  'assignInAll': 'assignIn',\r\n  'assignInAllWith': 'assignInWith',\r\n  'curryN': 'curry',\r\n  'curryRightN': 'curryRight',\r\n  'defaultsAll': 'defaults',\r\n  'defaultsDeepAll': 'defaultsDeep',\r\n  'findFrom': 'find',\r\n  'findIndexFrom': 'findIndex',\r\n  'findLastFrom': 'findLast',\r\n  'findLastIndexFrom': 'findLastIndex',\r\n  'getOr': 'get',\r\n  'includesFrom': 'includes',\r\n  'indexOfFrom': 'indexOf',\r\n  'invokeArgs': 'invoke',\r\n  'invokeArgsMap': 'invokeMap',\r\n  'lastIndexOfFrom': 'lastIndexOf',\r\n  'mergeAll': 'merge',\r\n  'mergeAllWith': 'mergeWith',\r\n  'padChars': 'pad',\r\n  'padCharsEnd': 'padEnd',\r\n  'padCharsStart': 'padStart',\r\n  'propertyOf': 'get',\r\n  'rangeStep': 'range',\r\n  'rangeStepRight': 'rangeRight',\r\n  'restFrom': 'rest',\r\n  'spreadFrom': 'spread',\r\n  'trimChars': 'trim',\r\n  'trimCharsEnd': 'trimEnd',\r\n  'trimCharsStart': 'trimStart',\r\n  'zipAll': 'zip'\r\n};\r\n\r\n/** Used to track methods that skip fixing their arity. */\r\nexports.skipFixed = {\r\n  'castArray': true,\r\n  'flow': true,\r\n  'flowRight': true,\r\n  'iteratee': true,\r\n  'mixin': true,\r\n  'rearg': true,\r\n  'runInContext': true\r\n};\r\n\r\n/** Used to track methods that skip rearranging arguments. */\r\nexports.skipRearg = {\r\n  'add': true,\r\n  'assign': true,\r\n  'assignIn': true,\r\n  'bind': true,\r\n  'bindKey': true,\r\n  'concat': true,\r\n  'difference': true,\r\n  'divide': true,\r\n  'eq': true,\r\n  'gt': true,\r\n  'gte': true,\r\n  'isEqual': true,\r\n  'lt': true,\r\n  'lte': true,\r\n  'matchesProperty': true,\r\n  'merge': true,\r\n  'multiply': true,\r\n  'overArgs': true,\r\n  'partial': true,\r\n  'partialRight': true,\r\n  'propertyOf': true,\r\n  'random': true,\r\n  'range': true,\r\n  'rangeRight': true,\r\n  'subtract': true,\r\n  'zip': true,\r\n  'zipObject': true,\r\n  'zipObjectDeep': true\r\n};\r\n", "/**\r\n * The default argument placeholder value for methods.\r\n *\r\n * @type {Object}\r\n */\r\nmodule.exports = {};\r\n", "var mapping = require('./_mapping'),\r\n    fallbackHolder = require('./placeholder');\r\n\r\n/** Built-in value reference. */\r\nvar push = Array.prototype.push;\r\n\r\n/**\r\n * Creates a function, with an arity of `n`, that invokes `func` with the\r\n * arguments it receives.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} n The arity of the new function.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction baseArity(func, n) {\r\n  return n == 2\r\n    ? function(a, b) { return func.apply(undefined, arguments); }\r\n    : function(a) { return func.apply(undefined, arguments); };\r\n}\r\n\r\n/**\r\n * Creates a function that invokes `func`, with up to `n` arguments, ignoring\r\n * any additional arguments.\r\n *\r\n * @private\r\n * @param {Function} func The function to cap arguments for.\r\n * @param {number} n The arity cap.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction baseAry(func, n) {\r\n  return n == 2\r\n    ? function(a, b) { return func(a, b); }\r\n    : function(a) { return func(a); };\r\n}\r\n\r\n/**\r\n * Creates a clone of `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to clone.\r\n * @returns {Array} Returns the cloned array.\r\n */\r\nfunction cloneArray(array) {\r\n  var length = array ? array.length : 0,\r\n      result = Array(length);\r\n\r\n  while (length--) {\r\n    result[length] = array[length];\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Creates a function that clones a given object using the assignment `func`.\r\n *\r\n * @private\r\n * @param {Function} func The assignment function.\r\n * @returns {Function} Returns the new cloner function.\r\n */\r\nfunction createCloner(func) {\r\n  return function(object) {\r\n    return func({}, object);\r\n  };\r\n}\r\n\r\n/**\r\n * A specialized version of `_.spread` which flattens the spread array into\r\n * the arguments of the invoked `func`.\r\n *\r\n * @private\r\n * @param {Function} func The function to spread arguments over.\r\n * @param {number} start The start position of the spread.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction flatSpread(func, start) {\r\n  return function() {\r\n    var length = arguments.length,\r\n        lastIndex = length - 1,\r\n        args = Array(length);\r\n\r\n    while (length--) {\r\n      args[length] = arguments[length];\r\n    }\r\n    var array = args[start],\r\n        otherArgs = args.slice(0, start);\r\n\r\n    if (array) {\r\n      push.apply(otherArgs, array);\r\n    }\r\n    if (start != lastIndex) {\r\n      push.apply(otherArgs, args.slice(start + 1));\r\n    }\r\n    return func.apply(this, otherArgs);\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a function that wraps `func` and uses `cloner` to clone the first\r\n * argument it receives.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {Function} cloner The function to clone arguments.\r\n * @returns {Function} Returns the new immutable function.\r\n */\r\nfunction wrapImmutable(func, cloner) {\r\n  return function() {\r\n    var length = arguments.length;\r\n    if (!length) {\r\n      return;\r\n    }\r\n    var args = Array(length);\r\n    while (length--) {\r\n      args[length] = arguments[length];\r\n    }\r\n    var result = args[0] = cloner.apply(undefined, args);\r\n    func.apply(undefined, args);\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * The base implementation of `convert` which accepts a `util` object of methods\r\n * required to perform conversions.\r\n *\r\n * @param {Object} util The util object.\r\n * @param {string} name The name of the function to convert.\r\n * @param {Function} func The function to convert.\r\n * @param {Object} [options] The options object.\r\n * @param {boolean} [options.cap=true] Specify capping iteratee arguments.\r\n * @param {boolean} [options.curry=true] Specify currying.\r\n * @param {boolean} [options.fixed=true] Specify fixed arity.\r\n * @param {boolean} [options.immutable=true] Specify immutable operations.\r\n * @param {boolean} [options.rearg=true] Specify rearranging arguments.\r\n * @returns {Function|Object} Returns the converted function or object.\r\n */\r\nfunction baseConvert(util, name, func, options) {\r\n  var isLib = typeof name == 'function',\r\n      isObj = name === Object(name);\r\n\r\n  if (isObj) {\r\n    options = func;\r\n    func = name;\r\n    name = undefined;\r\n  }\r\n  if (func == null) {\r\n    throw new TypeError;\r\n  }\r\n  options || (options = {});\r\n\r\n  var config = {\r\n    'cap': 'cap' in options ? options.cap : true,\r\n    'curry': 'curry' in options ? options.curry : true,\r\n    'fixed': 'fixed' in options ? options.fixed : true,\r\n    'immutable': 'immutable' in options ? options.immutable : true,\r\n    'rearg': 'rearg' in options ? options.rearg : true\r\n  };\r\n\r\n  var defaultHolder = isLib ? func : fallbackHolder,\r\n      forceCurry = ('curry' in options) && options.curry,\r\n      forceFixed = ('fixed' in options) && options.fixed,\r\n      forceRearg = ('rearg' in options) && options.rearg,\r\n      pristine = isLib ? func.runInContext() : undefined;\r\n\r\n  var helpers = isLib ? func : {\r\n    'ary': util.ary,\r\n    'assign': util.assign,\r\n    'clone': util.clone,\r\n    'curry': util.curry,\r\n    'forEach': util.forEach,\r\n    'isArray': util.isArray,\r\n    'isError': util.isError,\r\n    'isFunction': util.isFunction,\r\n    'isWeakMap': util.isWeakMap,\r\n    'iteratee': util.iteratee,\r\n    'keys': util.keys,\r\n    'rearg': util.rearg,\r\n    'toInteger': util.toInteger,\r\n    'toPath': util.toPath\r\n  };\r\n\r\n  var ary = helpers.ary,\r\n      assign = helpers.assign,\r\n      clone = helpers.clone,\r\n      curry = helpers.curry,\r\n      each = helpers.forEach,\r\n      isArray = helpers.isArray,\r\n      isError = helpers.isError,\r\n      isFunction = helpers.isFunction,\r\n      isWeakMap = helpers.isWeakMap,\r\n      keys = helpers.keys,\r\n      rearg = helpers.rearg,\r\n      toInteger = helpers.toInteger,\r\n      toPath = helpers.toPath;\r\n\r\n  var aryMethodKeys = keys(mapping.aryMethod);\r\n\r\n  var wrappers = {\r\n    'castArray': function(castArray) {\r\n      return function() {\r\n        var value = arguments[0];\r\n        return isArray(value)\r\n          ? castArray(cloneArray(value))\r\n          : castArray.apply(undefined, arguments);\r\n      };\r\n    },\r\n    'iteratee': function(iteratee) {\r\n      return function() {\r\n        var func = arguments[0],\r\n            arity = arguments[1],\r\n            result = iteratee(func, arity),\r\n            length = result.length;\r\n\r\n        if (config.cap && typeof arity == 'number') {\r\n          arity = arity > 2 ? (arity - 2) : 1;\r\n          return (length && length <= arity) ? result : baseAry(result, arity);\r\n        }\r\n        return result;\r\n      };\r\n    },\r\n    'mixin': function(mixin) {\r\n      return function(source) {\r\n        var func = this;\r\n        if (!isFunction(func)) {\r\n          return mixin(func, Object(source));\r\n        }\r\n        var pairs = [];\r\n        each(keys(source), function(key) {\r\n          if (isFunction(source[key])) {\r\n            pairs.push([key, func.prototype[key]]);\r\n          }\r\n        });\r\n\r\n        mixin(func, Object(source));\r\n\r\n        each(pairs, function(pair) {\r\n          var value = pair[1];\r\n          if (isFunction(value)) {\r\n            func.prototype[pair[0]] = value;\r\n          } else {\r\n            delete func.prototype[pair[0]];\r\n          }\r\n        });\r\n        return func;\r\n      };\r\n    },\r\n    'nthArg': function(nthArg) {\r\n      return function(n) {\r\n        var arity = n < 0 ? 1 : (toInteger(n) + 1);\r\n        return curry(nthArg(n), arity);\r\n      };\r\n    },\r\n    'rearg': function(rearg) {\r\n      return function(func, indexes) {\r\n        var arity = indexes ? indexes.length : 0;\r\n        return curry(rearg(func, indexes), arity);\r\n      };\r\n    },\r\n    'runInContext': function(runInContext) {\r\n      return function(context) {\r\n        return baseConvert(util, runInContext(context), options);\r\n      };\r\n    }\r\n  };\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Casts `func` to a function with an arity capped iteratee if needed.\r\n   *\r\n   * @private\r\n   * @param {string} name The name of the function to inspect.\r\n   * @param {Function} func The function to inspect.\r\n   * @returns {Function} Returns the cast function.\r\n   */\r\n  function castCap(name, func) {\r\n    if (config.cap) {\r\n      var indexes = mapping.iterateeRearg[name];\r\n      if (indexes) {\r\n        return iterateeRearg(func, indexes);\r\n      }\r\n      var n = !isLib && mapping.iterateeAry[name];\r\n      if (n) {\r\n        return iterateeAry(func, n);\r\n      }\r\n    }\r\n    return func;\r\n  }\r\n\r\n  /**\r\n   * Casts `func` to a curried function if needed.\r\n   *\r\n   * @private\r\n   * @param {string} name The name of the function to inspect.\r\n   * @param {Function} func The function to inspect.\r\n   * @param {number} n The arity of `func`.\r\n   * @returns {Function} Returns the cast function.\r\n   */\r\n  function castCurry(name, func, n) {\r\n    return (forceCurry || (config.curry && n > 1))\r\n      ? curry(func, n)\r\n      : func;\r\n  }\r\n\r\n  /**\r\n   * Casts `func` to a fixed arity function if needed.\r\n   *\r\n   * @private\r\n   * @param {string} name The name of the function to inspect.\r\n   * @param {Function} func The function to inspect.\r\n   * @param {number} n The arity cap.\r\n   * @returns {Function} Returns the cast function.\r\n   */\r\n  function castFixed(name, func, n) {\r\n    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {\r\n      var data = mapping.methodSpread[name],\r\n          start = data && data.start;\r\n\r\n      return start  === undefined ? ary(func, n) : flatSpread(func, start);\r\n    }\r\n    return func;\r\n  }\r\n\r\n  /**\r\n   * Casts `func` to an rearged function if needed.\r\n   *\r\n   * @private\r\n   * @param {string} name The name of the function to inspect.\r\n   * @param {Function} func The function to inspect.\r\n   * @param {number} n The arity of `func`.\r\n   * @returns {Function} Returns the cast function.\r\n   */\r\n  function castRearg(name, func, n) {\r\n    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))\r\n      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])\r\n      : func;\r\n  }\r\n\r\n  /**\r\n   * Creates a clone of `object` by `path`.\r\n   *\r\n   * @private\r\n   * @param {Object} object The object to clone.\r\n   * @param {Array|string} path The path to clone by.\r\n   * @returns {Object} Returns the cloned object.\r\n   */\r\n  function cloneByPath(object, path) {\r\n    path = toPath(path);\r\n\r\n    var index = -1,\r\n        length = path.length,\r\n        lastIndex = length - 1,\r\n        result = clone(Object(object)),\r\n        nested = result;\r\n\r\n    while (nested != null && ++index < length) {\r\n      var key = path[index],\r\n          value = nested[key];\r\n\r\n      if (value != null &&\r\n          !(isFunction(value) || isError(value) || isWeakMap(value))) {\r\n        nested[key] = clone(index == lastIndex ? value : Object(value));\r\n      }\r\n      nested = nested[key];\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Converts `lodash` to an immutable auto-curried iteratee-first data-last\r\n   * version with conversion `options` applied.\r\n   *\r\n   * @param {Object} [options] The options object. See `baseConvert` for more details.\r\n   * @returns {Function} Returns the converted `lodash`.\r\n   */\r\n  function convertLib(options) {\r\n    return _.runInContext.convert(options)(undefined);\r\n  }\r\n\r\n  /**\r\n   * Create a converter function for `func` of `name`.\r\n   *\r\n   * @param {string} name The name of the function to convert.\r\n   * @param {Function} func The function to convert.\r\n   * @returns {Function} Returns the new converter function.\r\n   */\r\n  function createConverter(name, func) {\r\n    var realName = mapping.aliasToReal[name] || name,\r\n        methodName = mapping.remap[realName] || realName,\r\n        oldOptions = options;\r\n\r\n    return function(options) {\r\n      var newUtil = isLib ? pristine : helpers,\r\n          newFunc = isLib ? pristine[methodName] : func,\r\n          newOptions = assign(assign({}, oldOptions), options);\r\n\r\n      return baseConvert(newUtil, realName, newFunc, newOptions);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`\r\n   * arguments, ignoring any additional arguments.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to cap iteratee arguments for.\r\n   * @param {number} n The arity cap.\r\n   * @returns {Function} Returns the new function.\r\n   */\r\n  function iterateeAry(func, n) {\r\n    return overArg(func, function(func) {\r\n      return typeof func == 'function' ? baseAry(func, n) : func;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a function that wraps `func` to invoke its iteratee with arguments\r\n   * arranged according to the specified `indexes` where the argument value at\r\n   * the first index is provided as the first argument, the argument value at\r\n   * the second index is provided as the second argument, and so on.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to rearrange iteratee arguments for.\r\n   * @param {number[]} indexes The arranged argument indexes.\r\n   * @returns {Function} Returns the new function.\r\n   */\r\n  function iterateeRearg(func, indexes) {\r\n    return overArg(func, function(func) {\r\n      var n = indexes.length;\r\n      return baseArity(rearg(baseAry(func, n), indexes), n);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a function that invokes `func` with its first argument transformed.\r\n   *\r\n   * @private\r\n   * @param {Function} func The function to wrap.\r\n   * @param {Function} transform The argument transform.\r\n   * @returns {Function} Returns the new function.\r\n   */\r\n  function overArg(func, transform) {\r\n    return function() {\r\n      var length = arguments.length;\r\n      if (!length) {\r\n        return func();\r\n      }\r\n      var args = Array(length);\r\n      while (length--) {\r\n        args[length] = arguments[length];\r\n      }\r\n      var index = config.rearg ? 0 : (length - 1);\r\n      args[index] = transform(args[index]);\r\n      return func.apply(undefined, args);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Creates a function that wraps `func` and applys the conversions\r\n   * rules by `name`.\r\n   *\r\n   * @private\r\n   * @param {string} name The name of the function to wrap.\r\n   * @param {Function} func The function to wrap.\r\n   * @returns {Function} Returns the converted function.\r\n   */\r\n  function wrap(name, func, placeholder) {\r\n    var result,\r\n        realName = mapping.aliasToReal[name] || name,\r\n        wrapped = func,\r\n        wrapper = wrappers[realName];\r\n\r\n    if (wrapper) {\r\n      wrapped = wrapper(func);\r\n    }\r\n    else if (config.immutable) {\r\n      if (mapping.mutate.array[realName]) {\r\n        wrapped = wrapImmutable(func, cloneArray);\r\n      }\r\n      else if (mapping.mutate.object[realName]) {\r\n        wrapped = wrapImmutable(func, createCloner(func));\r\n      }\r\n      else if (mapping.mutate.set[realName]) {\r\n        wrapped = wrapImmutable(func, cloneByPath);\r\n      }\r\n    }\r\n    each(aryMethodKeys, function(aryKey) {\r\n      each(mapping.aryMethod[aryKey], function(otherName) {\r\n        if (realName == otherName) {\r\n          var data = mapping.methodSpread[realName],\r\n              afterRearg = data && data.afterRearg;\r\n\r\n          result = afterRearg\r\n            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)\r\n            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);\r\n\r\n          result = castCap(realName, result);\r\n          result = castCurry(realName, result, aryKey);\r\n          return false;\r\n        }\r\n      });\r\n      return !result;\r\n    });\r\n\r\n    result || (result = wrapped);\r\n    if (result == func) {\r\n      result = forceCurry ? curry(result, 1) : function() {\r\n        return func.apply(this, arguments);\r\n      };\r\n    }\r\n    result.convert = createConverter(realName, func);\r\n    result.placeholder = func.placeholder = placeholder;\r\n\r\n    return result;\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  if (!isObj) {\r\n    return wrap(name, func, defaultHolder);\r\n  }\r\n  var _ = func;\r\n\r\n  // Convert methods by ary cap.\r\n  var pairs = [];\r\n  each(aryMethodKeys, function(aryKey) {\r\n    each(mapping.aryMethod[aryKey], function(key) {\r\n      var func = _[mapping.remap[key] || key];\r\n      if (func) {\r\n        pairs.push([key, wrap(key, func, _)]);\r\n      }\r\n    });\r\n  });\r\n\r\n  // Convert remaining methods.\r\n  each(keys(_), function(key) {\r\n    var func = _[key];\r\n    if (typeof func == 'function') {\r\n      var length = pairs.length;\r\n      while (length--) {\r\n        if (pairs[length][0] == key) {\r\n          return;\r\n        }\r\n      }\r\n      func.convert = createConverter(key, func);\r\n      pairs.push([key, func]);\r\n    }\r\n  });\r\n\r\n  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.\r\n  each(pairs, function(pair) {\r\n    _[pair[0]] = pair[1];\r\n  });\r\n\r\n  _.convert = convertLib;\r\n  _.placeholder = _;\r\n\r\n  // Assign aliases.\r\n  each(keys(_), function(key) {\r\n    each(mapping.realToAlias[key] || [], function(alias) {\r\n      _[alias] = _[key];\r\n    });\r\n  });\r\n\r\n  return _;\r\n}\r\n\r\nmodule.exports = baseConvert;\r\n", "/**\r\n * This method returns the first argument it receives.\r\n *\r\n * @static\r\n * @since 0.1.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {*} value Any value.\r\n * @returns {*} Returns `value`.\r\n * @example\r\n *\r\n * var object = { 'a': 1 };\r\n *\r\n * console.log(_.identity(object) === object);\r\n * // => true\r\n */\r\nfunction identity(value) {\r\n  return value;\r\n}\r\n\r\nmodule.exports = identity;\r\n", "var WeakMap = require('./_WeakMap');\r\n\r\n/** Used to store function metadata. */\r\nvar metaMap = WeakMap && new WeakMap;\r\n\r\nmodule.exports = metaMap;\r\n", "var identity = require('./identity'),\r\n    metaMap = require('./_metaMap');\r\n\r\n/**\r\n * The base implementation of `setData` without support for hot loop shorting.\r\n *\r\n * @private\r\n * @param {Function} func The function to associate metadata with.\r\n * @param {*} data The metadata.\r\n * @returns {Function} Returns `func`.\r\n */\r\nvar baseSetData = !metaMap ? identity : function(func, data) {\r\n  metaMap.set(func, data);\r\n  return func;\r\n};\r\n\r\nmodule.exports = baseSetData;\r\n", "var baseCreate = require('./_baseCreate'),\r\n    isObject = require('./isObject');\r\n\r\n/**\r\n * Creates a function that produces an instance of `Ctor` regardless of\r\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\r\n *\r\n * @private\r\n * @param {Function} Ctor The constructor to wrap.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createCtor(Ctor) {\r\n  return function() {\r\n    // Use a `switch` statement to work with class constructors. See\r\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\r\n    // for more details.\r\n    var args = arguments;\r\n    switch (args.length) {\r\n      case 0: return new Ctor;\r\n      case 1: return new Ctor(args[0]);\r\n      case 2: return new Ctor(args[0], args[1]);\r\n      case 3: return new Ctor(args[0], args[1], args[2]);\r\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\r\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\r\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\r\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\r\n    }\r\n    var thisBinding = baseCreate(Ctor.prototype),\r\n        result = Ctor.apply(thisBinding, args);\r\n\r\n    // Mimic the constructor's `return` behavior.\r\n    // See https://es5.github.io/#x13.2.2 for more details.\r\n    return isObject(result) ? result : thisBinding;\r\n  };\r\n}\r\n\r\nmodule.exports = createCtor;\r\n", "var createCtor = require('./_createCtor'),\r\n    root = require('./_root');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that wraps `func` to invoke it with the optional `this`\r\n * binding of `thisArg`.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createBind(func, bitmask, thisArg) {\r\n  var isBind = bitmask & WRAP_BIND_FLAG,\r\n      Ctor = createCtor(func);\r\n\r\n  function wrapper() {\r\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\r\n    return fn.apply(isBind ? thisArg : this, arguments);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nmodule.exports = createBind;\r\n", "/**\r\n * A faster alternative to `Function#apply`, this function invokes `func`\r\n * with the `this` binding of `thisArg` and the arguments of `args`.\r\n *\r\n * @private\r\n * @param {Function} func The function to invoke.\r\n * @param {*} thisArg The `this` binding of `func`.\r\n * @param {Array} args The arguments to invoke `func` with.\r\n * @returns {*} Returns the result of `func`.\r\n */\r\nfunction apply(func, thisArg, args) {\r\n  switch (args.length) {\r\n    case 0: return func.call(thisArg);\r\n    case 1: return func.call(thisArg, args[0]);\r\n    case 2: return func.call(thisArg, args[0], args[1]);\r\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\r\n  }\r\n  return func.apply(thisArg, args);\r\n}\r\n\r\nmodule.exports = apply;\r\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Creates an array that is the composition of partially applied arguments,\r\n * placeholders, and provided arguments into a single array of arguments.\r\n *\r\n * @private\r\n * @param {Array} args The provided arguments.\r\n * @param {Array} partials The arguments to prepend to those provided.\r\n * @param {Array} holders The `partials` placeholder indexes.\r\n * @params {boolean} [isCurried] Specify composing for a curried function.\r\n * @returns {Array} Returns the new array of composed arguments.\r\n */\r\nfunction composeArgs(args, partials, holders, isCurried) {\r\n  var argsIndex = -1,\r\n      argsLength = args.length,\r\n      holdersLength = holders.length,\r\n      leftIndex = -1,\r\n      leftLength = partials.length,\r\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\r\n      result = Array(leftLength + rangeLength),\r\n      isUncurried = !isCurried;\r\n\r\n  while (++leftIndex < leftLength) {\r\n    result[leftIndex] = partials[leftIndex];\r\n  }\r\n  while (++argsIndex < holdersLength) {\r\n    if (isUncurried || argsIndex < argsLength) {\r\n      result[holders[argsIndex]] = args[argsIndex];\r\n    }\r\n  }\r\n  while (rangeLength--) {\r\n    result[leftIndex++] = args[argsIndex++];\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = composeArgs;\r\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * This function is like `composeArgs` except that the arguments composition\r\n * is tailored for `_.partialRight`.\r\n *\r\n * @private\r\n * @param {Array} args The provided arguments.\r\n * @param {Array} partials The arguments to append to those provided.\r\n * @param {Array} holders The `partials` placeholder indexes.\r\n * @params {boolean} [isCurried] Specify composing for a curried function.\r\n * @returns {Array} Returns the new array of composed arguments.\r\n */\r\nfunction composeArgsRight(args, partials, holders, isCurried) {\r\n  var argsIndex = -1,\r\n      argsLength = args.length,\r\n      holdersIndex = -1,\r\n      holdersLength = holders.length,\r\n      rightIndex = -1,\r\n      rightLength = partials.length,\r\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\r\n      result = Array(rangeLength + rightLength),\r\n      isUncurried = !isCurried;\r\n\r\n  while (++argsIndex < rangeLength) {\r\n    result[argsIndex] = args[argsIndex];\r\n  }\r\n  var offset = argsIndex;\r\n  while (++rightIndex < rightLength) {\r\n    result[offset + rightIndex] = partials[rightIndex];\r\n  }\r\n  while (++holdersIndex < holdersLength) {\r\n    if (isUncurried || argsIndex < argsLength) {\r\n      result[offset + holders[holdersIndex]] = args[argsIndex++];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = composeArgsRight;\r\n", "/**\r\n * Gets the number of `placeholder` occurrences in `array`.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} placeholder The placeholder to search for.\r\n * @returns {number} Returns the placeholder count.\r\n */\r\nfunction countHolders(array, placeholder) {\r\n  var length = array.length,\r\n      result = 0;\r\n\r\n  while (length--) {\r\n    if (array[length] === placeholder) {\r\n      ++result;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = countHolders;\r\n", "/**\r\n * The function whose prototype chain sequence wrappers inherit from.\r\n *\r\n * @private\r\n */\r\nfunction baseLodash() {\r\n  // No operation performed.\r\n}\r\n\r\nmodule.exports = baseLodash;\r\n", "var baseCreate = require('./_baseCreate'),\r\n    baseLodash = require('./_baseLodash');\r\n\r\n/** Used as references for the maximum length and index of an array. */\r\nvar MAX_ARRAY_LENGTH = 4294967295;\r\n\r\n/**\r\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {*} value The value to wrap.\r\n */\r\nfunction LazyWrapper(value) {\r\n  this.__wrapped__ = value;\r\n  this.__actions__ = [];\r\n  this.__dir__ = 1;\r\n  this.__filtered__ = false;\r\n  this.__iteratees__ = [];\r\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\r\n  this.__views__ = [];\r\n}\r\n\r\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\r\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\r\nLazyWrapper.prototype.constructor = LazyWrapper;\r\n\r\nmodule.exports = LazyWrapper;\r\n", "/**\r\n * This method returns `undefined`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.3.0\r\n * @category Util\r\n * @example\r\n *\r\n * _.times(2, _.noop);\r\n * // => [undefined, undefined]\r\n */\r\nfunction noop() {\r\n  // No operation performed.\r\n}\r\n\r\nmodule.exports = noop;\r\n", "var metaMap = require('./_metaMap'),\r\n    noop = require('./noop');\r\n\r\n/**\r\n * Gets metadata for `func`.\r\n *\r\n * @private\r\n * @param {Function} func The function to query.\r\n * @returns {*} Returns the metadata for `func`.\r\n */\r\nvar getData = !metaMap ? noop : function(func) {\r\n  return metaMap.get(func);\r\n};\r\n\r\nmodule.exports = getData;\r\n", "/** Used to lookup unminified function names. */\r\nvar realNames = {};\r\n\r\nmodule.exports = realNames;\r\n", "var realNames = require('./_realNames');\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Gets the name of `func`.\r\n *\r\n * @private\r\n * @param {Function} func The function to query.\r\n * @returns {string} Returns the function name.\r\n */\r\nfunction getFuncName(func) {\r\n  var result = (func.name + ''),\r\n      array = realNames[result],\r\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\r\n\r\n  while (length--) {\r\n    var data = array[length],\r\n        otherFunc = data.func;\r\n    if (otherFunc == null || otherFunc == func) {\r\n      return data.name;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = getFuncName;\r\n", "var baseCreate = require('./_baseCreate'),\r\n    baseLodash = require('./_baseLodash');\r\n\r\n/**\r\n * The base constructor for creating `lodash` wrapper objects.\r\n *\r\n * @private\r\n * @param {*} value The value to wrap.\r\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\r\n */\r\nfunction LodashWrapper(value, chainAll) {\r\n  this.__wrapped__ = value;\r\n  this.__actions__ = [];\r\n  this.__chain__ = !!chainAll;\r\n  this.__index__ = 0;\r\n  this.__values__ = undefined;\r\n}\r\n\r\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\r\nLodashWrapper.prototype.constructor = LodashWrapper;\r\n\r\nmodule.exports = LodashWrapper;\r\n", "var LazyWrapper = require('./_LazyWrapper'),\r\n    LodashWrapper = require('./_LodashWrapper'),\r\n    copyArray = require('./_copyArray');\r\n\r\n/**\r\n * Creates a clone of `wrapper`.\r\n *\r\n * @private\r\n * @param {Object} wrapper The wrapper to clone.\r\n * @returns {Object} Returns the cloned wrapper.\r\n */\r\nfunction wrapperClone(wrapper) {\r\n  if (wrapper instanceof LazyWrapper) {\r\n    return wrapper.clone();\r\n  }\r\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\r\n  result.__actions__ = copyArray(wrapper.__actions__);\r\n  result.__index__  = wrapper.__index__;\r\n  result.__values__ = wrapper.__values__;\r\n  return result;\r\n}\r\n\r\nmodule.exports = wrapperClone;\r\n", "var LazyWrapper = require('./_LazyWrapper'),\r\n    LodashWrapper = require('./_LodashWrapper'),\r\n    baseLodash = require('./_baseLodash'),\r\n    isArray = require('./isArray'),\r\n    isObjectLike = require('./isObjectLike'),\r\n    wrapperClone = require('./_wrapperClone');\r\n\r\n/** Used for built-in method references. */\r\nvar objectProto = Object.prototype;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/**\r\n * Creates a `lodash` object which wraps `value` to enable implicit method\r\n * chain sequences. Methods that operate on and return arrays, collections,\r\n * and functions can be chained together. Methods that retrieve a single value\r\n * or may return a primitive value will automatically end the chain sequence\r\n * and return the unwrapped value. Otherwise, the value must be unwrapped\r\n * with `_#value`.\r\n *\r\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\r\n * enabled using `_.chain`.\r\n *\r\n * The execution of chained methods is lazy, that is, it's deferred until\r\n * `_#value` is implicitly or explicitly called.\r\n *\r\n * Lazy evaluation allows several methods to support shortcut fusion.\r\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\r\n * the creation of intermediate arrays and can greatly reduce the number of\r\n * iteratee executions. Sections of a chain sequence qualify for shortcut\r\n * fusion if the section is applied to an array and iteratees accept only\r\n * one argument. The heuristic for whether a section qualifies for shortcut\r\n * fusion is subject to change.\r\n *\r\n * Chaining is supported in custom builds as long as the `_#value` method is\r\n * directly or indirectly included in the build.\r\n *\r\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\r\n *\r\n * The wrapper `Array` methods are:\r\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\r\n *\r\n * The wrapper `String` methods are:\r\n * `replace` and `split`\r\n *\r\n * The wrapper methods that support shortcut fusion are:\r\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\r\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\r\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\r\n *\r\n * The chainable wrapper methods are:\r\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\r\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\r\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\r\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\r\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\r\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\r\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\r\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\r\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\r\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\r\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\r\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\r\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\r\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\r\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\r\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\r\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\r\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\r\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\r\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\r\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\r\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\r\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\r\n * `zipObject`, `zipObjectDeep`, and `zipWith`\r\n *\r\n * The wrapper methods that are **not** chainable by default are:\r\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\r\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\r\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\r\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\r\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\r\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\r\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\r\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\r\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\r\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\r\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\r\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\r\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\r\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\r\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\r\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\r\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\r\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\r\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\r\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\r\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\r\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\r\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\r\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\r\n * `upperFirst`, `value`, and `words`\r\n *\r\n * @name _\r\n * @constructor\r\n * @category Seq\r\n * @param {*} value The value to wrap in a `lodash` instance.\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * var wrapped = _([1, 2, 3]);\r\n *\r\n * // Returns an unwrapped value.\r\n * wrapped.reduce(_.add);\r\n * // => 6\r\n *\r\n * // Returns a wrapped value.\r\n * var squares = wrapped.map(square);\r\n *\r\n * _.isArray(squares);\r\n * // => false\r\n *\r\n * _.isArray(squares.value());\r\n * // => true\r\n */\r\nfunction lodash(value) {\r\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\r\n    if (value instanceof LodashWrapper) {\r\n      return value;\r\n    }\r\n    if (hasOwnProperty.call(value, '__wrapped__')) {\r\n      return wrapperClone(value);\r\n    }\r\n  }\r\n  return new LodashWrapper(value);\r\n}\r\n\r\n// Ensure wrappers are instances of `baseLodash`.\r\nlodash.prototype = baseLodash.prototype;\r\nlodash.prototype.constructor = lodash;\r\n\r\nmodule.exports = lodash;\r\n", "var LazyWrapper = require('./_LazyWrapper'),\r\n    getData = require('./_getData'),\r\n    getFuncName = require('./_getFuncName'),\r\n    lodash = require('./wrapperLodash');\r\n\r\n/**\r\n * Checks if `func` has a lazy counterpart.\r\n *\r\n * @private\r\n * @param {Function} func The function to check.\r\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\r\n *  else `false`.\r\n */\r\nfunction isLaziable(func) {\r\n  var funcName = getFuncName(func),\r\n      other = lodash[funcName];\r\n\r\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\r\n    return false;\r\n  }\r\n  if (func === other) {\r\n    return true;\r\n  }\r\n  var data = getData(other);\r\n  return !!data && func === data[0];\r\n}\r\n\r\nmodule.exports = isLaziable;\r\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\r\nvar HOT_COUNT = 800,\r\n    HOT_SPAN = 16;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeNow = Date.now;\r\n\r\n/**\r\n * Creates a function that'll short out and invoke `identity` instead\r\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\r\n * milliseconds.\r\n *\r\n * @private\r\n * @param {Function} func The function to restrict.\r\n * @returns {Function} Returns the new shortable function.\r\n */\r\nfunction shortOut(func) {\r\n  var count = 0,\r\n      lastCalled = 0;\r\n\r\n  return function() {\r\n    var stamp = nativeNow(),\r\n        remaining = HOT_SPAN - (stamp - lastCalled);\r\n\r\n    lastCalled = stamp;\r\n    if (remaining > 0) {\r\n      if (++count >= HOT_COUNT) {\r\n        return arguments[0];\r\n      }\r\n    } else {\r\n      count = 0;\r\n    }\r\n    return func.apply(undefined, arguments);\r\n  };\r\n}\r\n\r\nmodule.exports = shortOut;\r\n", "var baseSetData = require('./_baseSetData'),\r\n    shortOut = require('./_shortOut');\r\n\r\n/**\r\n * Sets metadata for `func`.\r\n *\r\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\r\n * period of time, it will trip its breaker and transition to an identity\r\n * function to avoid garbage collection pauses in V8. See\r\n * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\r\n * for more details.\r\n *\r\n * @private\r\n * @param {Function} func The function to associate metadata with.\r\n * @param {*} data The metadata.\r\n * @returns {Function} Returns `func`.\r\n */\r\nvar setData = shortOut(baseSetData);\r\n\r\nmodule.exports = setData;\r\n", "/** Used to match wrap detail comments. */\r\nvar reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\r\n    reSplitDetails = /,? & /;\r\n\r\n/**\r\n * Extracts wrapper details from the `source` body comment.\r\n *\r\n * @private\r\n * @param {string} source The source to inspect.\r\n * @returns {Array} Returns the wrapper details.\r\n */\r\nfunction getWrapDetails(source) {\r\n  var match = source.match(reWrapDetails);\r\n  return match ? match[1].split(reSplitDetails) : [];\r\n}\r\n\r\nmodule.exports = getWrapDetails;\r\n", "/** Used to match wrap detail comments. */\r\nvar reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/;\r\n\r\n/**\r\n * Inserts wrapper `details` in a comment at the top of the `source` body.\r\n *\r\n * @private\r\n * @param {string} source The source to modify.\r\n * @returns {Array} details The details to insert.\r\n * @returns {string} Returns the modified source.\r\n */\r\nfunction insertWrapDetails(source, details) {\r\n  var length = details.length;\r\n  if (!length) {\r\n    return source;\r\n  }\r\n  var lastIndex = length - 1;\r\n  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\r\n  details = details.join(length > 2 ? ', ' : ' ');\r\n  return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\r\n}\r\n\r\nmodule.exports = insertWrapDetails;\r\n", "/**\r\n * Creates a function that returns `value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.4.0\r\n * @category Util\r\n * @param {*} value The value to return from the new function.\r\n * @returns {Function} Returns the new constant function.\r\n * @example\r\n *\r\n * var objects = _.times(2, _.constant({ 'a': 1 }));\r\n *\r\n * console.log(objects);\r\n * // => [{ 'a': 1 }, { 'a': 1 }]\r\n *\r\n * console.log(objects[0] === objects[1]);\r\n * // => true\r\n */\r\nfunction constant(value) {\r\n  return function() {\r\n    return value;\r\n  };\r\n}\r\n\r\nmodule.exports = constant;\r\n", "var constant = require('./constant'),\r\n    defineProperty = require('./_defineProperty'),\r\n    identity = require('./identity');\r\n\r\n/**\r\n * The base implementation of `setToString` without support for hot loop shorting.\r\n *\r\n * @private\r\n * @param {Function} func The function to modify.\r\n * @param {Function} string The `toString` result.\r\n * @returns {Function} Returns `func`.\r\n */\r\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\r\n  return defineProperty(func, 'toString', {\r\n    'configurable': true,\r\n    'enumerable': false,\r\n    'value': constant(string),\r\n    'writable': true\r\n  });\r\n};\r\n\r\nmodule.exports = baseSetToString;\r\n", "var baseSetToString = require('./_baseSetToString'),\r\n    shortOut = require('./_shortOut');\r\n\r\n/**\r\n * Sets the `toString` method of `func` to return `string`.\r\n *\r\n * @private\r\n * @param {Function} func The function to modify.\r\n * @param {Function} string The `toString` result.\r\n * @returns {Function} Returns `func`.\r\n */\r\nvar setToString = shortOut(baseSetToString);\r\n\r\nmodule.exports = setToString;\r\n", "/**\r\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n * support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {Function} predicate The function invoked per iteration.\r\n * @param {number} fromIndex The index to search from.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n  var length = array.length,\r\n      index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n  while ((fromRight ? index-- : ++index < length)) {\r\n    if (predicate(array[index], index, array)) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nmodule.exports = baseFindIndex;\r\n", "/**\r\n * The base implementation of `_.isNaN` without support for number objects.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n */\r\nfunction baseIsNaN(value) {\r\n  return value !== value;\r\n}\r\n\r\nmodule.exports = baseIsNaN;\r\n", "/**\r\n * A specialized version of `_.indexOf` which performs strict equality\r\n * comparisons of values, i.e. `===`.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} fromIndex The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction strictIndexOf(array, value, fromIndex) {\r\n  var index = fromIndex - 1,\r\n      length = array.length;\r\n\r\n  while (++index < length) {\r\n    if (array[index] === value) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nmodule.exports = strictIndexOf;\r\n", "var baseFindIndex = require('./_baseFindIndex'),\r\n    baseIsNaN = require('./_baseIsNaN'),\r\n    strictIndexOf = require('./_strictIndexOf');\r\n\r\n/**\r\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n *\r\n * @private\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} fromIndex The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n */\r\nfunction baseIndexOf(array, value, fromIndex) {\r\n  return value === value\r\n    ? strictIndexOf(array, value, fromIndex)\r\n    : baseFindIndex(array, baseIsNaN, fromIndex);\r\n}\r\n\r\nmodule.exports = baseIndexOf;\r\n", "var baseIndexOf = require('./_baseIndexOf');\r\n\r\n/**\r\n * A specialized version of `_.includes` for arrays without support for\r\n * specifying an index to search from.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to inspect.\r\n * @param {*} target The value to search for.\r\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\r\n */\r\nfunction arrayIncludes(array, value) {\r\n  var length = array == null ? 0 : array.length;\r\n  return !!length && baseIndexOf(array, value, 0) > -1;\r\n}\r\n\r\nmodule.exports = arrayIncludes;\r\n", "var arrayEach = require('./_arrayEach'),\r\n    arrayIncludes = require('./_arrayIncludes');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_CURRY_RIGHT_FLAG = 16,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_PARTIAL_RIGHT_FLAG = 64,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_REARG_FLAG = 256,\r\n    WRAP_FLIP_FLAG = 512;\r\n\r\n/** Used to associate wrap methods with their bit flags. */\r\nvar wrapFlags = [\r\n  ['ary', WRAP_ARY_FLAG],\r\n  ['bind', WRAP_BIND_FLAG],\r\n  ['bindKey', WRAP_BIND_KEY_FLAG],\r\n  ['curry', WRAP_CURRY_FLAG],\r\n  ['curryRight', WRAP_CURRY_RIGHT_FLAG],\r\n  ['flip', WRAP_FLIP_FLAG],\r\n  ['partial', WRAP_PARTIAL_FLAG],\r\n  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\r\n  ['rearg', WRAP_REARG_FLAG]\r\n];\r\n\r\n/**\r\n * Updates wrapper `details` based on `bitmask` flags.\r\n *\r\n * @private\r\n * @returns {Array} details The details to modify.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @returns {Array} Returns `details`.\r\n */\r\nfunction updateWrapDetails(details, bitmask) {\r\n  arrayEach(wrapFlags, function(pair) {\r\n    var value = '_.' + pair[0];\r\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\r\n      details.push(value);\r\n    }\r\n  });\r\n  return details.sort();\r\n}\r\n\r\nmodule.exports = updateWrapDetails;\r\n", "var getWrapDetails = require('./_getWrapDetails'),\r\n    insertWrapDetails = require('./_insertWrapDetails'),\r\n    setToString = require('./_setToString'),\r\n    updateWrapDetails = require('./_updateWrapDetails');\r\n\r\n/**\r\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\r\n * with wrapper details in a comment at the top of the source body.\r\n *\r\n * @private\r\n * @param {Function} wrapper The function to modify.\r\n * @param {Function} reference The reference function.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @returns {Function} Returns `wrapper`.\r\n */\r\nfunction setWrapToString(wrapper, reference, bitmask) {\r\n  var source = (reference + '');\r\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\r\n}\r\n\r\nmodule.exports = setWrapToString;\r\n", "var isLaziable = require('./_isLaziable'),\r\n    setData = require('./_setData'),\r\n    setWrapToString = require('./_setWrapToString');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_BOUND_FLAG = 4,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\r\n\r\n/**\r\n * Creates a function that wraps `func` to continue currying.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {Function} wrapFunc The function to create the `func` wrapper.\r\n * @param {*} placeholder The placeholder value.\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to prepend to those provided to\r\n *  the new function.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\r\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\r\n      newHolders = isCurry ? holders : undefined,\r\n      newHoldersRight = isCurry ? undefined : holders,\r\n      newPartials = isCurry ? partials : undefined,\r\n      newPartialsRight = isCurry ? undefined : partials;\r\n\r\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\r\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\r\n\r\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\r\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\r\n  }\r\n  var newData = [\r\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\r\n    newHoldersRight, argPos, ary, arity\r\n  ];\r\n\r\n  var result = wrapFunc.apply(undefined, newData);\r\n  if (isLaziable(func)) {\r\n    setData(result, newData);\r\n  }\r\n  result.placeholder = placeholder;\r\n  return setWrapToString(result, func, bitmask);\r\n}\r\n\r\nmodule.exports = createRecurry;\r\n", "/**\r\n * Gets the argument placeholder value for `func`.\r\n *\r\n * @private\r\n * @param {Function} func The function to inspect.\r\n * @returns {*} Returns the placeholder value.\r\n */\r\nfunction getHolder(func) {\r\n  var object = func;\r\n  return object.placeholder;\r\n}\r\n\r\nmodule.exports = getHolder;\r\n", "var copyArray = require('./_copyArray'),\r\n    isIndex = require('./_isIndex');\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * Reorder `array` according to the specified indexes where the element at\r\n * the first index is assigned as the first element, the element at\r\n * the second index is assigned as the second element, and so on.\r\n *\r\n * @private\r\n * @param {Array} array The array to reorder.\r\n * @param {Array} indexes The arranged array indexes.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction reorder(array, indexes) {\r\n  var arrLength = array.length,\r\n      length = nativeMin(indexes.length, arrLength),\r\n      oldArray = copyArray(array);\r\n\r\n  while (length--) {\r\n    var index = indexes[length];\r\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\r\n  }\r\n  return array;\r\n}\r\n\r\nmodule.exports = reorder;\r\n", "/** Used as the internal argument placeholder. */\r\nvar PLACEHOLDER = '__lodash_placeholder__';\r\n\r\n/**\r\n * Replaces all `placeholder` elements in `array` with an internal placeholder\r\n * and returns an array of their indexes.\r\n *\r\n * @private\r\n * @param {Array} array The array to modify.\r\n * @param {*} placeholder The placeholder to replace.\r\n * @returns {Array} Returns the new array of placeholder indexes.\r\n */\r\nfunction replaceHolders(array, placeholder) {\r\n  var index = -1,\r\n      length = array.length,\r\n      resIndex = 0,\r\n      result = [];\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (value === placeholder || value === PLACEHOLDER) {\r\n      array[index] = PLACEHOLDER;\r\n      result[resIndex++] = index;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = replaceHolders;\r\n", "var composeArgs = require('./_composeArgs'),\r\n    composeArgsRight = require('./_composeArgsRight'),\r\n    countHolders = require('./_countHolders'),\r\n    createCtor = require('./_createCtor'),\r\n    createRecurry = require('./_createRecurry'),\r\n    getHolder = require('./_getHolder'),\r\n    reorder = require('./_reorder'),\r\n    replaceHolders = require('./_replaceHolders'),\r\n    root = require('./_root');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_CURRY_RIGHT_FLAG = 16,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_FLIP_FLAG = 512;\r\n\r\n/**\r\n * Creates a function that wraps `func` to invoke it with optional `this`\r\n * binding of `thisArg`, partial application, and currying.\r\n *\r\n * @private\r\n * @param {Function|string} func The function or method name to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to prepend to those provided to\r\n *  the new function.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [partialsRight] The arguments to append to those provided\r\n *  to the new function.\r\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\r\n  var isAry = bitmask & WRAP_ARY_FLAG,\r\n      isBind = bitmask & WRAP_BIND_FLAG,\r\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\r\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\r\n      isFlip = bitmask & WRAP_FLIP_FLAG,\r\n      Ctor = isBindKey ? undefined : createCtor(func);\r\n\r\n  function wrapper() {\r\n    var length = arguments.length,\r\n        args = Array(length),\r\n        index = length;\r\n\r\n    while (index--) {\r\n      args[index] = arguments[index];\r\n    }\r\n    if (isCurried) {\r\n      var placeholder = getHolder(wrapper),\r\n          holdersCount = countHolders(args, placeholder);\r\n    }\r\n    if (partials) {\r\n      args = composeArgs(args, partials, holders, isCurried);\r\n    }\r\n    if (partialsRight) {\r\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\r\n    }\r\n    length -= holdersCount;\r\n    if (isCurried && length < arity) {\r\n      var newHolders = replaceHolders(args, placeholder);\r\n      return createRecurry(\r\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\r\n        args, newHolders, argPos, ary, arity - length\r\n      );\r\n    }\r\n    var thisBinding = isBind ? thisArg : this,\r\n        fn = isBindKey ? thisBinding[func] : func;\r\n\r\n    length = args.length;\r\n    if (argPos) {\r\n      args = reorder(args, argPos);\r\n    } else if (isFlip && length > 1) {\r\n      args.reverse();\r\n    }\r\n    if (isAry && ary < length) {\r\n      args.length = ary;\r\n    }\r\n    if (this && this !== root && this instanceof wrapper) {\r\n      fn = Ctor || createCtor(fn);\r\n    }\r\n    return fn.apply(thisBinding, args);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nmodule.exports = createHybrid;\r\n", "var apply = require('./_apply'),\r\n    createCtor = require('./_createCtor'),\r\n    createHybrid = require('./_createHybrid'),\r\n    createRecurry = require('./_createRecurry'),\r\n    getHolder = require('./_getHolder'),\r\n    replaceHolders = require('./_replaceHolders'),\r\n    root = require('./_root');\r\n\r\n/**\r\n * Creates a function that wraps `func` to enable currying.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {number} arity The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createCurry(func, bitmask, arity) {\r\n  var Ctor = createCtor(func);\r\n\r\n  function wrapper() {\r\n    var length = arguments.length,\r\n        args = Array(length),\r\n        index = length,\r\n        placeholder = getHolder(wrapper);\r\n\r\n    while (index--) {\r\n      args[index] = arguments[index];\r\n    }\r\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\r\n      ? []\r\n      : replaceHolders(args, placeholder);\r\n\r\n    length -= holders.length;\r\n    if (length < arity) {\r\n      return createRecurry(\r\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\r\n        args, holders, undefined, undefined, arity - length);\r\n    }\r\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\r\n    return apply(fn, this, args);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nmodule.exports = createCurry;\r\n", "var apply = require('./_apply'),\r\n    createCtor = require('./_createCtor'),\r\n    root = require('./_root');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that wraps `func` to invoke it with the `this` binding\r\n * of `thisArg` and `partials` prepended to the arguments it receives.\r\n *\r\n * @private\r\n * @param {Function} func The function to wrap.\r\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\r\n * @param {*} thisArg The `this` binding of `func`.\r\n * @param {Array} partials The arguments to prepend to those provided to\r\n *  the new function.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createPartial(func, bitmask, thisArg, partials) {\r\n  var isBind = bitmask & WRAP_BIND_FLAG,\r\n      Ctor = createCtor(func);\r\n\r\n  function wrapper() {\r\n    var argsIndex = -1,\r\n        argsLength = arguments.length,\r\n        leftIndex = -1,\r\n        leftLength = partials.length,\r\n        args = Array(leftLength + argsLength),\r\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\r\n\r\n    while (++leftIndex < leftLength) {\r\n      args[leftIndex] = partials[leftIndex];\r\n    }\r\n    while (argsLength--) {\r\n      args[leftIndex++] = arguments[++argsIndex];\r\n    }\r\n    return apply(fn, isBind ? thisArg : this, args);\r\n  }\r\n  return wrapper;\r\n}\r\n\r\nmodule.exports = createPartial;\r\n", "var composeArgs = require('./_composeArgs'),\r\n    composeArgsRight = require('./_composeArgsRight'),\r\n    replaceHolders = require('./_replaceHolders');\r\n\r\n/** Used as the internal argument placeholder. */\r\nvar PLACEHOLDER = '__lodash_placeholder__';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_BOUND_FLAG = 4,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_REARG_FLAG = 256;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * Merges the function metadata of `source` into `data`.\r\n *\r\n * Merging metadata reduces the number of wrappers used to invoke a function.\r\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\r\n * may be applied regardless of execution order. Methods like `_.ary` and\r\n * `_.rearg` modify function arguments, making the order in which they are\r\n * executed important, preventing the merging of metadata. However, we make\r\n * an exception for a safe combined case where curried functions have `_.ary`\r\n * and or `_.rearg` applied.\r\n *\r\n * @private\r\n * @param {Array} data The destination metadata.\r\n * @param {Array} source The source metadata.\r\n * @returns {Array} Returns `data`.\r\n */\r\nfunction mergeData(data, source) {\r\n  var bitmask = data[1],\r\n      srcBitmask = source[1],\r\n      newBitmask = bitmask | srcBitmask,\r\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\r\n\r\n  var isCombo =\r\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\r\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\r\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\r\n\r\n  // Exit early if metadata can't be merged.\r\n  if (!(isCommon || isCombo)) {\r\n    return data;\r\n  }\r\n  // Use source `thisArg` if available.\r\n  if (srcBitmask & WRAP_BIND_FLAG) {\r\n    data[2] = source[2];\r\n    // Set when currying a bound function.\r\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\r\n  }\r\n  // Compose partial arguments.\r\n  var value = source[3];\r\n  if (value) {\r\n    var partials = data[3];\r\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\r\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\r\n  }\r\n  // Compose partial right arguments.\r\n  value = source[5];\r\n  if (value) {\r\n    partials = data[5];\r\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\r\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\r\n  }\r\n  // Use source `argPos` if available.\r\n  value = source[7];\r\n  if (value) {\r\n    data[7] = value;\r\n  }\r\n  // Use source `ary` if it's smaller.\r\n  if (srcBitmask & WRAP_ARY_FLAG) {\r\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\r\n  }\r\n  // Use source `arity` if one is not provided.\r\n  if (data[9] == null) {\r\n    data[9] = source[9];\r\n  }\r\n  // Use source `func` and merge bitmasks.\r\n  data[0] = source[0];\r\n  data[1] = newBitmask;\r\n\r\n  return data;\r\n}\r\n\r\nmodule.exports = mergeData;\r\n", "/** Used to match a single whitespace character. */\r\nvar reWhitespace = /\\s/;\r\n\r\n/**\r\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\r\n * character of `string`.\r\n *\r\n * @private\r\n * @param {string} string The string to inspect.\r\n * @returns {number} Returns the index of the last non-whitespace character.\r\n */\r\nfunction trimmedEndIndex(string) {\r\n  var index = string.length;\r\n\r\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\r\n  return index;\r\n}\r\n\r\nmodule.exports = trimmedEndIndex;\r\n", "var trimmedEndIndex = require('./_trimmedEndIndex');\r\n\r\n/** Used to match leading whitespace. */\r\nvar reTrimStart = /^\\s+/;\r\n\r\n/**\r\n * The base implementation of `_.trim`.\r\n *\r\n * @private\r\n * @param {string} string The string to trim.\r\n * @returns {string} Returns the trimmed string.\r\n */\r\nfunction baseTrim(string) {\r\n  return string\r\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\r\n    : string;\r\n}\r\n\r\nmodule.exports = baseTrim;\r\n", "var baseTrim = require('./_baseTrim'),\r\n    isObject = require('./isObject'),\r\n    isSymbol = require('./isSymbol');\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar NAN = 0 / 0;\r\n\r\n/** Used to detect bad signed hexadecimal string values. */\r\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n/** Used to detect binary string values. */\r\nvar reIsBinary = /^0b[01]+$/i;\r\n\r\n/** Used to detect octal string values. */\r\nvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n/** Built-in method references without a dependency on `root`. */\r\nvar freeParseInt = parseInt;\r\n\r\n/**\r\n * Converts `value` to a number.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to process.\r\n * @returns {number} Returns the number.\r\n * @example\r\n *\r\n * _.toNumber(3.2);\r\n * // => 3.2\r\n *\r\n * _.toNumber(Number.MIN_VALUE);\r\n * // => 5e-324\r\n *\r\n * _.toNumber(Infinity);\r\n * // => Infinity\r\n *\r\n * _.toNumber('3.2');\r\n * // => 3.2\r\n */\r\nfunction toNumber(value) {\r\n  if (typeof value == 'number') {\r\n    return value;\r\n  }\r\n  if (isSymbol(value)) {\r\n    return NAN;\r\n  }\r\n  if (isObject(value)) {\r\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n    value = isObject(other) ? (other + '') : other;\r\n  }\r\n  if (typeof value != 'string') {\r\n    return value === 0 ? value : +value;\r\n  }\r\n  value = baseTrim(value);\r\n  var isBinary = reIsBinary.test(value);\r\n  return (isBinary || reIsOctal.test(value))\r\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n    : (reIsBadHex.test(value) ? NAN : +value);\r\n}\r\n\r\nmodule.exports = toNumber;\r\n", "var toNumber = require('./toNumber');\r\n\r\n/** Used as references for various `Number` constants. */\r\nvar INFINITY = 1 / 0,\r\n    MAX_INTEGER = 1.7976931348623157e+308;\r\n\r\n/**\r\n * Converts `value` to a finite number.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.12.0\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {number} Returns the converted number.\r\n * @example\r\n *\r\n * _.toFinite(3.2);\r\n * // => 3.2\r\n *\r\n * _.toFinite(Number.MIN_VALUE);\r\n * // => 5e-324\r\n *\r\n * _.toFinite(Infinity);\r\n * // => 1.7976931348623157e+308\r\n *\r\n * _.toFinite('3.2');\r\n * // => 3.2\r\n */\r\nfunction toFinite(value) {\r\n  if (!value) {\r\n    return value === 0 ? value : 0;\r\n  }\r\n  value = toNumber(value);\r\n  if (value === INFINITY || value === -INFINITY) {\r\n    var sign = (value < 0 ? -1 : 1);\r\n    return sign * MAX_INTEGER;\r\n  }\r\n  return value === value ? value : 0;\r\n}\r\n\r\nmodule.exports = toFinite;\r\n", "var toFinite = require('./toFinite');\r\n\r\n/**\r\n * Converts `value` to an integer.\r\n *\r\n * **Note:** This method is loosely based on\r\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to convert.\r\n * @returns {number} Returns the converted integer.\r\n * @example\r\n *\r\n * _.toInteger(3.2);\r\n * // => 3\r\n *\r\n * _.toInteger(Number.MIN_VALUE);\r\n * // => 0\r\n *\r\n * _.toInteger(Infinity);\r\n * // => 1.7976931348623157e+308\r\n *\r\n * _.toInteger('3.2');\r\n * // => 3\r\n */\r\nfunction toInteger(value) {\r\n  var result = toFinite(value),\r\n      remainder = result % 1;\r\n\r\n  return result === result ? (remainder ? result - remainder : result) : 0;\r\n}\r\n\r\nmodule.exports = toInteger;\r\n", "var baseSetData = require('./_baseSetData'),\r\n    createBind = require('./_createBind'),\r\n    createCurry = require('./_createCurry'),\r\n    createHybrid = require('./_createHybrid'),\r\n    createPartial = require('./_createPartial'),\r\n    getData = require('./_getData'),\r\n    mergeData = require('./_mergeData'),\r\n    setData = require('./_setData'),\r\n    setWrapToString = require('./_setWrapToString'),\r\n    toInteger = require('./toInteger');\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_BIND_FLAG = 1,\r\n    WRAP_BIND_KEY_FLAG = 2,\r\n    WRAP_CURRY_FLAG = 8,\r\n    WRAP_CURRY_RIGHT_FLAG = 16,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Creates a function that either curries or invokes `func` with optional\r\n * `this` binding and partially applied arguments.\r\n *\r\n * @private\r\n * @param {Function|string} func The function or method name to wrap.\r\n * @param {number} bitmask The bitmask flags.\r\n *    1 - `_.bind`\r\n *    2 - `_.bindKey`\r\n *    4 - `_.curry` or `_.curryRight` of a bound function\r\n *    8 - `_.curry`\r\n *   16 - `_.curryRight`\r\n *   32 - `_.partial`\r\n *   64 - `_.partialRight`\r\n *  128 - `_.rearg`\r\n *  256 - `_.ary`\r\n *  512 - `_.flip`\r\n * @param {*} [thisArg] The `this` binding of `func`.\r\n * @param {Array} [partials] The arguments to be partially applied.\r\n * @param {Array} [holders] The `partials` placeholder indexes.\r\n * @param {Array} [argPos] The argument positions of the new function.\r\n * @param {number} [ary] The arity cap of `func`.\r\n * @param {number} [arity] The arity of `func`.\r\n * @returns {Function} Returns the new wrapped function.\r\n */\r\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\r\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\r\n  if (!isBindKey && typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  var length = partials ? partials.length : 0;\r\n  if (!length) {\r\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\r\n    partials = holders = undefined;\r\n  }\r\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\r\n  arity = arity === undefined ? arity : toInteger(arity);\r\n  length -= holders ? holders.length : 0;\r\n\r\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\r\n    var partialsRight = partials,\r\n        holdersRight = holders;\r\n\r\n    partials = holders = undefined;\r\n  }\r\n  var data = isBindKey ? undefined : getData(func);\r\n\r\n  var newData = [\r\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\r\n    argPos, ary, arity\r\n  ];\r\n\r\n  if (data) {\r\n    mergeData(newData, data);\r\n  }\r\n  func = newData[0];\r\n  bitmask = newData[1];\r\n  thisArg = newData[2];\r\n  partials = newData[3];\r\n  holders = newData[4];\r\n  arity = newData[9] = newData[9] === undefined\r\n    ? (isBindKey ? 0 : func.length)\r\n    : nativeMax(newData[9] - length, 0);\r\n\r\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\r\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\r\n  }\r\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\r\n    var result = createBind(func, bitmask, thisArg);\r\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\r\n    result = createCurry(func, bitmask, arity);\r\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\r\n    result = createPartial(func, bitmask, thisArg, partials);\r\n  } else {\r\n    result = createHybrid.apply(undefined, newData);\r\n  }\r\n  var setter = data ? baseSetData : setData;\r\n  return setWrapToString(setter(result, newData), func, bitmask);\r\n}\r\n\r\nmodule.exports = createWrap;\r\n", "var createWrap = require('./_createWrap');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_ARY_FLAG = 128;\r\n\r\n/**\r\n * Creates a function that invokes `func`, with up to `n` arguments,\r\n * ignoring any additional arguments.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Function\r\n * @param {Function} func The function to cap arguments for.\r\n * @param {number} [n=func.length] The arity cap.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Function} Returns the new capped function.\r\n * @example\r\n *\r\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\r\n * // => [6, 8, 10]\r\n */\r\nfunction ary(func, n, guard) {\r\n  n = guard ? undefined : n;\r\n  n = (func && n == null) ? func.length : n;\r\n  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\r\n}\r\n\r\nmodule.exports = ary;\r\n", "var createWrap = require('./_createWrap');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_CURRY_FLAG = 8;\r\n\r\n/**\r\n * Creates a function that accepts arguments of `func` and either invokes\r\n * `func` returning its result, if at least `arity` number of arguments have\r\n * been provided, or returns a function that accepts the remaining `func`\r\n * arguments, and so on. The arity of `func` may be specified if `func.length`\r\n * is not sufficient.\r\n *\r\n * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\r\n * may be used as a placeholder for provided arguments.\r\n *\r\n * **Note:** This method doesn't set the \"length\" property of curried functions.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Function\r\n * @param {Function} func The function to curry.\r\n * @param {number} [arity=func.length] The arity of `func`.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Function} Returns the new curried function.\r\n * @example\r\n *\r\n * var abc = function(a, b, c) {\r\n *   return [a, b, c];\r\n * };\r\n *\r\n * var curried = _.curry(abc);\r\n *\r\n * curried(1)(2)(3);\r\n * // => [1, 2, 3]\r\n *\r\n * curried(1, 2)(3);\r\n * // => [1, 2, 3]\r\n *\r\n * curried(1, 2, 3);\r\n * // => [1, 2, 3]\r\n *\r\n * // Curried with placeholders.\r\n * curried(1)(_, 3)(2);\r\n * // => [1, 2, 3]\r\n */\r\nfunction curry(func, arity, guard) {\r\n  arity = guard ? undefined : arity;\r\n  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\r\n  result.placeholder = curry.placeholder;\r\n  return result;\r\n}\r\n\r\n// Assign default placeholders.\r\ncurry.placeholder = {};\r\n\r\nmodule.exports = curry;\r\n", "var baseGetTag = require('./_baseGetTag'),\r\n    getPrototype = require('./_getPrototype'),\r\n    isObjectLike = require('./isObjectLike');\r\n\r\n/** `Object#toString` result references. */\r\nvar objectTag = '[object Object]';\r\n\r\n/** Used for built-in method references. */\r\nvar funcProto = Function.prototype,\r\n    objectProto = Object.prototype;\r\n\r\n/** Used to resolve the decompiled source of functions. */\r\nvar funcToString = funcProto.toString;\r\n\r\n/** Used to check objects for own properties. */\r\nvar hasOwnProperty = objectProto.hasOwnProperty;\r\n\r\n/** Used to infer the `Object` constructor. */\r\nvar objectCtorString = funcToString.call(Object);\r\n\r\n/**\r\n * Checks if `value` is a plain object, that is, an object created by the\r\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.8.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\r\n * @example\r\n *\r\n * function Foo() {\r\n *   this.a = 1;\r\n * }\r\n *\r\n * _.isPlainObject(new Foo);\r\n * // => false\r\n *\r\n * _.isPlainObject([1, 2, 3]);\r\n * // => false\r\n *\r\n * _.isPlainObject({ 'x': 0, 'y': 0 });\r\n * // => true\r\n *\r\n * _.isPlainObject(Object.create(null));\r\n * // => true\r\n */\r\nfunction isPlainObject(value) {\r\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\r\n    return false;\r\n  }\r\n  var proto = getPrototype(value);\r\n  if (proto === null) {\r\n    return true;\r\n  }\r\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\r\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\r\n    funcToString.call(Ctor) == objectCtorString;\r\n}\r\n\r\nmodule.exports = isPlainObject;\r\n", "var baseGetTag = require('./_baseGetTag'),\r\n    isObjectLike = require('./isObjectLike'),\r\n    isPlainObject = require('./isPlainObject');\r\n\r\n/** `Object#toString` result references. */\r\nvar domExcTag = '[object DOMException]',\r\n    errorTag = '[object Error]';\r\n\r\n/**\r\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\r\n * `SyntaxError`, `TypeError`, or `URIError` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\r\n * @example\r\n *\r\n * _.isError(new Error);\r\n * // => true\r\n *\r\n * _.isError(Error);\r\n * // => false\r\n */\r\nfunction isError(value) {\r\n  if (!isObjectLike(value)) {\r\n    return false;\r\n  }\r\n  var tag = baseGetTag(value);\r\n  return tag == errorTag || tag == domExcTag ||\r\n    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\r\n}\r\n\r\nmodule.exports = isError;\r\n", "var getTag = require('./_getTag'),\r\n    isObjectLike = require('./isObjectLike');\r\n\r\n/** `Object#toString` result references. */\r\nvar weakMapTag = '[object WeakMap]';\r\n\r\n/**\r\n * Checks if `value` is classified as a `WeakMap` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\r\n * @example\r\n *\r\n * _.isWeakMap(new WeakMap);\r\n * // => true\r\n *\r\n * _.isWeakMap(new Map);\r\n * // => false\r\n */\r\nfunction isWeakMap(value) {\r\n  return isObjectLike(value) && getTag(value) == weakMapTag;\r\n}\r\n\r\nmodule.exports = isWeakMap;\r\n", "var Stack = require('./_Stack'),\r\n    baseIsEqual = require('./_baseIsEqual');\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property values to match.\r\n * @param {Array} matchData The property names, values, and compare flags to match.\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\r\n */\r\nfunction baseIsMatch(object, source, matchData, customizer) {\r\n  var index = matchData.length,\r\n      length = index,\r\n      noCustomizer = !customizer;\r\n\r\n  if (object == null) {\r\n    return !length;\r\n  }\r\n  object = Object(object);\r\n  while (index--) {\r\n    var data = matchData[index];\r\n    if ((noCustomizer && data[2])\r\n          ? data[1] !== object[data[0]]\r\n          : !(data[0] in object)\r\n        ) {\r\n      return false;\r\n    }\r\n  }\r\n  while (++index < length) {\r\n    data = matchData[index];\r\n    var key = data[0],\r\n        objValue = object[key],\r\n        srcValue = data[1];\r\n\r\n    if (noCustomizer && data[2]) {\r\n      if (objValue === undefined && !(key in object)) {\r\n        return false;\r\n      }\r\n    } else {\r\n      var stack = new Stack;\r\n      if (customizer) {\r\n        var result = customizer(objValue, srcValue, key, object, source, stack);\r\n      }\r\n      if (!(result === undefined\r\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\r\n            : result\r\n          )) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nmodule.exports = baseIsMatch;\r\n", "var isObject = require('./isObject');\r\n\r\n/**\r\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` if suitable for strict\r\n *  equality comparisons, else `false`.\r\n */\r\nfunction isStrictComparable(value) {\r\n  return value === value && !isObject(value);\r\n}\r\n\r\nmodule.exports = isStrictComparable;\r\n", "var isStrictComparable = require('./_isStrictComparable'),\r\n    keys = require('./keys');\r\n\r\n/**\r\n * Gets the property names, values, and compare flags of `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @returns {Array} Returns the match data of `object`.\r\n */\r\nfunction getMatchData(object) {\r\n  var result = keys(object),\r\n      length = result.length;\r\n\r\n  while (length--) {\r\n    var key = result[length],\r\n        value = object[key];\r\n\r\n    result[length] = [key, value, isStrictComparable(value)];\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = getMatchData;\r\n", "/**\r\n * A specialized version of `matchesProperty` for source values suitable\r\n * for strict equality comparisons, i.e. `===`.\r\n *\r\n * @private\r\n * @param {string} key The key of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction matchesStrictComparable(key, srcValue) {\r\n  return function(object) {\r\n    if (object == null) {\r\n      return false;\r\n    }\r\n    return object[key] === srcValue &&\r\n      (srcValue !== undefined || (key in Object(object)));\r\n  };\r\n}\r\n\r\nmodule.exports = matchesStrictComparable;\r\n", "var baseIsMatch = require('./_baseIsMatch'),\r\n    getMatchData = require('./_getMatchData'),\r\n    matchesStrictComparable = require('./_matchesStrictComparable');\r\n\r\n/**\r\n * The base implementation of `_.matches` which doesn't clone `source`.\r\n *\r\n * @private\r\n * @param {Object} source The object of property values to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction baseMatches(source) {\r\n  var matchData = getMatchData(source);\r\n  if (matchData.length == 1 && matchData[0][2]) {\r\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\r\n  }\r\n  return function(object) {\r\n    return object === source || baseIsMatch(object, source, matchData);\r\n  };\r\n}\r\n\r\nmodule.exports = baseMatches;\r\n", "var isArray = require('./isArray'),\r\n    isSymbol = require('./isSymbol');\r\n\r\n/** Used to match property names within property paths. */\r\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\r\n    reIsPlainProp = /^\\w*$/;\r\n\r\n/**\r\n * Checks if `value` is a property name and not a property path.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @param {Object} [object] The object to query keys on.\r\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\r\n */\r\nfunction isKey(value, object) {\r\n  if (isArray(value)) {\r\n    return false;\r\n  }\r\n  var type = typeof value;\r\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\r\n      value == null || isSymbol(value)) {\r\n    return true;\r\n  }\r\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\r\n    (object != null && value in Object(object));\r\n}\r\n\r\nmodule.exports = isKey;\r\n", "var isArray = require('./isArray'),\r\n    isKey = require('./_isKey'),\r\n    stringToPath = require('./_stringToPath'),\r\n    toString = require('./toString');\r\n\r\n/**\r\n * Casts `value` to a path array if it's not one.\r\n *\r\n * @private\r\n * @param {*} value The value to inspect.\r\n * @param {Object} [object] The object to query keys on.\r\n * @returns {Array} Returns the cast property path array.\r\n */\r\nfunction castPath(value, object) {\r\n  if (isArray(value)) {\r\n    return value;\r\n  }\r\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\r\n}\r\n\r\nmodule.exports = castPath;\r\n", "var castPath = require('./_castPath'),\r\n    toKey = require('./_toKey');\r\n\r\n/**\r\n * The base implementation of `_.get` without support for default values.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path of the property to get.\r\n * @returns {*} Returns the resolved value.\r\n */\r\nfunction baseGet(object, path) {\r\n  path = castPath(path, object);\r\n\r\n  var index = 0,\r\n      length = path.length;\r\n\r\n  while (object != null && index < length) {\r\n    object = object[toKey(path[index++])];\r\n  }\r\n  return (index && index == length) ? object : undefined;\r\n}\r\n\r\nmodule.exports = baseGet;\r\n", "var baseGet = require('./_baseGet');\r\n\r\n/**\r\n * Gets the value at `path` of `object`. If the resolved value is\r\n * `undefined`, the `defaultValue` is returned in its place.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.7.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path of the property to get.\r\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\r\n * @returns {*} Returns the resolved value.\r\n * @example\r\n *\r\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\r\n *\r\n * _.get(object, 'a[0].b.c');\r\n * // => 3\r\n *\r\n * _.get(object, ['a', '0', 'b', 'c']);\r\n * // => 3\r\n *\r\n * _.get(object, 'a.b.c', 'default');\r\n * // => 'default'\r\n */\r\nfunction get(object, path, defaultValue) {\r\n  var result = object == null ? undefined : baseGet(object, path);\r\n  return result === undefined ? defaultValue : result;\r\n}\r\n\r\nmodule.exports = get;\r\n", "/**\r\n * The base implementation of `_.hasIn` without support for deep paths.\r\n *\r\n * @private\r\n * @param {Object} [object] The object to query.\r\n * @param {Array|string} key The key to check.\r\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\r\n */\r\nfunction baseHasIn(object, key) {\r\n  return object != null && key in Object(object);\r\n}\r\n\r\nmodule.exports = baseHasIn;\r\n", "var castPath = require('./_castPath'),\r\n    isArguments = require('./isArguments'),\r\n    isArray = require('./isArray'),\r\n    isIndex = require('./_isIndex'),\r\n    isLength = require('./isLength'),\r\n    toKey = require('./_toKey');\r\n\r\n/**\r\n * Checks if `path` exists on `object`.\r\n *\r\n * @private\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path to check.\r\n * @param {Function} hasFunc The function to check properties.\r\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n */\r\nfunction hasPath(object, path, hasFunc) {\r\n  path = castPath(path, object);\r\n\r\n  var index = -1,\r\n      length = path.length,\r\n      result = false;\r\n\r\n  while (++index < length) {\r\n    var key = toKey(path[index]);\r\n    if (!(result = object != null && hasFunc(object, key))) {\r\n      break;\r\n    }\r\n    object = object[key];\r\n  }\r\n  if (result || ++index != length) {\r\n    return result;\r\n  }\r\n  length = object == null ? 0 : object.length;\r\n  return !!length && isLength(length) && isIndex(key, length) &&\r\n    (isArray(object) || isArguments(object));\r\n}\r\n\r\nmodule.exports = hasPath;\r\n", "var baseHasIn = require('./_baseHasIn'),\r\n    hasPath = require('./_hasPath');\r\n\r\n/**\r\n * Checks if `path` is a direct or inherited property of `object`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Object\r\n * @param {Object} object The object to query.\r\n * @param {Array|string} path The path to check.\r\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\r\n * @example\r\n *\r\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\r\n *\r\n * _.hasIn(object, 'a');\r\n * // => true\r\n *\r\n * _.hasIn(object, 'a.b');\r\n * // => true\r\n *\r\n * _.hasIn(object, ['a', 'b']);\r\n * // => true\r\n *\r\n * _.hasIn(object, 'b');\r\n * // => false\r\n */\r\nfunction hasIn(object, path) {\r\n  return object != null && hasPath(object, path, baseHasIn);\r\n}\r\n\r\nmodule.exports = hasIn;\r\n", "var baseIsEqual = require('./_baseIsEqual'),\r\n    get = require('./get'),\r\n    hasIn = require('./hasIn'),\r\n    isKey = require('./_isKey'),\r\n    isStrictComparable = require('./_isStrictComparable'),\r\n    matchesStrictComparable = require('./_matchesStrictComparable'),\r\n    toKey = require('./_toKey');\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\r\n *\r\n * @private\r\n * @param {string} path The path of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction baseMatchesProperty(path, srcValue) {\r\n  if (isKey(path) && isStrictComparable(srcValue)) {\r\n    return matchesStrictComparable(toKey(path), srcValue);\r\n  }\r\n  return function(object) {\r\n    var objValue = get(object, path);\r\n    return (objValue === undefined && objValue === srcValue)\r\n      ? hasIn(object, path)\r\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\r\n  };\r\n}\r\n\r\nmodule.exports = baseMatchesProperty;\r\n", "/**\r\n * The base implementation of `_.property` without support for deep paths.\r\n *\r\n * @private\r\n * @param {string} key The key of the property to get.\r\n * @returns {Function} Returns the new accessor function.\r\n */\r\nfunction baseProperty(key) {\r\n  return function(object) {\r\n    return object == null ? undefined : object[key];\r\n  };\r\n}\r\n\r\nmodule.exports = baseProperty;\r\n", "var baseGet = require('./_baseGet');\r\n\r\n/**\r\n * A specialized version of `baseProperty` which supports deep paths.\r\n *\r\n * @private\r\n * @param {Array|string} path The path of the property to get.\r\n * @returns {Function} Returns the new accessor function.\r\n */\r\nfunction basePropertyDeep(path) {\r\n  return function(object) {\r\n    return baseGet(object, path);\r\n  };\r\n}\r\n\r\nmodule.exports = basePropertyDeep;\r\n", "var baseProperty = require('./_baseProperty'),\r\n    basePropertyDeep = require('./_basePropertyDeep'),\r\n    isKey = require('./_isKey'),\r\n    toKey = require('./_toKey');\r\n\r\n/**\r\n * Creates a function that returns the value at `path` of a given object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.4.0\r\n * @category Util\r\n * @param {Array|string} path The path of the property to get.\r\n * @returns {Function} Returns the new accessor function.\r\n * @example\r\n *\r\n * var objects = [\r\n *   { 'a': { 'b': 2 } },\r\n *   { 'a': { 'b': 1 } }\r\n * ];\r\n *\r\n * _.map(objects, _.property('a.b'));\r\n * // => [2, 1]\r\n *\r\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\r\n * // => [1, 2]\r\n */\r\nfunction property(path) {\r\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\r\n}\r\n\r\nmodule.exports = property;\r\n", "var baseMatches = require('./_baseMatches'),\r\n    baseMatchesProperty = require('./_baseMatchesProperty'),\r\n    identity = require('./identity'),\r\n    isArray = require('./isArray'),\r\n    property = require('./property');\r\n\r\n/**\r\n * The base implementation of `_.iteratee`.\r\n *\r\n * @private\r\n * @param {*} [value=_.identity] The value to convert to an iteratee.\r\n * @returns {Function} Returns the iteratee.\r\n */\r\nfunction baseIteratee(value) {\r\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\r\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\r\n  if (typeof value == 'function') {\r\n    return value;\r\n  }\r\n  if (value == null) {\r\n    return identity;\r\n  }\r\n  if (typeof value == 'object') {\r\n    return isArray(value)\r\n      ? baseMatchesProperty(value[0], value[1])\r\n      : baseMatches(value);\r\n  }\r\n  return property(value);\r\n}\r\n\r\nmodule.exports = baseIteratee;\r\n", "var baseClone = require('./_baseClone'),\r\n    baseIteratee = require('./_baseIteratee');\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1;\r\n\r\n/**\r\n * Creates a function that invokes `func` with the arguments of the created\r\n * function. If `func` is a property name, the created function returns the\r\n * property value for a given element. If `func` is an array or object, the\r\n * created function returns `true` for elements that contain the equivalent\r\n * source properties, otherwise it returns `false`.\r\n *\r\n * @static\r\n * @since 4.0.0\r\n * @memberOf _\r\n * @category Util\r\n * @param {*} [func=_.identity] The value to convert to a callback.\r\n * @returns {Function} Returns the callback.\r\n * @example\r\n *\r\n * var users = [\r\n *   { 'user': 'barney', 'age': 36, 'active': true },\r\n *   { 'user': 'fred',   'age': 40, 'active': false }\r\n * ];\r\n *\r\n * // The `_.matches` iteratee shorthand.\r\n * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\r\n * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\r\n *\r\n * // The `_.matchesProperty` iteratee shorthand.\r\n * _.filter(users, _.iteratee(['user', 'fred']));\r\n * // => [{ 'user': 'fred', 'age': 40 }]\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.map(users, _.iteratee('user'));\r\n * // => ['barney', 'fred']\r\n *\r\n * // Create custom iteratee shorthands.\r\n * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\r\n *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\r\n *     return func.test(string);\r\n *   };\r\n * });\r\n *\r\n * _.filter(['abc', 'def'], /ef/);\r\n * // => ['def']\r\n */\r\nfunction iteratee(func) {\r\n  return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\r\n}\r\n\r\nmodule.exports = iteratee;\r\n", "var Symbol = require('./_Symbol'),\r\n    isArguments = require('./isArguments'),\r\n    isArray = require('./isArray');\r\n\r\n/** Built-in value references. */\r\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\r\n\r\n/**\r\n * Checks if `value` is a flattenable `arguments` object or array.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\r\n */\r\nfunction isFlattenable(value) {\r\n  return isArray(value) || isArguments(value) ||\r\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\r\n}\r\n\r\nmodule.exports = isFlattenable;\r\n", "var arrayPush = require('./_arrayPush'),\r\n    isFlattenable = require('./_isFlattenable');\r\n\r\n/**\r\n * The base implementation of `_.flatten` with support for restricting flattening.\r\n *\r\n * @private\r\n * @param {Array} array The array to flatten.\r\n * @param {number} depth The maximum recursion depth.\r\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\r\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\r\n * @param {Array} [result=[]] The initial result value.\r\n * @returns {Array} Returns the new flattened array.\r\n */\r\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\r\n  var index = -1,\r\n      length = array.length;\r\n\r\n  predicate || (predicate = isFlattenable);\r\n  result || (result = []);\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (depth > 0 && predicate(value)) {\r\n      if (depth > 1) {\r\n        // Recursively flatten arrays (susceptible to call stack limits).\r\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\r\n      } else {\r\n        arrayPush(result, value);\r\n      }\r\n    } else if (!isStrict) {\r\n      result[result.length] = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseFlatten;\r\n", "var baseFlatten = require('./_baseFlatten');\r\n\r\n/**\r\n * Flattens `array` a single level deep.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to flatten.\r\n * @returns {Array} Returns the new flattened array.\r\n * @example\r\n *\r\n * _.flatten([1, [2, [3, [4]], 5]]);\r\n * // => [1, 2, [3, [4]], 5]\r\n */\r\nfunction flatten(array) {\r\n  var length = array == null ? 0 : array.length;\r\n  return length ? baseFlatten(array, 1) : [];\r\n}\r\n\r\nmodule.exports = flatten;\r\n", "var apply = require('./_apply');\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * A specialized version of `baseRest` which transforms the rest array.\r\n *\r\n * @private\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n * @param {Function} transform The rest array transform.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction overRest(func, start, transform) {\r\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\r\n  return function() {\r\n    var args = arguments,\r\n        index = -1,\r\n        length = nativeMax(args.length - start, 0),\r\n        array = Array(length);\r\n\r\n    while (++index < length) {\r\n      array[index] = args[start + index];\r\n    }\r\n    index = -1;\r\n    var otherArgs = Array(start + 1);\r\n    while (++index < start) {\r\n      otherArgs[index] = args[index];\r\n    }\r\n    otherArgs[start] = transform(array);\r\n    return apply(func, this, otherArgs);\r\n  };\r\n}\r\n\r\nmodule.exports = overRest;\r\n", "var flatten = require('./flatten'),\r\n    overRest = require('./_overRest'),\r\n    setToString = require('./_setToString');\r\n\r\n/**\r\n * A specialized version of `baseRest` which flattens the rest array.\r\n *\r\n * @private\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction flatRest(func) {\r\n  return setToString(overRest(func, undefined, flatten), func + '');\r\n}\r\n\r\nmodule.exports = flatRest;\r\n", "var createWrap = require('./_createWrap'),\r\n    flatRest = require('./_flatRest');\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_REARG_FLAG = 256;\r\n\r\n/**\r\n * Creates a function that invokes `func` with arguments arranged according\r\n * to the specified `indexes` where the argument value at the first index is\r\n * provided as the first argument, the argument value at the second index is\r\n * provided as the second argument, and so on.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Function\r\n * @param {Function} func The function to rearrange arguments for.\r\n * @param {...(number|number[])} indexes The arranged argument indexes.\r\n * @returns {Function} Returns the new function.\r\n * @example\r\n *\r\n * var rearged = _.rearg(function(a, b, c) {\r\n *   return [a, b, c];\r\n * }, [2, 0, 1]);\r\n *\r\n * rearged('b', 'c', 'a')\r\n * // => ['a', 'b', 'c']\r\n */\r\nvar rearg = flatRest(function(func, indexes) {\r\n  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\r\n});\r\n\r\nmodule.exports = rearg;\r\n", "module.exports = {\r\n  'ary': require('../ary'),\r\n  'assign': require('../_baseAssign'),\r\n  'clone': require('../clone'),\r\n  'curry': require('../curry'),\r\n  'forEach': require('../_arrayEach'),\r\n  'isArray': require('../isArray'),\r\n  'isError': require('../isError'),\r\n  'isFunction': require('../isFunction'),\r\n  'isWeakMap': require('../isWeakMap'),\r\n  'iteratee': require('../iteratee'),\r\n  'keys': require('../_baseKeys'),\r\n  'rearg': require('../rearg'),\r\n  'toInteger': require('../toInteger'),\r\n  'toPath': require('../toPath')\r\n};\r\n", "var baseConvert = require('./_baseConvert'),\r\n    util = require('./_util');\r\n\r\n/**\r\n * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last\r\n * version with conversion `options` applied. If `name` is an object its methods\r\n * will be converted.\r\n *\r\n * @param {string} name The name of the function to wrap.\r\n * @param {Function} [func] The function to wrap.\r\n * @param {Object} [options] The options object. See `baseConvert` for more details.\r\n * @returns {Function|Object} Returns the converted function or object.\r\n */\r\nfunction convert(name, func, options) {\r\n  return baseConvert(util, name, func, options);\r\n}\r\n\r\nmodule.exports = convert;\r\n", "var LodashWrapper = require('./_LodashWrapper'),\r\n    flatRest = require('./_flatRest'),\r\n    getData = require('./_getData'),\r\n    getFuncName = require('./_getFuncName'),\r\n    isArray = require('./isArray'),\r\n    isLaziable = require('./_isLaziable');\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_CURRY_FLAG = 8,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_REARG_FLAG = 256;\r\n\r\n/**\r\n * Creates a `_.flow` or `_.flowRight` function.\r\n *\r\n * @private\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new flow function.\r\n */\r\nfunction createFlow(fromRight) {\r\n  return flatRest(function(funcs) {\r\n    var length = funcs.length,\r\n        index = length,\r\n        prereq = LodashWrapper.prototype.thru;\r\n\r\n    if (fromRight) {\r\n      funcs.reverse();\r\n    }\r\n    while (index--) {\r\n      var func = funcs[index];\r\n      if (typeof func != 'function') {\r\n        throw new TypeError(FUNC_ERROR_TEXT);\r\n      }\r\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\r\n        var wrapper = new LodashWrapper([], true);\r\n      }\r\n    }\r\n    index = wrapper ? index : length;\r\n    while (++index < length) {\r\n      func = funcs[index];\r\n\r\n      var funcName = getFuncName(func),\r\n          data = funcName == 'wrapper' ? getData(func) : undefined;\r\n\r\n      if (data && isLaziable(data[0]) &&\r\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\r\n            !data[4].length && data[9] == 1\r\n          ) {\r\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\r\n      } else {\r\n        wrapper = (func.length == 1 && isLaziable(func))\r\n          ? wrapper[funcName]()\r\n          : wrapper.thru(func);\r\n      }\r\n    }\r\n    return function() {\r\n      var args = arguments,\r\n          value = args[0];\r\n\r\n      if (wrapper && args.length == 1 && isArray(value)) {\r\n        return wrapper.plant(value).value();\r\n      }\r\n      var index = 0,\r\n          result = length ? funcs[index].apply(this, args) : value;\r\n\r\n      while (++index < length) {\r\n        result = funcs[index].call(this, result);\r\n      }\r\n      return result;\r\n    };\r\n  });\r\n}\r\n\r\nmodule.exports = createFlow;\r\n", "var createFlow = require('./_createFlow');\r\n\r\n/**\r\n * Creates a function that returns the result of invoking the given functions\r\n * with the `this` binding of the created function, where each successive\r\n * invocation is supplied the return value of the previous.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Util\r\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\r\n * @returns {Function} Returns the new composite function.\r\n * @see _.flowRight\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * var addSquare = _.flow([_.add, square]);\r\n * addSquare(1, 2);\r\n * // => 9\r\n */\r\nvar flow = createFlow();\r\n\r\nmodule.exports = flow;\r\n", "var convert = require('./convert'),\r\n    func = convert('flow', require('../flow'));\r\n\r\nfunc.placeholder = require('./placeholder');\r\nmodule.exports = func;\r\n", "module.exports = require('./flow');\r\n", "/**\n * Retrieves the value of a specified cookie.\n *\n * @param name - The name of the cookie to retrieve.\n * @returns The decoded cookie value if found, otherwise null.\n */\nexport const getCookieValue = (name: string): string | null => {\n  let result = null;\n  const cookieArray = document.cookie.split(';');\n  cookieArray.forEach((cookie) => {\n    const [key, value] = cookie.split('=').map((item) => item.trim());\n    if (key === name) {\n      result = decodeURIComponent(value);\n    }\n  });\n  return result;\n};\n\n/**\n * Sets a cookie with the given name, value, and optional expiration time.\n *\n * @param name - The name of the cookie.\n * @param value - The value of the cookie.\n * @param days - (Optional) Number of days until the cookie expires. If omitted, the cookie is a session cookie.\n */\nexport const setCookie = (name: string, value: string, days?: number): void => {\n  let expires = '';\n  if (days) {\n    const date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = `; Expires=${date.toUTCString()}`;\n  }\n  document.cookie = `${name}=${encodeURIComponent(value)}; Path=/${expires}`;\n};\n\n/**\n * Deletes a cookie by setting its expiration date to a past date.\n *\n * @param name - The name of the cookie to delete.\n */\nexport const deleteCookie = (name: string): void => {\n  document.cookie = `${name}=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;`;\n};\n", "import { createSlice } from '@reduxjs/toolkit';\n\nimport { PermissionMap } from './types/permissions';\nimport { getCookieValue, setCookie, deleteCookie } from './utils/cookies';\n\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\ntype ThemeName = 'light' | 'dark' | 'system';\n\ninterface AppState {\n  language: {\n    locale: string;\n    localeNames: Record<string, string>;\n  };\n  permissions: Partial<PermissionMap>;\n  theme: {\n    currentTheme: ThemeName;\n    availableThemes: string[];\n  };\n  token?: string | null;\n}\n\nconst STORAGE_KEYS = {\n  TOKEN: 'jwtToken',\n  STATUS: 'isLoggedIn',\n};\n\nconst THEME_LOCAL_STORAGE_KEY = 'STRAPI_THEME';\nconst LANGUAGE_LOCAL_STORAGE_KEY = 'strapi-admin-language';\n\nexport const getStoredToken = (): string | null => {\n  const fromLocalStorage = localStorage.getItem(STORAGE_KEYS.TOKEN);\n  if (fromLocalStorage) {\n    return JSON.parse(fromLocalStorage);\n  }\n\n  const fromCookie = getCookieValue(STORAGE_KEYS.TOKEN);\n  return fromCookie ?? null;\n};\n\nconst adminSlice = createSlice({\n  name: 'admin',\n  initialState: () => {\n    return {\n      language: {\n        locale: 'en',\n        localeNames: { en: 'English' },\n      },\n      permissions: {},\n      theme: {\n        availableThemes: [],\n        currentTheme: localStorage.getItem(THEME_LOCAL_STORAGE_KEY) || 'system',\n      },\n      token: null,\n    } as AppState;\n  },\n  reducers: {\n    setAppTheme(state, action: PayloadAction<ThemeName>) {\n      state.theme.currentTheme = action.payload;\n      window.localStorage.setItem(THEME_LOCAL_STORAGE_KEY, action.payload);\n    },\n    setAvailableThemes(state, action: PayloadAction<AppState['theme']['availableThemes']>) {\n      state.theme.availableThemes = action.payload;\n    },\n    setLocale(state, action: PayloadAction<string>) {\n      state.language.locale = action.payload;\n\n      window.localStorage.setItem(LANGUAGE_LOCAL_STORAGE_KEY, action.payload);\n      document.documentElement.setAttribute('lang', action.payload);\n    },\n    setToken(state, action: PayloadAction<string | null>) {\n      state.token = action.payload;\n    },\n    login(state, action: PayloadAction<{ token: string; persist?: boolean }>) {\n      const { token, persist } = action.payload;\n\n      if (!persist) {\n        setCookie(STORAGE_KEYS.TOKEN, token);\n      } else {\n        window.localStorage.setItem(STORAGE_KEYS.TOKEN, JSON.stringify(token));\n      }\n      window.localStorage.setItem(STORAGE_KEYS.STATUS, 'true');\n      state.token = token;\n    },\n    logout(state) {\n      state.token = null;\n      deleteCookie(STORAGE_KEYS.TOKEN);\n      window.localStorage.removeItem(STORAGE_KEYS.TOKEN);\n      window.localStorage.removeItem(STORAGE_KEYS.STATUS);\n    },\n  },\n});\n\nconst reducer = adminSlice.reducer;\n\nexport const { setAppTheme, setAvailableThemes, setLocale, setToken, logout, login } =\n  adminSlice.actions;\n\nexport { reducer, THEME_LOCAL_STORAGE_KEY, LANGUAGE_LOCAL_STORAGE_KEY };\nexport type { AppState, ThemeName };\n", "import pipe from 'lodash/fp/pipe';\nimport qs from 'qs';\n\nimport { getCookieValue } from './cookies';\n\nimport type { errors } from '@strapi/utils';\n\nexport type ApiError =\n  | errors.ApplicationError\n  | errors.ForbiddenError\n  | errors.NotFoundError\n  | errors.NotImplementedError\n  | errors.PaginationError\n  | errors.PayloadTooLargeError\n  | errors.PolicyError\n  | errors.RateLimitError\n  | errors.UnauthorizedError\n  | errors.ValidationError\n  | errors.YupValidationError;\n\nconst STORAGE_KEYS = {\n  TOKEN: 'jwtToken',\n  USER: 'userInfo',\n};\n\ntype FetchResponse<TData = any> = {\n  data: TData;\n  status?: number;\n};\n\ntype FetchOptions = {\n  params?: any;\n  signal?: AbortSignal;\n  headers?: Record<string, string>;\n  validateStatus?: ((status: number) => boolean) | null;\n};\n\ntype FetchConfig = {\n  signal?: AbortSignal;\n};\n\ninterface ErrorResponse {\n  data: {\n    data?: any;\n    error: ApiError & { status?: number };\n  };\n}\n\nclass FetchError extends Error {\n  public name: string;\n  public message: string;\n  public response?: ErrorResponse;\n  public code?: number;\n  public status?: number;\n\n  constructor(message: string, response?: ErrorResponse) {\n    super(message);\n    this.name = 'FetchError';\n    this.message = message;\n    this.response = response;\n    this.code = response?.data?.error?.status;\n    this.status = response?.data?.error?.status;\n\n    // Ensure correct stack trace in error object\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, FetchError);\n    }\n  }\n}\n\nconst isFetchError = (error: unknown): error is FetchError => {\n  return error instanceof FetchError;\n};\n\nconst getToken = (): string | null => {\n  const fromLocalStorage = localStorage.getItem(STORAGE_KEYS.TOKEN);\n  if (fromLocalStorage) {\n    return JSON.parse(fromLocalStorage);\n  }\n\n  const fromCookie = getCookieValue(STORAGE_KEYS.TOKEN);\n  return fromCookie ?? null;\n};\n\ntype FetchClient = {\n  get: <TData = any>(url: string, config?: FetchOptions) => Promise<FetchResponse<TData>>;\n  put: <TData = any, TSend = any>(\n    url: string,\n    data?: TSend,\n    config?: FetchOptions\n  ) => Promise<FetchResponse<TData>>;\n  post: <TData = any, TSend = any>(\n    url: string,\n    data?: TSend,\n    config?: FetchOptions\n  ) => Promise<FetchResponse<TData>>;\n  del: <TData = any>(url: string, config?: FetchOptions) => Promise<FetchResponse<TData>>;\n};\n\n/**\n * @public\n * @param {FetchConfig} [defaultOptions={}] - Fetch Configs.\n * @returns {FetchClient} A fetch client object with methods for making HTTP requests.\n * @description This is an abstraction around the native fetch exposed by a function. It provides a simple interface to handle API calls\n * to the Strapi backend.\n * @example\n * ```tsx\n * import { getFetchClient } from '@strapi/admin/admin';\n *\n * const myFunct = () => {\n *   const { get } = getFetchClient();\n *   const requestURL = \"/some-endpoint\";\n *\n *   const { data } = await get(requestURL);\n *\n *   return data;\n * };\n * ```\n */\nconst getFetchClient = (defaultOptions: FetchConfig = {}): FetchClient => {\n  const backendURL = window.strapi.backendURL;\n  const defaultHeader = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${getToken()}`,\n  };\n\n  const isFormDataRequest = (body: unknown) => body instanceof FormData;\n  const addPrependingSlash = (url: string) => (url.charAt(0) !== '/' ? `/${url}` : url);\n\n  // This regular expression matches a string that starts with either \"http://\" or \"https://\" or any other protocol name in lower case letters, followed by \"://\" and ends with anything else\n  const hasProtocol = (url: string) => new RegExp('^(?:[a-z+]+:)?//', 'i').test(url);\n\n  // Check if the url has a prepending slash, if not add a slash\n  const normalizeUrl = (url: string) => (hasProtocol(url) ? url : addPrependingSlash(url));\n\n  // Add a response interceptor to return the response\n  const responseInterceptor = async <TData = any>(\n    response: Response,\n    validateStatus?: FetchOptions['validateStatus']\n  ): Promise<FetchResponse<TData>> => {\n    try {\n      const result = await response.json();\n\n      /**\n       * validateStatus allows us to customize when a response should throw an error\n       * In native Fetch API, a response is considered \"not ok\"\n       * when the status code falls in the 200 to 299 (inclusive) range\n       */\n      if (!response.ok && result.error && !validateStatus?.(response.status)) {\n        throw new FetchError(result.error.message, { data: result });\n      }\n\n      if (!response.ok && !validateStatus?.(response.status)) {\n        throw new FetchError('Unknown Server Error');\n      }\n\n      return { data: result };\n    } catch (error) {\n      if (error instanceof SyntaxError && response.ok) {\n        // Making sure that a SyntaxError doesn't throw if it's successful\n        return { data: [], status: response.status } as FetchResponse<any>;\n      } else {\n        throw error;\n      }\n    }\n  };\n\n  const paramsSerializer =\n    <Param = unknown>(params?: Param) =>\n    (url: string) => {\n      if (params) {\n        if (typeof params === 'string') {\n          return `${url}?${params}`;\n        }\n\n        /**\n         * TODO V6: Encoding should be enabled in this step\n         * So the rest of the app doesn't have to worry about it,\n         * It's considered a breaking change because it impacts any API request, including the user's custom code\n         */\n        const serializedParams = qs.stringify(params, { encode: false });\n        return `${url}?${serializedParams}`;\n      }\n      return url;\n    };\n\n  const addBaseUrl = (url: Parameters<typeof fetch>[0]) => {\n    return `${backendURL}${url}`;\n  };\n\n  /**\n   * We use the factory method because the options\n   * are unique to the individual request\n   */\n  const makeCreateRequestUrl = (options?: FetchOptions) =>\n    pipe(normalizeUrl, addBaseUrl, paramsSerializer(options?.params));\n\n  const fetchClient: FetchClient = {\n    get: async <TData>(url: string, options?: FetchOptions): Promise<FetchResponse<TData>> => {\n      const headers = new Headers({\n        ...defaultHeader,\n        ...options?.headers,\n      });\n      /**\n       * this applies all our transformations to the URL\n       * - normalizing (making sure it has the correct slash)\n       * - appending our BaseURL which comes from the window.strapi object\n       * - serializing our params with QS\n       */\n      const createRequestUrl = makeCreateRequestUrl(options);\n      const response = await fetch(createRequestUrl(url), {\n        signal: options?.signal ?? defaultOptions.signal,\n        method: 'GET',\n        headers,\n      });\n\n      return responseInterceptor<TData>(response, options?.validateStatus);\n    },\n    post: async <TData, TSend = any>(\n      url: string,\n      data?: TSend,\n      options?: FetchOptions\n    ): Promise<FetchResponse<TData>> => {\n      const headers = new Headers({\n        ...defaultHeader,\n        ...options?.headers,\n      });\n\n      const createRequestUrl = makeCreateRequestUrl(options);\n\n      /**\n       * we have to remove the Content-Type value if it was a formData request\n       * the browser will automatically set the header value\n       */\n      if (isFormDataRequest(data)) {\n        headers.delete('Content-Type');\n      }\n\n      const response = await fetch(createRequestUrl(url), {\n        signal: options?.signal ?? defaultOptions.signal,\n        method: 'POST',\n        headers,\n        body: isFormDataRequest(data) ? (data as FormData) : JSON.stringify(data),\n      });\n      return responseInterceptor<TData>(response, options?.validateStatus);\n    },\n    put: async <TData, TSend = any>(\n      url: string,\n      data?: TSend,\n      options?: FetchOptions\n    ): Promise<FetchResponse<TData>> => {\n      const headers = new Headers({\n        ...defaultHeader,\n        ...options?.headers,\n      });\n\n      const createRequestUrl = makeCreateRequestUrl(options);\n\n      /**\n       * we have to remove the Content-Type value if it was a formData request\n       * the browser will automatically set the header value\n       */\n      if (isFormDataRequest(data)) {\n        headers.delete('Content-Type');\n      }\n\n      const response = await fetch(createRequestUrl(url), {\n        signal: options?.signal ?? defaultOptions.signal,\n        method: 'PUT',\n        headers,\n        body: isFormDataRequest(data) ? (data as FormData) : JSON.stringify(data),\n      });\n\n      return responseInterceptor<TData>(response, options?.validateStatus);\n    },\n    del: async <TData>(url: string, options?: FetchOptions): Promise<FetchResponse<TData>> => {\n      const headers = new Headers({\n        ...defaultHeader,\n        ...options?.headers,\n      });\n\n      const createRequestUrl = makeCreateRequestUrl(options);\n      const response = await fetch(createRequestUrl(url), {\n        signal: options?.signal ?? defaultOptions.signal,\n        method: 'DELETE',\n        headers,\n      });\n      return responseInterceptor<TData>(response, options?.validateStatus);\n    },\n  };\n\n  return fetchClient;\n};\n\nexport { getFetchClient, isFetchError, FetchError };\nexport type { FetchOptions, FetchResponse, FetchConfig, FetchClient, ErrorResponse };\n", "import { SerializedError } from '@reduxjs/toolkit';\nimport { BaseQueryFn } from '@reduxjs/toolkit/query';\n\nimport { login as loginAction, logout as logoutAction } from '../reducer';\nimport { getFetchClient, type FetchOptions, ApiError, isFetchError } from '../utils/getFetchClient';\n\ninterface QueryArguments {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PUT';\n  data?: unknown;\n  config?: FetchOptions;\n}\n\ninterface UnknownApiError {\n  name: 'UnknownError';\n  message: string;\n  details?: unknown;\n  status?: number;\n}\n\ntype BaseQueryError = ApiError | UnknownApiError;\n\nlet refreshPromise: Promise<string> | null = null;\n\nconst isAuthPath = (url: string) => /^\\/admin\\/(login|logout|access-token)\\b/.test(url);\n\nconst simpleQuery: BaseQueryFn<string | QueryArguments, unknown, BaseQueryError> = async (\n  query,\n  api\n) => {\n  const { signal, dispatch } = api as { signal?: AbortSignal; dispatch: (a: any) => void };\n\n  const executeQuery = async (queryToExecute: string | QueryArguments) => {\n    const { get, post, del, put } = getFetchClient();\n    if (typeof queryToExecute === 'string') {\n      const result = await get(queryToExecute, { signal });\n      return result;\n    }\n\n    const { url, method = 'GET', data, config } = queryToExecute;\n    if (method === 'POST') {\n      return post(url, data, { ...config, signal });\n    }\n    if (method === 'DELETE') {\n      return del(url, { ...config, signal });\n    }\n    if (method === 'PUT') {\n      return put(url, data, { ...config, signal });\n    }\n    return get(url, { ...config, signal });\n  };\n\n  try {\n    const result = await executeQuery(query);\n    return { data: result.data };\n  } catch (err) {\n    // Handle error of type FetchError\n\n    if (isFetchError(err)) {\n      // Attempt auto-refresh on 401 then retry once\n      if (err.status === 401) {\n        const url = typeof query === 'string' ? query : query.url;\n\n        if (!isAuthPath(url)) {\n          if (!refreshPromise) {\n            async function refreshAccessToken(): Promise<string> {\n              const { post } = getFetchClient();\n\n              const res = await post('/admin/access-token');\n              const token = res?.data?.data?.token as string | undefined;\n              if (!token) {\n                throw new Error('access_token_exchange_failed');\n              }\n\n              // Persist according to previous choice: localStorage presence implies persist\n              const persist = Boolean(localStorage.getItem('jwtToken'));\n              dispatch(loginAction({ token, persist }));\n\n              return token;\n            }\n\n            refreshPromise = refreshAccessToken().finally(() => {\n              refreshPromise = null;\n            });\n          }\n\n          try {\n            await refreshPromise;\n            // Retry original request once with updated Authorization\n            const retry = await executeQuery(query);\n\n            return { data: retry.data };\n          } catch (refreshError) {\n            try {\n              const { post } = getFetchClient();\n              await post('/admin/logout');\n            } catch {\n              // no-op\n            }\n\n            dispatch(logoutAction());\n            // Fall through to return the original 401 error shape\n          }\n        }\n      }\n\n      if (\n        typeof err.response?.data === 'object' &&\n        err.response?.data !== null &&\n        'error' in err.response?.data\n      ) {\n        /**\n         * This will most likely be ApiError\n         */\n        return { data: undefined, error: err.response?.data.error as any };\n      } else {\n        return {\n          data: undefined,\n          error: {\n            name: 'UnknownError',\n            message: err.message,\n            details: err.response,\n            status: err.status,\n          } as UnknownApiError,\n        };\n      }\n    }\n\n    const error = err as Error;\n    return {\n      data: undefined,\n      error: {\n        name: error.name,\n        message: error.message,\n        stack: error.stack,\n      } satisfies SerializedError,\n    };\n  }\n};\n\nconst fetchBaseQuery = () => simpleQuery;\n\nconst isBaseQueryError = (error: BaseQueryError | SerializedError): error is BaseQueryError => {\n  return error.name !== undefined;\n};\n\nexport { fetchBaseQuery, isBaseQueryError };\nexport type { BaseQueryError, UnknownApiError, QueryArguments };\n", "import type { SerializedError } from '@reduxjs/toolkit'\r\nimport type { BaseQueryError } from '../baseQueryTypes'\r\nimport type {\r\n  QueryDefinition,\r\n  MutationDefinition,\r\n  EndpointDefinitions,\r\n  BaseEndpointDefinition,\r\n  ResultTypeFrom,\r\n  QueryArgFrom,\r\n} from '../endpointDefinitions'\r\nimport type { Id, WithRequiredProp } from '../tsHelpers'\r\n\r\nexport type QueryCacheKey = string & { _type: 'queryCacheKey' }\r\nexport type QuerySubstateIdentifier = { queryCacheKey: QueryCacheKey }\r\nexport type MutationSubstateIdentifier =\r\n  | {\r\n      requestId: string\r\n      fixedCacheKey?: string\r\n    }\r\n  | {\r\n      requestId?: string\r\n      fixedCacheKey: string\r\n    }\r\n\r\nexport type RefetchConfigOptions = {\r\n  refetchOnMountOrArgChange: boolean | number\r\n  refetchOnReconnect: boolean\r\n  refetchOnFocus: boolean\r\n}\r\n\r\n/**\r\n * Strings describing the query state at any given time.\r\n */\r\nexport enum QueryStatus {\r\n  uninitialized = 'uninitialized',\r\n  pending = 'pending',\r\n  fulfilled = 'fulfilled',\r\n  rejected = 'rejected',\r\n}\r\n\r\nexport type RequestStatusFlags =\r\n  | {\r\n      status: QueryStatus.uninitialized\r\n      isUninitialized: true\r\n      isLoading: false\r\n      isSuccess: false\r\n      isError: false\r\n    }\r\n  | {\r\n      status: QueryStatus.pending\r\n      isUninitialized: false\r\n      isLoading: true\r\n      isSuccess: false\r\n      isError: false\r\n    }\r\n  | {\r\n      status: QueryStatus.fulfilled\r\n      isUninitialized: false\r\n      isLoading: false\r\n      isSuccess: true\r\n      isError: false\r\n    }\r\n  | {\r\n      status: QueryStatus.rejected\r\n      isUninitialized: false\r\n      isLoading: false\r\n      isSuccess: false\r\n      isError: true\r\n    }\r\n\r\nexport function getRequestStatusFlags(status: QueryStatus): RequestStatusFlags {\r\n  return {\r\n    status,\r\n    isUninitialized: status === QueryStatus.uninitialized,\r\n    isLoading: status === QueryStatus.pending,\r\n    isSuccess: status === QueryStatus.fulfilled,\r\n    isError: status === QueryStatus.rejected,\r\n  } as any\r\n}\r\n\r\nexport type SubscriptionOptions = {\r\n  /**\r\n   * How frequently to automatically re-fetch data (in milliseconds). Defaults to `0` (off).\r\n   */\r\n  pollingInterval?: number\r\n  /**\r\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after regaining a network connection.\r\n   *\r\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\r\n   *\r\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\r\n   */\r\n  refetchOnReconnect?: boolean\r\n  /**\r\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after the application window regains focus.\r\n   *\r\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\r\n   *\r\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\r\n   */\r\n  refetchOnFocus?: boolean\r\n}\r\nexport type Subscribers = { [requestId: string]: SubscriptionOptions }\r\nexport type QueryKeys<Definitions extends EndpointDefinitions> = {\r\n  [K in keyof Definitions]: Definitions[K] extends QueryDefinition<\r\n    any,\r\n    any,\r\n    any,\r\n    any\r\n  >\r\n    ? K\r\n    : never\r\n}[keyof Definitions]\r\nexport type MutationKeys<Definitions extends EndpointDefinitions> = {\r\n  [K in keyof Definitions]: Definitions[K] extends MutationDefinition<\r\n    any,\r\n    any,\r\n    any,\r\n    any\r\n  >\r\n    ? K\r\n    : never\r\n}[keyof Definitions]\r\n\r\ntype BaseQuerySubState<D extends BaseEndpointDefinition<any, any, any>> = {\r\n  /**\r\n   * The argument originally passed into the hook or `initiate` action call\r\n   */\r\n  originalArgs: QueryArgFrom<D>\r\n  /**\r\n   * A unique ID associated with the request\r\n   */\r\n  requestId: string\r\n  /**\r\n   * The received data from the query\r\n   */\r\n  data?: ResultTypeFrom<D>\r\n  /**\r\n   * The received error if applicable\r\n   */\r\n  error?:\r\n    | SerializedError\r\n    | (D extends QueryDefinition<any, infer BaseQuery, any, any>\r\n        ? BaseQueryError<BaseQuery>\r\n        : never)\r\n  /**\r\n   * The name of the endpoint associated with the query\r\n   */\r\n  endpointName: string\r\n  /**\r\n   * Time that the latest query started\r\n   */\r\n  startedTimeStamp: number\r\n  /**\r\n   * Time that the latest query was fulfilled\r\n   */\r\n  fulfilledTimeStamp?: number\r\n}\r\n\r\nexport type QuerySubState<D extends BaseEndpointDefinition<any, any, any>> = Id<\r\n  | ({\r\n      status: QueryStatus.fulfilled\r\n    } & WithRequiredProp<\r\n      BaseQuerySubState<D>,\r\n      'data' | 'fulfilledTimeStamp'\r\n    > & { error: undefined })\r\n  | ({\r\n      status: QueryStatus.pending\r\n    } & BaseQuerySubState<D>)\r\n  | ({\r\n      status: QueryStatus.rejected\r\n    } & WithRequiredProp<BaseQuerySubState<D>, 'error'>)\r\n  | {\r\n      status: QueryStatus.uninitialized\r\n      originalArgs?: undefined\r\n      data?: undefined\r\n      error?: undefined\r\n      requestId?: undefined\r\n      endpointName?: string\r\n      startedTimeStamp?: undefined\r\n      fulfilledTimeStamp?: undefined\r\n    }\r\n>\r\n\r\ntype BaseMutationSubState<D extends BaseEndpointDefinition<any, any, any>> = {\r\n  requestId: string\r\n  data?: ResultTypeFrom<D>\r\n  error?:\r\n    | SerializedError\r\n    | (D extends MutationDefinition<any, infer BaseQuery, any, any>\r\n        ? BaseQueryError<BaseQuery>\r\n        : never)\r\n  endpointName: string\r\n  startedTimeStamp: number\r\n  fulfilledTimeStamp?: number\r\n}\r\n\r\nexport type MutationSubState<D extends BaseEndpointDefinition<any, any, any>> =\r\n  | (({\r\n      status: QueryStatus.fulfilled\r\n    } & WithRequiredProp<\r\n      BaseMutationSubState<D>,\r\n      'data' | 'fulfilledTimeStamp'\r\n    >) & { error: undefined })\r\n  | (({\r\n      status: QueryStatus.pending\r\n    } & BaseMutationSubState<D>) & { data?: undefined })\r\n  | ({\r\n      status: QueryStatus.rejected\r\n    } & WithRequiredProp<BaseMutationSubState<D>, 'error'>)\r\n  | {\r\n      requestId?: undefined\r\n      status: QueryStatus.uninitialized\r\n      data?: undefined\r\n      error?: undefined\r\n      endpointName?: string\r\n      startedTimeStamp?: undefined\r\n      fulfilledTimeStamp?: undefined\r\n    }\r\n\r\nexport type CombinedState<\r\n  D extends EndpointDefinitions,\r\n  E extends string,\r\n  ReducerPath extends string\r\n> = {\r\n  queries: QueryState<D>\r\n  mutations: MutationState<D>\r\n  provided: InvalidationState<E>\r\n  subscriptions: SubscriptionState\r\n  config: ConfigState<ReducerPath>\r\n}\r\n\r\nexport type InvalidationState<TagTypes extends string> = {\r\n  [_ in TagTypes]: {\r\n    [id: string]: Array<QueryCacheKey>\r\n    [id: number]: Array<QueryCacheKey>\r\n  }\r\n}\r\n\r\nexport type QueryState<D extends EndpointDefinitions> = {\r\n  [queryCacheKey: string]: QuerySubState<D[string]> | undefined\r\n}\r\n\r\nexport type SubscriptionState = {\r\n  [queryCacheKey: string]: Subscribers | undefined\r\n}\r\n\r\nexport type ConfigState<ReducerPath> = RefetchConfigOptions & {\r\n  reducerPath: ReducerPath\r\n  online: boolean\r\n  focused: boolean\r\n  middlewareRegistered: boolean | 'conflict'\r\n} & ModifiableConfigState\r\n\r\nexport type ModifiableConfigState = {\r\n  keepUnusedDataFor: number\r\n} & RefetchConfigOptions\r\n\r\nexport type MutationState<D extends EndpointDefinitions> = {\r\n  [requestId: string]: MutationSubState<D[string]> | undefined\r\n}\r\n\r\nexport type RootState<\r\n  Definitions extends EndpointDefinitions,\r\n  TagTypes extends string,\r\n  ReducerPath extends string\r\n> = {\r\n  [P in ReducerPath]: CombinedState<Definitions, TagTypes, P>\r\n}\r\n", "/**\r\n * If either :// or // is present consider it to be an absolute url\r\n *\r\n * @param url string\r\n */\r\n\r\nexport function isAbsoluteUrl(url: string) {\r\n  return new RegExp(`(^|:)//`).test(url)\r\n}\r\n", "import { isAbsoluteUrl } from './isAbsoluteUrl'\r\n\r\nconst withoutTrailingSlash = (url: string) => url.replace(/\\/$/, '')\r\nconst withoutLeadingSlash = (url: string) => url.replace(/^\\//, '')\r\n\r\nexport function joinUrls(\r\n  base: string | undefined,\r\n  url: string | undefined\r\n): string {\r\n  if (!base) {\r\n    return url!\r\n  }\r\n  if (!url) {\r\n    return base\r\n  }\r\n\r\n  if (isAbsoluteUrl(url)) {\r\n    return url\r\n  }\r\n\r\n  const delimiter = base.endsWith('/') || !url.startsWith('?') ? '/' : ''\r\n  base = withoutTrailingSlash(base)\r\n  url = withoutLeadingSlash(url)\r\n\r\n  return `${base}${delimiter}${url}`;\r\n}\r\n", "/**\r\n * Alternative to `Array.flat(1)`\r\n * @param arr An array like [1,2,3,[1,2]]\r\n * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\r\n */\r\nexport const flatten = (arr: readonly any[]) => [].concat(...arr)\r\n", "/**\r\n * Assumes a browser is online if `undefined`, otherwise makes a best effort\r\n * @link https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine/onLine\r\n */\r\nexport function isOnline() {\r\n  // We set the default config value in the store, so we'd need to check for this in a SSR env\r\n  return typeof navigator === 'undefined'\r\n    ? true\r\n    : navigator.onLine === undefined\r\n    ? true\r\n    : navigator.onLine\r\n}\r\n", "/**\r\n * Assumes true for a non-browser env, otherwise makes a best effort\r\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState\r\n */\r\nexport function isDocumentVisible(): boolean {\r\n  // `document` may not exist in non-browser envs (like RN)\r\n  if (typeof document === 'undefined') {\r\n    return true\r\n  }\r\n  // Match true for visible, prerender, undefined\r\n  return document.visibilityState !== 'hidden'\r\n}\r\n", "import { isPlainObject as _iPO } from '@reduxjs/toolkit'\r\n\r\n// remove type guard\r\nconst isPlainObject: (_: any) => boolean = _iPO\r\n\r\nexport function copyWithStructuralSharing<T>(oldObj: any, newObj: T): T\r\nexport function copyWithStructuralSharing(oldObj: any, newObj: any): any {\r\n  if (\r\n    oldObj === newObj ||\r\n    !(\r\n      (isPlainObject(oldObj) && isPlainObject(newObj)) ||\r\n      (Array.isArray(oldObj) && Array.isArray(newObj))\r\n    )\r\n  ) {\r\n    return newObj\r\n  }\r\n  const newKeys = Object.keys(newObj)\r\n  const oldKeys = Object.keys(oldObj)\r\n\r\n  let isSameObject = newKeys.length === oldKeys.length\r\n  const mergeObj: any = Array.isArray(newObj) ? [] : {}\r\n  for (const key of newKeys) {\r\n    mergeObj[key] = copyWithStructuralSharing(oldObj[key], newObj[key])\r\n    if (isSameObject) isSameObject = oldObj[key] === mergeObj[key]\r\n  }\r\n  return isSameObject ? oldObj : mergeObj\r\n}\r\n", "import { joinUrls } from './utils'\r\nimport { isPlainObject } from '@reduxjs/toolkit'\r\nimport type { BaseQueryApi, BaseQueryFn } from './baseQueryTypes'\r\nimport type { MaybePromise, Override } from './tsHelpers'\r\n\r\nexport type ResponseHandler =\r\n  | 'content-type'\r\n  | 'json'\r\n  | 'text'\r\n  | ((response: Response) => Promise<any>)\r\n\r\ntype CustomRequestInit = Override<\r\n  RequestInit,\r\n  {\r\n    headers?:\r\n      | Headers\r\n      | string[][]\r\n      | Record<string, string | undefined>\r\n      | undefined\r\n  }\r\n>\r\n\r\nexport interface FetchArgs extends CustomRequestInit {\r\n  url: string\r\n  params?: Record<string, any>\r\n  body?: any\r\n  responseHandler?: ResponseHandler\r\n  validateStatus?: (response: Response, body: any) => boolean\r\n  /**\r\n   * A number in milliseconds that represents that maximum time a request can take before timing out.\r\n   */\r\n  timeout?: number\r\n}\r\n\r\n/**\r\n * A mini-wrapper that passes arguments straight through to\r\n * {@link [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)}.\r\n * Avoids storing `fetch` in a closure, in order to permit mocking/monkey-patching.\r\n */\r\nconst defaultFetchFn: typeof fetch = (...args) => fetch(...args)\r\n\r\nconst defaultValidateStatus = (response: Response) =>\r\n  response.status >= 200 && response.status <= 299\r\n\r\nconst defaultIsJsonContentType = (headers: Headers) =>\r\n  /*applicat*/ /ion\\/(vnd\\.api\\+)?json/.test(headers.get('content-type') || '')\r\n\r\nexport type FetchBaseQueryError =\r\n  | {\r\n      /**\r\n       * * `number`:\r\n       *   HTTP status code\r\n       */\r\n      status: number\r\n      data: unknown\r\n    }\r\n  | {\r\n      /**\r\n       * * `\"FETCH_ERROR\"`:\r\n       *   An error that occurred during execution of `fetch` or the `fetchFn` callback option\r\n       **/\r\n      status: 'FETCH_ERROR'\r\n      data?: undefined\r\n      error: string\r\n    }\r\n  | {\r\n      /**\r\n       * * `\"PARSING_ERROR\"`:\r\n       *   An error happened during parsing.\r\n       *   Most likely a non-JSON-response was returned with the default `responseHandler` \"JSON\",\r\n       *   or an error occurred while executing a custom `responseHandler`.\r\n       **/\r\n      status: 'PARSING_ERROR'\r\n      originalStatus: number\r\n      data: string\r\n      error: string\r\n    }\r\n  | {\r\n      /**\r\n       * * `\"TIMEOUT_ERROR\"`:\r\n       *   Request timed out\r\n       **/\r\n      status: 'TIMEOUT_ERROR'\r\n      data?: undefined\r\n      error: string\r\n    }\r\n  | {\r\n      /**\r\n       * * `\"CUSTOM_ERROR\"`:\r\n       *   A custom error type that you can return from your `queryFn` where another error might not make sense.\r\n       **/\r\n      status: 'CUSTOM_ERROR'\r\n      data?: unknown\r\n      error: string\r\n    }\r\n\r\nfunction stripUndefined(obj: any) {\r\n  if (!isPlainObject(obj)) {\r\n    return obj\r\n  }\r\n  const copy: Record<string, any> = { ...obj }\r\n  for (const [k, v] of Object.entries(copy)) {\r\n    if (v === undefined) delete copy[k]\r\n  }\r\n  return copy\r\n}\r\n\r\nexport type FetchBaseQueryArgs = {\r\n  baseUrl?: string\r\n  prepareHeaders?: (\r\n    headers: Headers,\r\n    api: Pick<\r\n      BaseQueryApi,\r\n      'getState' | 'extra' | 'endpoint' | 'type' | 'forced'\r\n    >\r\n  ) => MaybePromise<Headers | void>\r\n  fetchFn?: (\r\n    input: RequestInfo,\r\n    init?: RequestInit | undefined\r\n  ) => Promise<Response>\r\n  paramsSerializer?: (params: Record<string, any>) => string\r\n  /**\r\n   * By default, we only check for 'application/json' and 'application/vnd.api+json' as the content-types for json. If you need to support another format, you can pass\r\n   * in a predicate function for your given api to get the same automatic stringifying behavior\r\n   * @example\r\n   * ```ts\r\n   * const isJsonContentType = (headers: Headers) => [\"application/vnd.api+json\", \"application/json\", \"application/vnd.hal+json\"].includes(headers.get(\"content-type\")?.trim());\r\n   * ```\r\n   */\r\n  isJsonContentType?: (headers: Headers) => boolean\r\n  /**\r\n   * Defaults to `application/json`;\r\n   */\r\n  jsonContentType?: string\r\n\r\n  /**\r\n   * Custom replacer function used when calling `JSON.stringify()`;\r\n   */\r\n  jsonReplacer?: (this: any, key: string, value: any) => any\r\n} & RequestInit &\r\n  Pick<FetchArgs, 'responseHandler' | 'validateStatus' | 'timeout'>\r\n\r\nexport type FetchBaseQueryMeta = { request: Request; response?: Response }\r\n\r\n/**\r\n * This is a very small wrapper around fetch that aims to simplify requests.\r\n *\r\n * @example\r\n * ```ts\r\n * const baseQuery = fetchBaseQuery({\r\n *   baseUrl: 'https://api.your-really-great-app.com/v1/',\r\n *   prepareHeaders: (headers, { getState }) => {\r\n *     const token = (getState() as RootState).auth.token;\r\n *     // If we have a token set in state, let's assume that we should be passing it.\r\n *     if (token) {\r\n *       headers.set('authorization', `Bearer ${token}`);\r\n *     }\r\n *     return headers;\r\n *   },\r\n * })\r\n * ```\r\n *\r\n * @param {string} baseUrl\r\n * The base URL for an API service.\r\n * Typically in the format of https://example.com/\r\n *\r\n * @param {(headers: Headers, api: { getState: () => unknown; extra: unknown; endpoint: string; type: 'query' | 'mutation'; forced: boolean; }) => Headers} prepareHeaders\r\n * An optional function that can be used to inject headers on requests.\r\n * Provides a Headers object, as well as most of the `BaseQueryApi` (`dispatch` is not available).\r\n * Useful for setting authentication or headers that need to be set conditionally.\r\n *\r\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Headers\r\n *\r\n * @param {(input: RequestInfo, init?: RequestInit | undefined) => Promise<Response>} fetchFn\r\n * Accepts a custom `fetch` function if you do not want to use the default on the window.\r\n * Useful in SSR environments if you need to use a library such as `isomorphic-fetch` or `cross-fetch`\r\n *\r\n * @param {(params: Record<string, unknown>) => string} paramsSerializer\r\n * An optional function that can be used to stringify querystring parameters.\r\n *\r\n * @param {(headers: Headers) => boolean} isJsonContentType\r\n * An optional predicate function to determine if `JSON.stringify()` should be called on the `body` arg of `FetchArgs`\r\n *\r\n * @param {string} jsonContentType Used when automatically setting the content-type header for a request with a jsonifiable body that does not have an explicit content-type header. Defaults to `application/json`.\r\n *\r\n * @param {(this: any, key: string, value: any) => any} jsonReplacer Custom replacer function used when calling `JSON.stringify()`.\r\n *\r\n * @param {number} timeout\r\n * A number in milliseconds that represents the maximum time a request can take before timing out.\r\n */\r\nexport function fetchBaseQuery({\r\n  baseUrl,\r\n  prepareHeaders = (x) => x,\r\n  fetchFn = defaultFetchFn,\r\n  paramsSerializer,\r\n  isJsonContentType = defaultIsJsonContentType,\r\n  jsonContentType = 'application/json',\r\n  jsonReplacer,\r\n  timeout: defaultTimeout,\r\n  responseHandler: globalResponseHandler,\r\n  validateStatus: globalValidateStatus,\r\n  ...baseFetchOptions\r\n}: FetchBaseQueryArgs = {}): BaseQueryFn<\r\n  string | FetchArgs,\r\n  unknown,\r\n  FetchBaseQueryError,\r\n  {},\r\n  FetchBaseQueryMeta\r\n> {\r\n  if (typeof fetch === 'undefined' && fetchFn === defaultFetchFn) {\r\n    console.warn(\r\n      'Warning: `fetch` is not available. Please supply a custom `fetchFn` property to use `fetchBaseQuery` on SSR environments.'\r\n    )\r\n  }\r\n  return async (arg, api) => {\r\n    const { signal, getState, extra, endpoint, forced, type } = api\r\n    let meta: FetchBaseQueryMeta | undefined\r\n    let {\r\n      url,\r\n      headers = new Headers(baseFetchOptions.headers),\r\n      params = undefined,\r\n      responseHandler = globalResponseHandler ?? ('json' as const),\r\n      validateStatus = globalValidateStatus ?? defaultValidateStatus,\r\n      timeout = defaultTimeout,\r\n      ...rest\r\n    } = typeof arg == 'string' ? { url: arg } : arg\r\n    let config: RequestInit = {\r\n      ...baseFetchOptions,\r\n      signal,\r\n      ...rest,\r\n    }\r\n\r\n    headers = new Headers(stripUndefined(headers))\r\n    config.headers =\r\n      (await prepareHeaders(headers, {\r\n        getState,\r\n        extra,\r\n        endpoint,\r\n        forced,\r\n        type,\r\n      })) || headers\r\n\r\n    // Only set the content-type to json if appropriate. Will not be true for FormData, ArrayBuffer, Blob, etc.\r\n    const isJsonifiable = (body: any) =>\r\n      typeof body === 'object' &&\r\n      (isPlainObject(body) ||\r\n        Array.isArray(body) ||\r\n        typeof body.toJSON === 'function')\r\n\r\n    if (!config.headers.has('content-type') && isJsonifiable(config.body)) {\r\n      config.headers.set('content-type', jsonContentType)\r\n    }\r\n\r\n    if (isJsonifiable(config.body) && isJsonContentType(config.headers)) {\r\n      config.body = JSON.stringify(config.body, jsonReplacer)\r\n    }\r\n\r\n    if (params) {\r\n      const divider = ~url.indexOf('?') ? '&' : '?'\r\n      const query = paramsSerializer\r\n        ? paramsSerializer(params)\r\n        : new URLSearchParams(stripUndefined(params))\r\n      url += divider + query\r\n    }\r\n\r\n    url = joinUrls(baseUrl, url)\r\n\r\n    const request = new Request(url, config)\r\n    const requestClone = new Request(url, config)\r\n    meta = { request: requestClone }\r\n\r\n    let response,\r\n      timedOut = false,\r\n      timeoutId =\r\n        timeout &&\r\n        setTimeout(() => {\r\n          timedOut = true\r\n          api.abort()\r\n        }, timeout)\r\n    try {\r\n      response = await fetchFn(request)\r\n    } catch (e) {\r\n      return {\r\n        error: {\r\n          status: timedOut ? 'TIMEOUT_ERROR' : 'FETCH_ERROR',\r\n          error: String(e),\r\n        },\r\n        meta,\r\n      }\r\n    } finally {\r\n      if (timeoutId) clearTimeout(timeoutId)\r\n    }\r\n    const responseClone = response.clone()\r\n\r\n    meta.response = responseClone\r\n\r\n    let resultData: any\r\n    let responseText: string = ''\r\n    try {\r\n      let handleResponseError\r\n      await Promise.all([\r\n        handleResponse(response, responseHandler).then(\r\n          (r) => (resultData = r),\r\n          (e) => (handleResponseError = e)\r\n        ),\r\n        // see https://github.com/node-fetch/node-fetch/issues/665#issuecomment-538995182\r\n        // we *have* to \"use up\" both streams at the same time or they will stop running in node-fetch scenarios\r\n        responseClone.text().then(\r\n          (r) => (responseText = r),\r\n          () => {}\r\n        ),\r\n      ])\r\n      if (handleResponseError) throw handleResponseError\r\n    } catch (e) {\r\n      return {\r\n        error: {\r\n          status: 'PARSING_ERROR',\r\n          originalStatus: response.status,\r\n          data: responseText,\r\n          error: String(e),\r\n        },\r\n        meta,\r\n      }\r\n    }\r\n\r\n    return validateStatus(response, resultData)\r\n      ? {\r\n          data: resultData,\r\n          meta,\r\n        }\r\n      : {\r\n          error: {\r\n            status: response.status,\r\n            data: resultData,\r\n          },\r\n          meta,\r\n        }\r\n  }\r\n\r\n  async function handleResponse(\r\n    response: Response,\r\n    responseHandler: ResponseHandler\r\n  ) {\r\n    if (typeof responseHandler === 'function') {\r\n      return responseHandler(response)\r\n    }\r\n\r\n    if (responseHandler === 'content-type') {\r\n      responseHandler = isJsonContentType(response.headers) ? 'json' : 'text'\r\n    }\r\n\r\n    if (responseHandler === 'json') {\r\n      const text = await response.text()\r\n      return text.length ? JSON.parse(text) : null\r\n    }\r\n\r\n    return response.text()\r\n  }\r\n}\r\n", "export class HandledError {\r\n  constructor(\r\n    public readonly value: any,\r\n    public readonly meta: any = undefined\r\n  ) {}\r\n}\r\n", "import type {\r\n  BaseQueryApi,\r\n  BaseQueryArg,\r\n  BaseQueryEnhancer,\r\n  BaseQueryExtraOptions,\r\n  BaseQueryFn,\r\n} from './baseQueryTypes'\r\nimport type { FetchBaseQueryError } from './fetchBaseQuery'\r\nimport { HandledError } from './HandledError'\r\n\r\n/**\r\n * Exponential backoff based on the attempt number.\r\n *\r\n * @remarks\r\n * 1. 600ms * random(0.4, 1.4)\r\n * 2. 1200ms * random(0.4, 1.4)\r\n * 3. 2400ms * random(0.4, 1.4)\r\n * 4. 4800ms * random(0.4, 1.4)\r\n * 5. 9600ms * random(0.4, 1.4)\r\n *\r\n * @param attempt - Current attempt\r\n * @param maxRetries - Maximum number of retries\r\n */\r\nasync function defaultBackoff(attempt: number = 0, maxRetries: number = 5) {\r\n  const attempts = Math.min(attempt, maxRetries)\r\n\r\n  const timeout = ~~((Math.random() + 0.4) * (300 << attempts)) // Force a positive int in the case we make this an option\r\n  await new Promise((resolve) =>\r\n    setTimeout((res: any) => resolve(res), timeout)\r\n  )\r\n}\r\n\r\ntype RetryConditionFunction = (\r\n  error: FetchBaseQueryError,\r\n  args: BaseQueryArg<BaseQueryFn>,\r\n  extraArgs: {\r\n    attempt: number\r\n    baseQueryApi: BaseQueryApi\r\n    extraOptions: BaseQueryExtraOptions<BaseQueryFn> & RetryOptions\r\n  }\r\n) => boolean\r\n\r\nexport type RetryOptions = {\r\n  /**\r\n   * Function used to determine delay between retries\r\n   */\r\n  backoff?: (attempt: number, maxRetries: number) => Promise<void>\r\n} & (\r\n  | {\r\n      /**\r\n       * How many times the query will be retried (default: 5)\r\n       */\r\n      maxRetries?: number\r\n      retryCondition?: undefined\r\n    }\r\n  | {\r\n      /**\r\n       * Callback to determine if a retry should be attempted.\r\n       * Return `true` for another retry and `false` to quit trying prematurely.\r\n       */\r\n      retryCondition?: RetryConditionFunction\r\n      maxRetries?: undefined\r\n    }\r\n)\r\n\r\nfunction fail(e: any): never {\r\n  throw Object.assign(new HandledError({ error: e }), {\r\n    throwImmediately: true,\r\n  })\r\n}\r\n\r\nconst EMPTY_OPTIONS = {}\r\n\r\nconst retryWithBackoff: BaseQueryEnhancer<\r\n  unknown,\r\n  RetryOptions,\r\n  RetryOptions | void\r\n> = (baseQuery, defaultOptions) => async (args, api, extraOptions) => {\r\n  // We need to figure out `maxRetries` before we define `defaultRetryCondition.\r\n  // This is probably goofy, but ought to work.\r\n  // Put our defaults in one array, filter out undefineds, grab the last value.\r\n  const possibleMaxRetries: number[] = [\r\n    5,\r\n    ((defaultOptions as any) || EMPTY_OPTIONS).maxRetries,\r\n    ((extraOptions as any) || EMPTY_OPTIONS).maxRetries,\r\n  ].filter(x => x !== undefined)\r\n  const [maxRetries] = possibleMaxRetries.slice(-1)\r\n\r\n  const defaultRetryCondition: RetryConditionFunction = (_, __, { attempt }) =>\r\n    attempt <= maxRetries\r\n\r\n  const options: {\r\n    maxRetries: number\r\n    backoff: typeof defaultBackoff\r\n    retryCondition: typeof defaultRetryCondition\r\n  } = {\r\n    maxRetries,\r\n    backoff: defaultBackoff,\r\n    retryCondition: defaultRetryCondition,\r\n    ...defaultOptions,\r\n    ...extraOptions,\r\n  }\r\n  let retry = 0\r\n\r\n  while (true) {\r\n    try {\r\n      const result = await baseQuery(args, api, extraOptions)\r\n      // baseQueries _should_ return an error property, so we should check for that and throw it to continue retrying\r\n      if (result.error) {\r\n        throw new HandledError(result)\r\n      }\r\n      return result\r\n    } catch (e: any) {\r\n      retry++\r\n\r\n      if (e.throwImmediately) {\r\n        if (e instanceof HandledError) {\r\n          return e.value\r\n        }\r\n\r\n        // We don't know what this is, so we have to rethrow it\r\n        throw e\r\n      }\r\n\r\n      if (\r\n        e instanceof HandledError &&\r\n        !options.retryCondition(e.value.error as FetchBaseQueryError, args, {\r\n          attempt: retry,\r\n          baseQueryApi: api,\r\n          extraOptions,\r\n        })\r\n      ) {\r\n        return e.value\r\n      }\r\n      await options.backoff(retry, options.maxRetries)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * A utility that can wrap `baseQuery` in the API definition to provide retries with a basic exponential backoff.\r\n *\r\n * @example\r\n *\r\n * ```ts\r\n * // codeblock-meta title=\"Retry every request 5 times by default\"\r\n * import { createApi, fetchBaseQuery, retry } from '@reduxjs/toolkit/query/react'\r\n * interface Post {\r\n *   id: number\r\n *   name: string\r\n * }\r\n * type PostsResponse = Post[]\r\n *\r\n * // maxRetries: 5 is the default, and can be omitted. Shown for documentation purposes.\r\n * const staggeredBaseQuery = retry(fetchBaseQuery({ baseUrl: '/' }), { maxRetries: 5 });\r\n * export const api = createApi({\r\n *   baseQuery: staggeredBaseQuery,\r\n *   endpoints: (build) => ({\r\n *     getPosts: build.query<PostsResponse, void>({\r\n *       query: () => ({ url: 'posts' }),\r\n *     }),\r\n *     getPost: build.query<PostsResponse, string>({\r\n *       query: (id) => ({ url: `post/${id}` }),\r\n *       extraOptions: { maxRetries: 8 }, // You can override the retry behavior on each endpoint\r\n *     }),\r\n *   }),\r\n * });\r\n *\r\n * export const { useGetPostsQuery, useGetPostQuery } = api;\r\n * ```\r\n */\r\nexport const retry = /* @__PURE__ */ Object.assign(retryWithBackoff, { fail })\r\n", "import type {\r\n  ThunkDispatch,\r\n  ActionCreatorWithoutPayload, // Workaround for API-Extractor\r\n} from '@reduxjs/toolkit'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const onFocus = /* @__PURE__ */ createAction('__rtkq/focused')\r\nexport const onFocusLost = /* @__PURE__ */ createAction('__rtkq/unfocused')\r\nexport const onOnline = /* @__PURE__ */ createAction('__rtkq/online')\r\nexport const onOffline = /* @__PURE__ */ createAction('__rtkq/offline')\r\n\r\nlet initialized = false\r\n\r\n/**\r\n * A utility used to enable `refetchOnMount` and `refetchOnReconnect` behaviors.\r\n * It requires the dispatch method from your store.\r\n * Calling `setupListeners(store.dispatch)` will configure listeners with the recommended defaults,\r\n * but you have the option of providing a callback for more granular control.\r\n *\r\n * @example\r\n * ```ts\r\n * setupListeners(store.dispatch)\r\n * ```\r\n *\r\n * @param dispatch - The dispatch method from your store\r\n * @param customHandler - An optional callback for more granular control over listener behavior\r\n * @returns Return value of the handler.\r\n * The default handler returns an `unsubscribe` method that can be called to remove the listeners.\r\n */\r\nexport function setupListeners(\r\n  dispatch: ThunkDispatch<any, any, any>,\r\n  customHandler?: (\r\n    dispatch: ThunkDispatch<any, any, any>,\r\n    actions: {\r\n      onFocus: typeof onFocus\r\n      onFocusLost: typeof onFocusLost\r\n      onOnline: typeof onOnline\r\n      onOffline: typeof onOffline\r\n    }\r\n  ) => () => void\r\n) {\r\n  function defaultHandler() {\r\n    const handleFocus = () => dispatch(onFocus())\r\n    const handleFocusLost = () => dispatch(onFocusLost())\r\n    const handleOnline = () => dispatch(onOnline())\r\n    const handleOffline = () => dispatch(onOffline())\r\n    const handleVisibilityChange = () => {\r\n      if (window.document.visibilityState === 'visible') {\r\n        handleFocus()\r\n      } else {\r\n        handleFocusLost()\r\n      }\r\n    }\r\n\r\n    if (!initialized) {\r\n      if (typeof window !== 'undefined' && window.addEventListener) {\r\n        // Handle focus events\r\n        window.addEventListener(\r\n          'visibilitychange',\r\n          handleVisibilityChange,\r\n          false\r\n        )\r\n        window.addEventListener('focus', handleFocus, false)\r\n\r\n        // Handle connection events\r\n        window.addEventListener('online', handleOnline, false)\r\n        window.addEventListener('offline', handleOffline, false)\r\n        initialized = true\r\n      }\r\n    }\r\n    const unsubscribe = () => {\r\n      window.removeEventListener('focus', handleFocus)\r\n      window.removeEventListener('visibilitychange', handleVisibilityChange)\r\n      window.removeEventListener('online', handleOnline)\r\n      window.removeEventListener('offline', handleOffline)\r\n      initialized = false\r\n    }\r\n    return unsubscribe\r\n  }\r\n\r\n  return customHandler\r\n    ? customHandler(dispatch, { onFocus, onFocusLost, onOffline, onOnline })\r\n    : defaultHandler()\r\n}\r\n", "import { createNextState, createSelector } from '@reduxjs/toolkit'\r\nimport type {\r\n  MutationSubState,\r\n  QuerySubState,\r\n  RootState as _RootState,\r\n  RequestStatusFlags,\r\n  QueryCacheKey,\r\n} from './apiState'\r\nimport { QueryStatus, getRequestStatusFlags } from './apiState'\r\nimport type {\r\n  EndpointDefinitions,\r\n  QueryDefinition,\r\n  MutationDefinition,\r\n  QueryArgFrom,\r\n  TagTypesFrom,\r\n  ReducerPathFrom,\r\n  TagDescription,\r\n} from '../endpointDefinitions'\r\nimport { expandTagDescription } from '../endpointDefinitions'\r\nimport type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs'\r\nimport { getMutationCacheKey } from './buildSlice'\r\nimport { flatten } from '../utils'\r\n\r\nexport type SkipToken = typeof skipToken\r\n/**\r\n * Can be passed into `useQuery`, `useQueryState` or `useQuerySubscription`\r\n * instead of the query argument to get the same effect as if setting\r\n * `skip: true` in the query options.\r\n *\r\n * Useful for scenarios where a query should be skipped when `arg` is `undefined`\r\n * and TypeScript complains about it because `arg` is not allowed to be passed\r\n * in as `undefined`, such as\r\n *\r\n * ```ts\r\n * // codeblock-meta title=\"will error if the query argument is not allowed to be undefined\" no-transpile\r\n * useSomeQuery(arg, { skip: !!arg })\r\n * ```\r\n *\r\n * ```ts\r\n * // codeblock-meta title=\"using skipToken instead\" no-transpile\r\n * useSomeQuery(arg ?? skipToken)\r\n * ```\r\n *\r\n * If passed directly into a query or mutation selector, that selector will always\r\n * return an uninitialized state.\r\n */\r\nexport const skipToken = /* @__PURE__ */ Symbol.for('RTKQ/skipToken')\r\n/** @deprecated renamed to `skipToken` */\r\nexport const skipSelector = skipToken\r\n\r\ndeclare module './module' {\r\n  export interface ApiEndpointQuery<\r\n    Definition extends QueryDefinition<any, any, any, any, any>,\r\n    Definitions extends EndpointDefinitions\r\n  > {\r\n    select: QueryResultSelectorFactory<\r\n      Definition,\r\n      _RootState<\r\n        Definitions,\r\n        TagTypesFrom<Definition>,\r\n        ReducerPathFrom<Definition>\r\n      >\r\n    >\r\n  }\r\n\r\n  export interface ApiEndpointMutation<\r\n    Definition extends MutationDefinition<any, any, any, any, any>,\r\n    Definitions extends EndpointDefinitions\r\n  > {\r\n    select: MutationResultSelectorFactory<\r\n      Definition,\r\n      _RootState<\r\n        Definitions,\r\n        TagTypesFrom<Definition>,\r\n        ReducerPathFrom<Definition>\r\n      >\r\n    >\r\n  }\r\n}\r\n\r\ntype QueryResultSelectorFactory<\r\n  Definition extends QueryDefinition<any, any, any, any>,\r\n  RootState\r\n> = (\r\n  queryArg: QueryArgFrom<Definition> | SkipToken\r\n) => (state: RootState) => QueryResultSelectorResult<Definition>\r\n\r\nexport type QueryResultSelectorResult<\r\n  Definition extends QueryDefinition<any, any, any, any>\r\n> = QuerySubState<Definition> & RequestStatusFlags\r\n\r\ntype MutationResultSelectorFactory<\r\n  Definition extends MutationDefinition<any, any, any, any>,\r\n  RootState\r\n> = (\r\n  requestId:\r\n    | string\r\n    | { requestId: string | undefined; fixedCacheKey: string | undefined }\r\n    | SkipToken\r\n) => (state: RootState) => MutationResultSelectorResult<Definition>\r\n\r\nexport type MutationResultSelectorResult<\r\n  Definition extends MutationDefinition<any, any, any, any>\r\n> = MutationSubState<Definition> & RequestStatusFlags\r\n\r\nconst initialSubState: QuerySubState<any> = {\r\n  status: QueryStatus.uninitialized as const,\r\n}\r\n\r\n// abuse immer to freeze default states\r\nconst defaultQuerySubState = /* @__PURE__ */ createNextState(\r\n  initialSubState,\r\n  () => {}\r\n)\r\nconst defaultMutationSubState = /* @__PURE__ */ createNextState(\r\n  initialSubState as MutationSubState<any>,\r\n  () => {}\r\n)\r\n\r\nexport function buildSelectors<\r\n  Definitions extends EndpointDefinitions,\r\n  ReducerPath extends string\r\n>({\r\n  serializeQueryArgs,\r\n  reducerPath,\r\n}: {\r\n  serializeQueryArgs: InternalSerializeQueryArgs\r\n  reducerPath: ReducerPath\r\n}) {\r\n  type RootState = _RootState<Definitions, string, string>\r\n\r\n  const selectSkippedQuery = (state: RootState) => defaultQuerySubState\r\n  const selectSkippedMutation = (state: RootState) => defaultMutationSubState\r\n\r\n  return { buildQuerySelector, buildMutationSelector, selectInvalidatedBy }\r\n\r\n  function withRequestFlags<T extends { status: QueryStatus }>(\r\n    substate: T\r\n  ): T & RequestStatusFlags {\r\n    return {\r\n      ...substate,\r\n      ...getRequestStatusFlags(substate.status),\r\n    }\r\n  }\r\n\r\n  function selectInternalState(rootState: RootState) {\r\n    const state = rootState[reducerPath]\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (!state) {\r\n        if ((selectInternalState as any).triggered) return state\r\n        ;(selectInternalState as any).triggered = true\r\n        console.error(\r\n          `Error: No data found at \\`state.${reducerPath}\\`. Did you forget to add the reducer to the store?`\r\n        )\r\n      }\r\n    }\r\n    return state\r\n  }\r\n\r\n  function buildQuerySelector(\r\n    endpointName: string,\r\n    endpointDefinition: QueryDefinition<any, any, any, any>\r\n  ) {\r\n    return ((queryArgs: any) => {\r\n      const serializedArgs = serializeQueryArgs({\r\n        queryArgs,\r\n        endpointDefinition,\r\n        endpointName,\r\n      })\r\n      const selectQuerySubstate = (state: RootState) =>\r\n        selectInternalState(state)?.queries?.[serializedArgs] ??\r\n        defaultQuerySubState\r\n      const finalSelectQuerySubState =\r\n        queryArgs === skipToken ? selectSkippedQuery : selectQuerySubstate\r\n\r\n      return createSelector(finalSelectQuerySubState, withRequestFlags)\r\n    }) as QueryResultSelectorFactory<any, RootState>\r\n  }\r\n\r\n  function buildMutationSelector() {\r\n    return ((id) => {\r\n      let mutationId: string | typeof skipToken\r\n      if (typeof id === 'object') {\r\n        mutationId = getMutationCacheKey(id) ?? skipToken\r\n      } else {\r\n        mutationId = id\r\n      }\r\n      const selectMutationSubstate = (state: RootState) =>\r\n        selectInternalState(state)?.mutations?.[mutationId as string] ??\r\n        defaultMutationSubState\r\n      const finalSelectMutationSubstate =\r\n        mutationId === skipToken\r\n          ? selectSkippedMutation\r\n          : selectMutationSubstate\r\n\r\n      return createSelector(finalSelectMutationSubstate, withRequestFlags)\r\n    }) as MutationResultSelectorFactory<any, RootState>\r\n  }\r\n\r\n  function selectInvalidatedBy(\r\n    state: RootState,\r\n    tags: ReadonlyArray<TagDescription<string>>\r\n  ): Array<{\r\n    endpointName: string\r\n    originalArgs: any\r\n    queryCacheKey: QueryCacheKey\r\n  }> {\r\n    const apiState = state[reducerPath]\r\n    const toInvalidate = new Set<QueryCacheKey>()\r\n    for (const tag of tags.map(expandTagDescription)) {\r\n      const provided = apiState.provided[tag.type]\r\n      if (!provided) {\r\n        continue\r\n      }\r\n\r\n      let invalidateSubscriptions =\r\n        (tag.id !== undefined\r\n          ? // id given: invalidate all queries that provide this type & id\r\n            provided[tag.id]\r\n          : // no id: invalidate all queries that provide this type\r\n            flatten(Object.values(provided))) ?? []\r\n\r\n      for (const invalidate of invalidateSubscriptions) {\r\n        toInvalidate.add(invalidate)\r\n      }\r\n    }\r\n\r\n    return flatten(\r\n      Array.from(toInvalidate.values()).map((queryCacheKey) => {\r\n        const querySubState = apiState.queries[queryCacheKey]\r\n        return querySubState\r\n          ? [\r\n              {\r\n                queryCacheKey,\r\n                endpointName: querySubState.endpointName!,\r\n                originalArgs: querySubState.originalArgs,\r\n              },\r\n            ]\r\n          : []\r\n      })\r\n    )\r\n  }\r\n}\r\n", "import type { AnyAction, ThunkDispatch } from '@reduxjs/toolkit'\r\nimport type { SerializeQueryArgs } from './defaultSerializeQueryArgs'\r\nimport type { QuerySubState, RootState } from './core/apiState'\r\nimport type {\r\n  BaseQueryExtraOptions,\r\n  BaseQueryFn,\r\n  BaseQueryResult,\r\n  BaseQueryArg,\r\n  BaseQueryApi,\r\n  QueryReturnValue,\r\n  BaseQueryError,\r\n  BaseQueryMeta,\r\n} from './baseQueryTypes'\r\nimport type {\r\n  HasRequiredProps,\r\n  MaybePromise,\r\n  OmitFromUnion,\r\n  CastAny,\r\n  NonUndefined,\r\n  UnwrapPromise,\r\n} from './tsHelpers'\r\nimport type { NEVER } from './fakeBaseQuery'\r\nimport type { Api } from '@reduxjs/toolkit/query'\r\n\r\nconst resultType = /* @__PURE__ */ Symbol()\r\nconst baseQuery = /* @__PURE__ */ Symbol()\r\n\r\ninterface EndpointDefinitionWithQuery<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ResultType\r\n> {\r\n  /**\r\n   * `query` can be a function that returns either a `string` or an `object` which is passed to your `baseQuery`. If you are using [fetchBaseQuery](./fetchBaseQuery), this can return either a `string` or an `object` of properties in `FetchArgs`. If you use your own custom [`baseQuery`](../../rtk-query/usage/customizing-queries), you can customize this behavior to your liking.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"query example\"\r\n   *\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   * type PostsResponse = Post[]\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   tagTypes: ['Post'],\r\n   *   endpoints: (build) => ({\r\n   *     getPosts: build.query<PostsResponse, void>({\r\n   *       // highlight-start\r\n   *       query: () => 'posts',\r\n   *       // highlight-end\r\n   *     }),\r\n   *     addPost: build.mutation<Post, Partial<Post>>({\r\n   *      // highlight-start\r\n   *      query: (body) => ({\r\n   *        url: `posts`,\r\n   *        method: 'POST',\r\n   *        body,\r\n   *      }),\r\n   *      // highlight-end\r\n   *      invalidatesTags: [{ type: 'Post', id: 'LIST' }],\r\n   *    }),\r\n   *   })\r\n   * })\r\n   * ```\r\n   */\r\n  query(arg: QueryArg): BaseQueryArg<BaseQuery>\r\n  queryFn?: never\r\n  /**\r\n   * A function to manipulate the data returned by a query or mutation.\r\n   */\r\n  transformResponse?(\r\n    baseQueryReturnValue: BaseQueryResult<BaseQuery>,\r\n    meta: BaseQueryMeta<BaseQuery>,\r\n    arg: QueryArg\r\n  ): ResultType | Promise<ResultType>\r\n  /**\r\n   * A function to manipulate the data returned by a failed query or mutation.\r\n   */\r\n  transformErrorResponse?(\r\n    baseQueryReturnValue: BaseQueryError<BaseQuery>,\r\n    meta: BaseQueryMeta<BaseQuery>,\r\n    arg: QueryArg\r\n  ): unknown\r\n  /**\r\n   * Defaults to `true`.\r\n   *\r\n   * Most apps should leave this setting on. The only time it can be a performance issue\r\n   * is if an API returns extremely large amounts of data (e.g. 10,000 rows per request) and\r\n   * you're unable to paginate it.\r\n   *\r\n   * For details of how this works, please see the below. When it is set to `false`,\r\n   * every request will cause subscribed components to rerender, even when the data has not changed.\r\n   *\r\n   * @see https://redux-toolkit.js.org/api/other-exports#copywithstructuralsharing\r\n   */\r\n  structuralSharing?: boolean\r\n}\r\n\r\ninterface EndpointDefinitionWithQueryFn<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ResultType\r\n> {\r\n  /**\r\n   * Can be used in place of `query` as an inline function that bypasses `baseQuery` completely for the endpoint.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // codeblock-meta title=\"Basic queryFn example\"\r\n   *\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   * type PostsResponse = Post[]\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   endpoints: (build) => ({\r\n   *     getPosts: build.query<PostsResponse, void>({\r\n   *       query: () => 'posts',\r\n   *     }),\r\n   *     flipCoin: build.query<'heads' | 'tails', void>({\r\n   *       // highlight-start\r\n   *       queryFn(arg, queryApi, extraOptions, baseQuery) {\r\n   *         const randomVal = Math.random()\r\n   *         if (randomVal < 0.45) {\r\n   *           return { data: 'heads' }\r\n   *         }\r\n   *         if (randomVal < 0.9) {\r\n   *           return { data: 'tails' }\r\n   *         }\r\n   *         return { error: { status: 500, statusText: 'Internal Server Error', data: \"Coin landed on it's edge!\" } }\r\n   *       }\r\n   *       // highlight-end\r\n   *     })\r\n   *   })\r\n   * })\r\n   * ```\r\n   */\r\n  queryFn(\r\n    arg: QueryArg,\r\n    api: BaseQueryApi,\r\n    extraOptions: BaseQueryExtraOptions<BaseQuery>,\r\n    baseQuery: (arg: Parameters<BaseQuery>[0]) => ReturnType<BaseQuery>\r\n  ): MaybePromise<QueryReturnValue<ResultType, BaseQueryError<BaseQuery>>>\r\n  query?: never\r\n  transformResponse?: never\r\n  transformErrorResponse?: never\r\n  /**\r\n   * Defaults to `true`.\r\n   *\r\n   * Most apps should leave this setting on. The only time it can be a performance issue\r\n   * is if an API returns extremely large amounts of data (e.g. 10,000 rows per request) and\r\n   * you're unable to paginate it.\r\n   *\r\n   * For details of how this works, please see the below. When it is set to `false`,\r\n   * every request will cause subscribed components to rerender, even when the data has not changed.\r\n   *\r\n   * @see https://redux-toolkit.js.org/api/other-exports#copywithstructuralsharing\r\n   */\r\n  structuralSharing?: boolean\r\n}\r\n\r\nexport interface BaseEndpointTypes<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ResultType\r\n> {\r\n  QueryArg: QueryArg\r\n  BaseQuery: BaseQuery\r\n  ResultType: ResultType\r\n}\r\n\r\nexport type BaseEndpointDefinition<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ResultType\r\n> = (\r\n  | ([CastAny<BaseQueryResult<BaseQuery>, {}>] extends [NEVER]\r\n      ? never\r\n      : EndpointDefinitionWithQuery<QueryArg, BaseQuery, ResultType>)\r\n  | EndpointDefinitionWithQueryFn<QueryArg, BaseQuery, ResultType>\r\n) & {\r\n  /* phantom type */\r\n  [resultType]?: ResultType\r\n  /* phantom type */\r\n  [baseQuery]?: BaseQuery\r\n} & HasRequiredProps<\r\n    BaseQueryExtraOptions<BaseQuery>,\r\n    { extraOptions: BaseQueryExtraOptions<BaseQuery> },\r\n    { extraOptions?: BaseQueryExtraOptions<BaseQuery> }\r\n  >\r\n\r\nexport enum DefinitionType {\r\n  query = 'query',\r\n  mutation = 'mutation',\r\n}\r\n\r\nexport type GetResultDescriptionFn<\r\n  TagTypes extends string,\r\n  ResultType,\r\n  QueryArg,\r\n  ErrorType,\r\n  MetaType\r\n> = (\r\n  result: ResultType | undefined,\r\n  error: ErrorType | undefined,\r\n  arg: QueryArg,\r\n  meta: MetaType\r\n) => ReadonlyArray<TagDescription<TagTypes>>\r\n\r\nexport type FullTagDescription<TagType> = {\r\n  type: TagType\r\n  id?: number | string\r\n}\r\nexport type TagDescription<TagType> = TagType | FullTagDescription<TagType>\r\nexport type ResultDescription<\r\n  TagTypes extends string,\r\n  ResultType,\r\n  QueryArg,\r\n  ErrorType,\r\n  MetaType\r\n> =\r\n  | ReadonlyArray<TagDescription<TagTypes>>\r\n  | GetResultDescriptionFn<TagTypes, ResultType, QueryArg, ErrorType, MetaType>\r\n\r\n/** @deprecated please use `onQueryStarted` instead */\r\nexport interface QueryApi<ReducerPath extends string, Context extends {}> {\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  dispatch: ThunkDispatch<any, any, AnyAction>\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  getState(): RootState<any, any, ReducerPath>\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  extra: unknown\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  requestId: string\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  context: Context\r\n}\r\n\r\nexport interface QueryTypes<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> extends BaseEndpointTypes<QueryArg, BaseQuery, ResultType> {\r\n  /**\r\n   * The endpoint definition type. To be used with some internal generic types.\r\n   * @example\r\n   * ```ts\r\n   * const useMyWrappedHook: UseQuery<typeof api.endpoints.query.Types.QueryDefinition> = ...\r\n   * ```\r\n   */\r\n  QueryDefinition: QueryDefinition<\r\n    QueryArg,\r\n    BaseQuery,\r\n    TagTypes,\r\n    ResultType,\r\n    ReducerPath\r\n  >\r\n  TagTypes: TagTypes\r\n  ReducerPath: ReducerPath\r\n}\r\n\r\nexport interface QueryExtraOptions<\r\n  TagTypes extends string,\r\n  ResultType,\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ReducerPath extends string = string\r\n> {\r\n  type: DefinitionType.query\r\n  /**\r\n   * Used by `query` endpoints. Determines which 'tag' is attached to the cached data returned by the query.\r\n   * Expects an array of tag type strings, an array of objects of tag types with ids, or a function that returns such an array.\r\n   * 1.  `['Post']` - equivalent to `2`\r\n   * 2.  `[{ type: 'Post' }]` - equivalent to `1`\r\n   * 3.  `[{ type: 'Post', id: 1 }]`\r\n   * 4.  `(result, error, arg) => ['Post']` - equivalent to `5`\r\n   * 5.  `(result, error, arg) => [{ type: 'Post' }]` - equivalent to `4`\r\n   * 6.  `(result, error, arg) => [{ type: 'Post', id: 1 }]`\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"providesTags example\"\r\n   *\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   * type PostsResponse = Post[]\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   tagTypes: ['Posts'],\r\n   *   endpoints: (build) => ({\r\n   *     getPosts: build.query<PostsResponse, void>({\r\n   *       query: () => 'posts',\r\n   *       // highlight-start\r\n   *       providesTags: (result) =>\r\n   *         result\r\n   *           ? [\r\n   *               ...result.map(({ id }) => ({ type: 'Posts' as const, id })),\r\n   *               { type: 'Posts', id: 'LIST' },\r\n   *             ]\r\n   *           : [{ type: 'Posts', id: 'LIST' }],\r\n   *       // highlight-end\r\n   *     })\r\n   *   })\r\n   * })\r\n   * ```\r\n   */\r\n  providesTags?: ResultDescription<\r\n    TagTypes,\r\n    ResultType,\r\n    QueryArg,\r\n    BaseQueryError<BaseQuery>,\r\n    BaseQueryMeta<BaseQuery>\r\n  >\r\n  /**\r\n   * Not to be used. A query should not invalidate tags in the cache.\r\n   */\r\n  invalidatesTags?: never\r\n\r\n  /**\r\n   * Can be provided to return a custom cache key value based on the query arguments.\r\n   *\r\n   * This is primarily intended for cases where a non-serializable value is passed as part of the query arg object and should be excluded from the cache key.  It may also be used for cases where an endpoint should only have a single cache entry, such as an infinite loading / pagination implementation.\r\n   *\r\n   * Unlike the `createApi` version which can _only_ return a string, this per-endpoint option can also return an an object, number, or boolean.  If it returns a string, that value will be used as the cache key directly.  If it returns an object / number / boolean, that value will be passed to the built-in `defaultSerializeQueryArgs`.  This simplifies the use case of stripping out args you don't want included in the cache key.\r\n   *\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"serializeQueryArgs : exclude value\"\r\n   *\r\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   *\r\n   * interface MyApiClient {\r\n   *   fetchPost: (id: string) => Promise<Post>\r\n   * }\r\n   *\r\n   * createApi({\r\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *  endpoints: (build) => ({\r\n   *    // Example: an endpoint with an API client passed in as an argument,\r\n   *    // but only the item ID should be used as the cache key\r\n   *    getPost: build.query<Post, { id: string; client: MyApiClient }>({\r\n   *      queryFn: async ({ id, client }) => {\r\n   *        const post = await client.fetchPost(id)\r\n   *        return { data: post }\r\n   *      },\r\n   *      // highlight-start\r\n   *      serializeQueryArgs: ({ queryArgs, endpointDefinition, endpointName }) => {\r\n   *        const { id } = queryArgs\r\n   *        // This can return a string, an object, a number, or a boolean.\r\n   *        // If it returns an object, number or boolean, that value\r\n   *        // will be serialized automatically via `defaultSerializeQueryArgs`\r\n   *        return { id } // omit `client` from the cache key\r\n   *\r\n   *        // Alternately, you can use `defaultSerializeQueryArgs` yourself:\r\n   *        // return defaultSerializeQueryArgs({\r\n   *        //   endpointName,\r\n   *        //   queryArgs: { id },\r\n   *        //   endpointDefinition\r\n   *        // })\r\n   *        // Or  create and return a string yourself:\r\n   *        // return `getPost(${id})`\r\n   *      },\r\n   *      // highlight-end\r\n   *    }),\r\n   *  }),\r\n   *})\r\n   * ```\r\n   */\r\n  serializeQueryArgs?: SerializeQueryArgs<\r\n    QueryArg,\r\n    string | number | boolean | Record<any, any>\r\n  >\r\n\r\n  /**\r\n   * Can be provided to merge an incoming response value into the current cache data.\r\n   * If supplied, no automatic structural sharing will be applied - it's up to\r\n   * you to update the cache appropriately.\r\n   *\r\n   * Since RTKQ normally replaces cache entries with the new response, you will usually\r\n   * need to use this with the `serializeQueryArgs` or `forceRefetch` options to keep\r\n   * an existing cache entry so that it can be updated.\r\n   *\r\n   * Since this is wrapped with Immer, you may either mutate the `currentCacheValue` directly,\r\n   * or return a new value, but _not_ both at once.\r\n   *\r\n   * Will only be called if the existing `currentCacheData` is _not_ `undefined` - on first response,\r\n   * the cache entry will just save the response data directly.\r\n   *\r\n   * Useful if you don't want a new request to completely override the current cache value,\r\n   * maybe because you have manually updated it from another source and don't want those\r\n   * updates to get lost.\r\n   *\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"merge: pagination\"\r\n   *\r\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   *\r\n   * createApi({\r\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *  endpoints: (build) => ({\r\n   *    listItems: build.query<string[], number>({\r\n   *      query: (pageNumber) => `/listItems?page=${pageNumber}`,\r\n   *     // Only have one cache entry because the arg always maps to one string\r\n   *     serializeQueryArgs: ({ endpointName }) => {\r\n   *       return endpointName\r\n   *      },\r\n   *      // Always merge incoming data to the cache entry\r\n   *      merge: (currentCache, newItems) => {\r\n   *        currentCache.push(...newItems)\r\n   *      },\r\n   *      // Refetch when the page arg changes\r\n   *      forceRefetch({ currentArg, previousArg }) {\r\n   *        return currentArg !== previousArg\r\n   *      },\r\n   *    }),\r\n   *  }),\r\n   *})\r\n   * ```\r\n   */\r\n  merge?(\r\n    currentCacheData: ResultType,\r\n    responseData: ResultType,\r\n    otherArgs: {\r\n      arg: QueryArg\r\n      baseQueryMeta: BaseQueryMeta<BaseQuery>\r\n      requestId: string\r\n      fulfilledTimeStamp: number\r\n    }\r\n  ): ResultType | void\r\n\r\n  /**\r\n   * Check to see if the endpoint should force a refetch in cases where it normally wouldn't.\r\n   * This is primarily useful for \"infinite scroll\" / pagination use cases where\r\n   * RTKQ is keeping a single cache entry that is added to over time, in combination\r\n   * with `serializeQueryArgs` returning a fixed cache key and a `merge` callback\r\n   * set to add incoming data to the cache entry each time.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"forceRefresh: pagination\"\r\n   *\r\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   *\r\n   * createApi({\r\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *  endpoints: (build) => ({\r\n   *    listItems: build.query<string[], number>({\r\n   *      query: (pageNumber) => `/listItems?page=${pageNumber}`,\r\n   *     // Only have one cache entry because the arg always maps to one string\r\n   *     serializeQueryArgs: ({ endpointName }) => {\r\n   *       return endpointName\r\n   *      },\r\n   *      // Always merge incoming data to the cache entry\r\n   *      merge: (currentCache, newItems) => {\r\n   *        currentCache.push(...newItems)\r\n   *      },\r\n   *      // Refetch when the page arg changes\r\n   *      forceRefetch({ currentArg, previousArg }) {\r\n   *        return currentArg !== previousArg\r\n   *      },\r\n   *    }),\r\n   *  }),\r\n   *})\r\n   * ```\r\n   */\r\n  forceRefetch?(params: {\r\n    currentArg: QueryArg | undefined\r\n    previousArg: QueryArg | undefined\r\n    state: RootState<any, any, string>\r\n    endpointState?: QuerySubState<any>\r\n  }): boolean\r\n\r\n  /**\r\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\r\n   */\r\n  Types?: QueryTypes<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n}\r\n\r\nexport type QueryDefinition<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> = BaseEndpointDefinition<QueryArg, BaseQuery, ResultType> &\r\n  QueryExtraOptions<TagTypes, ResultType, QueryArg, BaseQuery, ReducerPath>\r\n\r\nexport interface MutationTypes<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> extends BaseEndpointTypes<QueryArg, BaseQuery, ResultType> {\r\n  /**\r\n   * The endpoint definition type. To be used with some internal generic types.\r\n   * @example\r\n   * ```ts\r\n   * const useMyWrappedHook: UseMutation<typeof api.endpoints.query.Types.MutationDefinition> = ...\r\n   * ```\r\n   */\r\n  MutationDefinition: MutationDefinition<\r\n    QueryArg,\r\n    BaseQuery,\r\n    TagTypes,\r\n    ResultType,\r\n    ReducerPath\r\n  >\r\n  TagTypes: TagTypes\r\n  ReducerPath: ReducerPath\r\n}\r\n\r\nexport interface MutationExtraOptions<\r\n  TagTypes extends string,\r\n  ResultType,\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ReducerPath extends string = string\r\n> {\r\n  type: DefinitionType.mutation\r\n  /**\r\n   * Used by `mutation` endpoints. Determines which cached data should be either re-fetched or removed from the cache.\r\n   * Expects the same shapes as `providesTags`.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"invalidatesTags example\"\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   * type PostsResponse = Post[]\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   tagTypes: ['Posts'],\r\n   *   endpoints: (build) => ({\r\n   *     getPosts: build.query<PostsResponse, void>({\r\n   *       query: () => 'posts',\r\n   *       providesTags: (result) =>\r\n   *         result\r\n   *           ? [\r\n   *               ...result.map(({ id }) => ({ type: 'Posts' as const, id })),\r\n   *               { type: 'Posts', id: 'LIST' },\r\n   *             ]\r\n   *           : [{ type: 'Posts', id: 'LIST' }],\r\n   *     }),\r\n   *     addPost: build.mutation<Post, Partial<Post>>({\r\n   *       query(body) {\r\n   *         return {\r\n   *           url: `posts`,\r\n   *           method: 'POST',\r\n   *           body,\r\n   *         }\r\n   *       },\r\n   *       // highlight-start\r\n   *       invalidatesTags: [{ type: 'Posts', id: 'LIST' }],\r\n   *       // highlight-end\r\n   *     }),\r\n   *   })\r\n   * })\r\n   * ```\r\n   */\r\n  invalidatesTags?: ResultDescription<\r\n    TagTypes,\r\n    ResultType,\r\n    QueryArg,\r\n    BaseQueryError<BaseQuery>,\r\n    BaseQueryMeta<BaseQuery>\r\n  >\r\n  /**\r\n   * Not to be used. A mutation should not provide tags to the cache.\r\n   */\r\n  providesTags?: never\r\n\r\n  /**\r\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\r\n   */\r\n  Types?: MutationTypes<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n}\r\n\r\nexport type MutationDefinition<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> = BaseEndpointDefinition<QueryArg, BaseQuery, ResultType> &\r\n  MutationExtraOptions<TagTypes, ResultType, QueryArg, BaseQuery, ReducerPath>\r\n\r\nexport type EndpointDefinition<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> =\r\n  | QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n  | MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n\r\nexport type EndpointDefinitions = Record<\r\n  string,\r\n  EndpointDefinition<any, any, any, any>\r\n>\r\n\r\nexport function isQueryDefinition(\r\n  e: EndpointDefinition<any, any, any, any>\r\n): e is QueryDefinition<any, any, any, any> {\r\n  return e.type === DefinitionType.query\r\n}\r\n\r\nexport function isMutationDefinition(\r\n  e: EndpointDefinition<any, any, any, any>\r\n): e is MutationDefinition<any, any, any, any> {\r\n  return e.type === DefinitionType.mutation\r\n}\r\n\r\nexport type EndpointBuilder<\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ReducerPath extends string\r\n> = {\r\n  /**\r\n   * An endpoint definition that retrieves data, and may provide tags to the cache.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // codeblock-meta title=\"Example of all query endpoint options\"\r\n   * const api = createApi({\r\n   *  baseQuery,\r\n   *  endpoints: (build) => ({\r\n   *    getPost: build.query({\r\n   *      query: (id) => ({ url: `post/${id}` }),\r\n   *      // Pick out data and prevent nested properties in a hook or selector\r\n   *      transformResponse: (response) => response.data,\r\n   *      // Pick out error and prevent nested properties in a hook or selector\r\n   *      transformErrorResponse: (response) => response.error,\r\n   *      // `result` is the server response\r\n   *      providesTags: (result, error, id) => [{ type: 'Post', id }],\r\n   *      // trigger side effects or optimistic updates\r\n   *      onQueryStarted(id, { dispatch, getState, extra, requestId, queryFulfilled, getCacheEntry, updateCachedData }) {},\r\n   *      // handle subscriptions etc\r\n   *      onCacheEntryAdded(id, { dispatch, getState, extra, requestId, cacheEntryRemoved, cacheDataLoaded, getCacheEntry, updateCachedData }) {},\r\n   *    }),\r\n   *  }),\r\n   *});\r\n   *```\r\n   */\r\n  query<ResultType, QueryArg>(\r\n    definition: OmitFromUnion<\r\n      QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>,\r\n      'type'\r\n    >\r\n  ): QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n  /**\r\n   * An endpoint definition that alters data on the server or will possibly invalidate the cache.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // codeblock-meta title=\"Example of all mutation endpoint options\"\r\n   * const api = createApi({\r\n   *   baseQuery,\r\n   *   endpoints: (build) => ({\r\n   *     updatePost: build.mutation({\r\n   *       query: ({ id, ...patch }) => ({ url: `post/${id}`, method: 'PATCH', body: patch }),\r\n   *       // Pick out data and prevent nested properties in a hook or selector\r\n   *       transformResponse: (response) => response.data,\r\n   *       // Pick out error and prevent nested properties in a hook or selector\r\n   *       transformErrorResponse: (response) => response.error,\r\n   *       // `result` is the server response\r\n   *       invalidatesTags: (result, error, id) => [{ type: 'Post', id }],\r\n   *      // trigger side effects or optimistic updates\r\n   *      onQueryStarted(id, { dispatch, getState, extra, requestId, queryFulfilled, getCacheEntry }) {},\r\n   *      // handle subscriptions etc\r\n   *      onCacheEntryAdded(id, { dispatch, getState, extra, requestId, cacheEntryRemoved, cacheDataLoaded, getCacheEntry }) {},\r\n   *     }),\r\n   *   }),\r\n   * });\r\n   * ```\r\n   */\r\n  mutation<ResultType, QueryArg>(\r\n    definition: OmitFromUnion<\r\n      MutationDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        TagTypes,\r\n        ResultType,\r\n        ReducerPath\r\n      >,\r\n      'type'\r\n    >\r\n  ): MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n}\r\n\r\nexport type AssertTagTypes = <T extends FullTagDescription<string>>(t: T) => T\r\n\r\nexport function calculateProvidedBy<ResultType, QueryArg, ErrorType, MetaType>(\r\n  description:\r\n    | ResultDescription<string, ResultType, QueryArg, ErrorType, MetaType>\r\n    | undefined,\r\n  result: ResultType | undefined,\r\n  error: ErrorType | undefined,\r\n  queryArg: QueryArg,\r\n  meta: MetaType | undefined,\r\n  assertTagTypes: AssertTagTypes\r\n): readonly FullTagDescription<string>[] {\r\n  if (isFunction(description)) {\r\n    return description(\r\n      result as ResultType,\r\n      error as undefined,\r\n      queryArg,\r\n      meta as MetaType\r\n    )\r\n      .map(expandTagDescription)\r\n      .map(assertTagTypes)\r\n  }\r\n  if (Array.isArray(description)) {\r\n    return description.map(expandTagDescription).map(assertTagTypes)\r\n  }\r\n  return []\r\n}\r\n\r\nfunction isFunction<T>(t: T): t is Extract<T, Function> {\r\n  return typeof t === 'function'\r\n}\r\n\r\nexport function expandTagDescription(\r\n  description: TagDescription<string>\r\n): FullTagDescription<string> {\r\n  return typeof description === 'string' ? { type: description } : description\r\n}\r\n\r\nexport type QueryArgFrom<D extends BaseEndpointDefinition<any, any, any>> =\r\n  D extends BaseEndpointDefinition<infer QA, any, any> ? QA : unknown\r\nexport type ResultTypeFrom<D extends BaseEndpointDefinition<any, any, any>> =\r\n  D extends BaseEndpointDefinition<any, any, infer RT> ? RT : unknown\r\n\r\nexport type ReducerPathFrom<\r\n  D extends EndpointDefinition<any, any, any, any, any>\r\n> = D extends EndpointDefinition<any, any, any, any, infer RP> ? RP : unknown\r\n\r\nexport type TagTypesFrom<D extends EndpointDefinition<any, any, any, any>> =\r\n  D extends EndpointDefinition<any, any, infer RP, any> ? RP : unknown\r\n\r\nexport type TagTypesFromApi<T> = T extends Api<any, any, any, infer TagTypes>\r\n  ? TagTypes\r\n  : never\r\n\r\nexport type DefinitionsFromApi<T> = T extends Api<\r\n  any,\r\n  infer Definitions,\r\n  any,\r\n  any\r\n>\r\n  ? Definitions\r\n  : never\r\n\r\nexport type TransformedResponse<\r\n  NewDefinitions extends EndpointDefinitions,\r\n  K,\r\n  ResultType\r\n> = K extends keyof NewDefinitions\r\n  ? NewDefinitions[K]['transformResponse'] extends undefined\r\n    ? ResultType\r\n    : UnwrapPromise<\r\n        ReturnType<NonUndefined<NewDefinitions[K]['transformResponse']>>\r\n      >\r\n  : ResultType\r\n\r\nexport type OverrideResultType<Definition, NewResultType> =\r\n  Definition extends QueryDefinition<\r\n    infer QueryArg,\r\n    infer BaseQuery,\r\n    infer TagTypes,\r\n    any,\r\n    infer ReducerPath\r\n  >\r\n    ? QueryDefinition<QueryArg, BaseQuery, TagTypes, NewResultType, ReducerPath>\r\n    : Definition extends MutationDefinition<\r\n        infer QueryArg,\r\n        infer BaseQuery,\r\n        infer TagTypes,\r\n        any,\r\n        infer ReducerPath\r\n      >\r\n    ? MutationDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        TagTypes,\r\n        NewResultType,\r\n        ReducerPath\r\n      >\r\n    : never\r\n\r\nexport type UpdateDefinitions<\r\n  Definitions extends EndpointDefinitions,\r\n  NewTagTypes extends string,\r\n  NewDefinitions extends EndpointDefinitions\r\n> = {\r\n  [K in keyof Definitions]: Definitions[K] extends QueryDefinition<\r\n    infer QueryArg,\r\n    infer BaseQuery,\r\n    any,\r\n    infer ResultType,\r\n    infer ReducerPath\r\n  >\r\n    ? QueryDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        NewTagTypes,\r\n        TransformedResponse<NewDefinitions, K, ResultType>,\r\n        ReducerPath\r\n      >\r\n    : Definitions[K] extends MutationDefinition<\r\n        infer QueryArg,\r\n        infer BaseQuery,\r\n        any,\r\n        infer ResultType,\r\n        infer ReducerPath\r\n      >\r\n    ? MutationDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        NewTagTypes,\r\n        TransformedResponse<NewDefinitions, K, ResultType>,\r\n        ReducerPath\r\n      >\r\n    : never\r\n}\r\n", "import type { AnyAction, PayloadAction } from '@reduxjs/toolkit'\r\nimport {\r\n  combineReducers,\r\n  createAction,\r\n  createSlice,\r\n  isAnyOf,\r\n  isFulfilled,\r\n  isRejectedWithValue,\r\n  createNextState,\r\n  prepareAutoBatched,\r\n} from '@reduxjs/toolkit'\r\nimport type {\r\n  CombinedState as CombinedQueryState,\r\n  QuerySubstateIdentifier,\r\n  QuerySubState,\r\n  MutationSubstateIdentifier,\r\n  MutationSubState,\r\n  MutationState,\r\n  QueryState,\r\n  InvalidationState,\r\n  Subscribers,\r\n  QueryCacheKey,\r\n  SubscriptionState,\r\n  ConfigState,\r\n} from './apiState'\r\nimport { QueryStatus } from './apiState'\r\nimport type { MutationThunk, QueryThunk, RejectedAction } from './buildThunks'\r\nimport { calculateProvidedByThunk } from './buildThunks'\r\nimport type {\r\n  AssertTagTypes,\r\n  EndpointDefinitions,\r\n  FullTagDescription,\r\n  QueryDefinition,\r\n} from '../endpointDefinitions'\r\nimport type { Patch } from 'immer'\r\nimport { isDraft } from 'immer'\r\nimport { applyPatches, original } from 'immer'\r\nimport { onFocus, onFocusLost, onOffline, onOnline } from './setupListeners'\r\nimport {\r\n  isDocumentVisible,\r\n  isOnline,\r\n  copyWithStructuralSharing,\r\n} from '../utils'\r\nimport type { ApiContext } from '../apiTypes'\r\nimport { isUpsertQuery } from './buildInitiate'\r\n\r\nfunction updateQuerySubstateIfExists(\r\n  state: QueryState<any>,\r\n  queryCacheKey: QueryCacheKey,\r\n  update: (substate: QuerySubState<any>) => void\r\n) {\r\n  const substate = state[queryCacheKey]\r\n  if (substate) {\r\n    update(substate)\r\n  }\r\n}\r\n\r\nexport function getMutationCacheKey(\r\n  id:\r\n    | MutationSubstateIdentifier\r\n    | { requestId: string; arg: { fixedCacheKey?: string | undefined } }\r\n): string\r\nexport function getMutationCacheKey(id: {\r\n  fixedCacheKey?: string\r\n  requestId?: string\r\n}): string | undefined\r\n\r\nexport function getMutationCacheKey(\r\n  id:\r\n    | { fixedCacheKey?: string; requestId?: string }\r\n    | MutationSubstateIdentifier\r\n    | { requestId: string; arg: { fixedCacheKey?: string | undefined } }\r\n): string | undefined {\r\n  return ('arg' in id ? id.arg.fixedCacheKey : id.fixedCacheKey) ?? id.requestId\r\n}\r\n\r\nfunction updateMutationSubstateIfExists(\r\n  state: MutationState<any>,\r\n  id:\r\n    | MutationSubstateIdentifier\r\n    | { requestId: string; arg: { fixedCacheKey?: string | undefined } },\r\n  update: (substate: MutationSubState<any>) => void\r\n) {\r\n  const substate = state[getMutationCacheKey(id)]\r\n  if (substate) {\r\n    update(substate)\r\n  }\r\n}\r\n\r\nconst initialState = {} as any\r\n\r\nexport function buildSlice({\r\n  reducerPath,\r\n  queryThunk,\r\n  mutationThunk,\r\n  context: {\r\n    endpointDefinitions: definitions,\r\n    apiUid,\r\n    extractRehydrationInfo,\r\n    hasRehydrationInfo,\r\n  },\r\n  assertTagType,\r\n  config,\r\n}: {\r\n  reducerPath: string\r\n  queryThunk: QueryThunk\r\n  mutationThunk: MutationThunk\r\n  context: ApiContext<EndpointDefinitions>\r\n  assertTagType: AssertTagTypes\r\n  config: Omit<\r\n    ConfigState<string>,\r\n    'online' | 'focused' | 'middlewareRegistered'\r\n  >\r\n}) {\r\n  const resetApiState = createAction(`${reducerPath}/resetApiState`)\r\n  const querySlice = createSlice({\r\n    name: `${reducerPath}/queries`,\r\n    initialState: initialState as QueryState<any>,\r\n    reducers: {\r\n      removeQueryResult: {\r\n        reducer(\r\n          draft,\r\n          { payload: { queryCacheKey } }: PayloadAction<QuerySubstateIdentifier>\r\n        ) {\r\n          delete draft[queryCacheKey]\r\n        },\r\n        prepare: prepareAutoBatched<QuerySubstateIdentifier>(),\r\n      },\r\n      queryResultPatched: {\r\n        reducer(\r\n          draft,\r\n          {\r\n            payload: { queryCacheKey, patches },\r\n          }: PayloadAction<\r\n            QuerySubstateIdentifier & { patches: readonly Patch[] }\r\n          >\r\n        ) {\r\n          updateQuerySubstateIfExists(draft, queryCacheKey, (substate) => {\r\n            substate.data = applyPatches(substate.data as any, patches.concat())\r\n          })\r\n        },\r\n        prepare: prepareAutoBatched<\r\n          QuerySubstateIdentifier & { patches: readonly Patch[] }\r\n        >(),\r\n      },\r\n    },\r\n    extraReducers(builder) {\r\n      builder\r\n        .addCase(queryThunk.pending, (draft, { meta, meta: { arg } }) => {\r\n          const upserting = isUpsertQuery(arg)\r\n          if (arg.subscribe || upserting) {\r\n            // only initialize substate if we want to subscribe to it\r\n            draft[arg.queryCacheKey] ??= {\r\n              status: QueryStatus.uninitialized,\r\n              endpointName: arg.endpointName,\r\n            }\r\n          }\r\n\r\n          updateQuerySubstateIfExists(draft, arg.queryCacheKey, (substate) => {\r\n            substate.status = QueryStatus.pending\r\n\r\n            substate.requestId =\r\n              upserting && substate.requestId\r\n                ? // for `upsertQuery` **updates**, keep the current `requestId`\r\n                  substate.requestId\r\n                : // for normal queries or `upsertQuery` **inserts** always update the `requestId`\r\n                  meta.requestId\r\n            if (arg.originalArgs !== undefined) {\r\n              substate.originalArgs = arg.originalArgs\r\n            }\r\n            substate.startedTimeStamp = meta.startedTimeStamp\r\n          })\r\n        })\r\n        .addCase(queryThunk.fulfilled, (draft, { meta, payload }) => {\r\n          updateQuerySubstateIfExists(\r\n            draft,\r\n            meta.arg.queryCacheKey,\r\n            (substate) => {\r\n              if (\r\n                substate.requestId !== meta.requestId &&\r\n                !isUpsertQuery(meta.arg)\r\n              )\r\n                return\r\n              const { merge } = definitions[\r\n                meta.arg.endpointName\r\n              ] as QueryDefinition<any, any, any, any>\r\n              substate.status = QueryStatus.fulfilled\r\n\r\n              if (merge) {\r\n                if (substate.data !== undefined) {\r\n                  const { fulfilledTimeStamp, arg, baseQueryMeta, requestId } =\r\n                    meta\r\n                  // There's existing cache data. Let the user merge it in themselves.\r\n                  // We're already inside an Immer-powered reducer, and the user could just mutate `substate.data`\r\n                  // themselves inside of `merge()`. But, they might also want to return a new value.\r\n                  // Try to let Immer figure that part out, save the result, and assign it to `substate.data`.\r\n                  let newData = createNextState(\r\n                    substate.data,\r\n                    (draftSubstateData) => {\r\n                      // As usual with Immer, you can mutate _or_ return inside here, but not both\r\n                      return merge(draftSubstateData, payload, {\r\n                        arg: arg.originalArgs,\r\n                        baseQueryMeta,\r\n                        fulfilledTimeStamp,\r\n                        requestId,\r\n                      })\r\n                    }\r\n                  )\r\n                  substate.data = newData\r\n                } else {\r\n                  // Presumably a fresh request. Just cache the response data.\r\n                  substate.data = payload\r\n                }\r\n              } else {\r\n                // Assign or safely update the cache data.\r\n                substate.data =\r\n                  definitions[meta.arg.endpointName].structuralSharing ?? true\r\n                    ? copyWithStructuralSharing(\r\n                        isDraft(substate.data)\r\n                          ? original(substate.data)\r\n                          : substate.data,\r\n                        payload\r\n                      )\r\n                    : payload\r\n              }\r\n\r\n              delete substate.error\r\n              substate.fulfilledTimeStamp = meta.fulfilledTimeStamp\r\n            }\r\n          )\r\n        })\r\n        .addCase(\r\n          queryThunk.rejected,\r\n          (draft, { meta: { condition, arg, requestId }, error, payload }) => {\r\n            updateQuerySubstateIfExists(\r\n              draft,\r\n              arg.queryCacheKey,\r\n              (substate) => {\r\n                if (condition) {\r\n                  // request was aborted due to condition (another query already running)\r\n                } else {\r\n                  // request failed\r\n                  if (substate.requestId !== requestId) return\r\n                  substate.status = QueryStatus.rejected\r\n                  substate.error = (payload ?? error) as any\r\n                }\r\n              }\r\n            )\r\n          }\r\n        )\r\n        .addMatcher(hasRehydrationInfo, (draft, action) => {\r\n          const { queries } = extractRehydrationInfo(action)!\r\n          for (const [key, entry] of Object.entries(queries)) {\r\n            if (\r\n              // do not rehydrate entries that were currently in flight.\r\n              entry?.status === QueryStatus.fulfilled ||\r\n              entry?.status === QueryStatus.rejected\r\n            ) {\r\n              draft[key] = entry\r\n            }\r\n          }\r\n        })\r\n    },\r\n  })\r\n  const mutationSlice = createSlice({\r\n    name: `${reducerPath}/mutations`,\r\n    initialState: initialState as MutationState<any>,\r\n    reducers: {\r\n      removeMutationResult: {\r\n        reducer(draft, { payload }: PayloadAction<MutationSubstateIdentifier>) {\r\n          const cacheKey = getMutationCacheKey(payload)\r\n          if (cacheKey in draft) {\r\n            delete draft[cacheKey]\r\n          }\r\n        },\r\n        prepare: prepareAutoBatched<MutationSubstateIdentifier>(),\r\n      },\r\n    },\r\n    extraReducers(builder) {\r\n      builder\r\n        .addCase(\r\n          mutationThunk.pending,\r\n          (draft, { meta, meta: { requestId, arg, startedTimeStamp } }) => {\r\n            if (!arg.track) return\r\n\r\n            draft[getMutationCacheKey(meta)] = {\r\n              requestId,\r\n              status: QueryStatus.pending,\r\n              endpointName: arg.endpointName,\r\n              startedTimeStamp,\r\n            }\r\n          }\r\n        )\r\n        .addCase(mutationThunk.fulfilled, (draft, { payload, meta }) => {\r\n          if (!meta.arg.track) return\r\n\r\n          updateMutationSubstateIfExists(draft, meta, (substate) => {\r\n            if (substate.requestId !== meta.requestId) return\r\n            substate.status = QueryStatus.fulfilled\r\n            substate.data = payload\r\n            substate.fulfilledTimeStamp = meta.fulfilledTimeStamp\r\n          })\r\n        })\r\n        .addCase(mutationThunk.rejected, (draft, { payload, error, meta }) => {\r\n          if (!meta.arg.track) return\r\n\r\n          updateMutationSubstateIfExists(draft, meta, (substate) => {\r\n            if (substate.requestId !== meta.requestId) return\r\n\r\n            substate.status = QueryStatus.rejected\r\n            substate.error = (payload ?? error) as any\r\n          })\r\n        })\r\n        .addMatcher(hasRehydrationInfo, (draft, action) => {\r\n          const { mutations } = extractRehydrationInfo(action)!\r\n          for (const [key, entry] of Object.entries(mutations)) {\r\n            if (\r\n              // do not rehydrate entries that were currently in flight.\r\n              (entry?.status === QueryStatus.fulfilled ||\r\n                entry?.status === QueryStatus.rejected) &&\r\n              // only rehydrate endpoints that were persisted using a `fixedCacheKey`\r\n              key !== entry?.requestId\r\n            ) {\r\n              draft[key] = entry\r\n            }\r\n          }\r\n        })\r\n    },\r\n  })\r\n\r\n  const invalidationSlice = createSlice({\r\n    name: `${reducerPath}/invalidation`,\r\n    initialState: initialState as InvalidationState<string>,\r\n    reducers: {\r\n      updateProvidedBy: {\r\n        reducer(\r\n          draft,\r\n          action: PayloadAction<{\r\n            queryCacheKey: QueryCacheKey\r\n            providedTags: readonly FullTagDescription<string>[]\r\n          }>\r\n        ) {\r\n          const { queryCacheKey, providedTags } = action.payload\r\n\r\n          for (const tagTypeSubscriptions of Object.values(draft)) {\r\n            for (const idSubscriptions of Object.values(tagTypeSubscriptions)) {\r\n              const foundAt = idSubscriptions.indexOf(queryCacheKey)\r\n              if (foundAt !== -1) {\r\n                idSubscriptions.splice(foundAt, 1)\r\n              }\r\n            }\r\n          }\r\n\r\n          for (const { type, id } of providedTags) {\r\n            const subscribedQueries = ((draft[type] ??= {})[\r\n              id || '__internal_without_id'\r\n            ] ??= [])\r\n            const alreadySubscribed = subscribedQueries.includes(queryCacheKey)\r\n            if (!alreadySubscribed) {\r\n              subscribedQueries.push(queryCacheKey)\r\n            }\r\n          }\r\n        },\r\n        prepare: prepareAutoBatched<{\r\n          queryCacheKey: QueryCacheKey\r\n          providedTags: readonly FullTagDescription<string>[]\r\n        }>(),\r\n      },\r\n    },\r\n    extraReducers(builder) {\r\n      builder\r\n        .addCase(\r\n          querySlice.actions.removeQueryResult,\r\n          (draft, { payload: { queryCacheKey } }) => {\r\n            for (const tagTypeSubscriptions of Object.values(draft)) {\r\n              for (const idSubscriptions of Object.values(\r\n                tagTypeSubscriptions\r\n              )) {\r\n                const foundAt = idSubscriptions.indexOf(queryCacheKey)\r\n                if (foundAt !== -1) {\r\n                  idSubscriptions.splice(foundAt, 1)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        )\r\n        .addMatcher(hasRehydrationInfo, (draft, action) => {\r\n          const { provided } = extractRehydrationInfo(action)!\r\n          for (const [type, incomingTags] of Object.entries(provided)) {\r\n            for (const [id, cacheKeys] of Object.entries(incomingTags)) {\r\n              const subscribedQueries = ((draft[type] ??= {})[\r\n                id || '__internal_without_id'\r\n              ] ??= [])\r\n              for (const queryCacheKey of cacheKeys) {\r\n                const alreadySubscribed =\r\n                  subscribedQueries.includes(queryCacheKey)\r\n                if (!alreadySubscribed) {\r\n                  subscribedQueries.push(queryCacheKey)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .addMatcher(\r\n          isAnyOf(isFulfilled(queryThunk), isRejectedWithValue(queryThunk)),\r\n          (draft, action) => {\r\n            const providedTags = calculateProvidedByThunk(\r\n              action,\r\n              'providesTags',\r\n              definitions,\r\n              assertTagType\r\n            )\r\n            const { queryCacheKey } = action.meta.arg\r\n\r\n            invalidationSlice.caseReducers.updateProvidedBy(\r\n              draft,\r\n              invalidationSlice.actions.updateProvidedBy({\r\n                queryCacheKey,\r\n                providedTags,\r\n              })\r\n            )\r\n          }\r\n        )\r\n    },\r\n  })\r\n\r\n  // Dummy slice to generate actions\r\n  const subscriptionSlice = createSlice({\r\n    name: `${reducerPath}/subscriptions`,\r\n    initialState: initialState as SubscriptionState,\r\n    reducers: {\r\n      updateSubscriptionOptions(\r\n        d,\r\n        a: PayloadAction<\r\n          {\r\n            endpointName: string\r\n            requestId: string\r\n            options: Subscribers[number]\r\n          } & QuerySubstateIdentifier\r\n        >\r\n      ) {\r\n        // Dummy\r\n      },\r\n      unsubscribeQueryResult(\r\n        d,\r\n        a: PayloadAction<{ requestId: string } & QuerySubstateIdentifier>\r\n      ) {\r\n        // Dummy\r\n      },\r\n      internal_probeSubscription(\r\n        d,\r\n        a: PayloadAction<{ queryCacheKey: string; requestId: string }>\r\n      ) {\r\n        // dummy\r\n      },\r\n    },\r\n  })\r\n\r\n  const internalSubscriptionsSlice = createSlice({\r\n    name: `${reducerPath}/internalSubscriptions`,\r\n    initialState: initialState as SubscriptionState,\r\n    reducers: {\r\n      subscriptionsUpdated: {\r\n        reducer(state, action: PayloadAction<Patch[]>) {\r\n          return applyPatches(state, action.payload)\r\n        },\r\n        prepare: prepareAutoBatched<Patch[]>(),\r\n      },\r\n    },\r\n  })\r\n\r\n  const configSlice = createSlice({\r\n    name: `${reducerPath}/config`,\r\n    initialState: {\r\n      online: isOnline(),\r\n      focused: isDocumentVisible(),\r\n      middlewareRegistered: false,\r\n      ...config,\r\n    } as ConfigState<string>,\r\n    reducers: {\r\n      middlewareRegistered(state, { payload }: PayloadAction<string>) {\r\n        state.middlewareRegistered =\r\n          state.middlewareRegistered === 'conflict' || apiUid !== payload\r\n            ? 'conflict'\r\n            : true\r\n      },\r\n    },\r\n    extraReducers: (builder) => {\r\n      builder\r\n        .addCase(onOnline, (state) => {\r\n          state.online = true\r\n        })\r\n        .addCase(onOffline, (state) => {\r\n          state.online = false\r\n        })\r\n        .addCase(onFocus, (state) => {\r\n          state.focused = true\r\n        })\r\n        .addCase(onFocusLost, (state) => {\r\n          state.focused = false\r\n        })\r\n        // update the state to be a new object to be picked up as a \"state change\"\r\n        // by redux-persist's `autoMergeLevel2`\r\n        .addMatcher(hasRehydrationInfo, (draft) => ({ ...draft }))\r\n    },\r\n  })\r\n\r\n  const combinedReducer = combineReducers<\r\n    CombinedQueryState<any, string, string>\r\n  >({\r\n    queries: querySlice.reducer,\r\n    mutations: mutationSlice.reducer,\r\n    provided: invalidationSlice.reducer,\r\n    subscriptions: internalSubscriptionsSlice.reducer,\r\n    config: configSlice.reducer,\r\n  })\r\n\r\n  const reducer: typeof combinedReducer = (state, action) =>\r\n    combinedReducer(resetApiState.match(action) ? undefined : state, action)\r\n\r\n  const actions = {\r\n    ...configSlice.actions,\r\n    ...querySlice.actions,\r\n    ...subscriptionSlice.actions,\r\n    ...internalSubscriptionsSlice.actions,\r\n    ...mutationSlice.actions,\r\n    ...invalidationSlice.actions,\r\n    /** @deprecated has been renamed to `removeMutationResult` */\r\n    unsubscribeMutationResult: mutationSlice.actions.removeMutationResult,\r\n    resetApiState,\r\n  }\r\n\r\n  return { reducer, actions }\r\n}\r\nexport type SliceActions = ReturnType<typeof buildSlice>['actions']\r\n", "export function isNotNullish<T>(v: T | null | undefined): v is T {\r\n  return v != null\r\n}\r\n", "import type {\r\n  EndpointDefinitions,\r\n  QueryDefinition,\r\n  MutationDefinition,\r\n  QueryArgFrom,\r\n  ResultTypeFrom,\r\n} from '../endpointDefinitions'\r\nimport { DefinitionType, isQueryDefinition } from '../endpointDefinitions'\r\nimport type { QueryThunk, MutationThunk, QueryThunkArg } from './buildThunks'\r\nimport type { AnyAction, ThunkAction, SerializedError } from '@reduxjs/toolkit'\r\nimport type { SubscriptionOptions, RootState } from './apiState'\r\nimport type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs'\r\nimport type { Api, ApiContext } from '../apiTypes'\r\nimport type { ApiEndpointQuery } from './module'\r\nimport type { BaseQueryError, QueryReturnValue } from '../baseQueryTypes'\r\nimport type { QueryResultSelectorResult } from './buildSelectors'\r\nimport type { Dispatch } from 'redux'\r\nimport { isNotNullish } from '../utils/isNotNullish'\r\n\r\ndeclare module './module' {\r\n  export interface ApiEndpointQuery<\r\n    Definition extends QueryDefinition<any, any, any, any, any>,\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    Definitions extends EndpointDefinitions\r\n  > {\r\n    initiate: StartQueryActionCreator<Definition>\r\n  }\r\n\r\n  export interface ApiEndpointMutation<\r\n    Definition extends MutationDefinition<any, any, any, any, any>,\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    Definitions extends EndpointDefinitions\r\n  > {\r\n    initiate: StartMutationActionCreator<Definition>\r\n  }\r\n}\r\n\r\nexport const forceQueryFnSymbol = Symbol('forceQueryFn')\r\nexport const isUpsertQuery = (arg: QueryThunkArg) =>\r\n  typeof arg[forceQueryFnSymbol] === 'function'\r\n\r\nexport interface StartQueryActionCreatorOptions {\r\n  subscribe?: boolean\r\n  forceRefetch?: boolean | number\r\n  subscriptionOptions?: SubscriptionOptions\r\n  [forceQueryFnSymbol]?: () => QueryReturnValue\r\n}\r\n\r\ntype StartQueryActionCreator<\r\n  D extends QueryDefinition<any, any, any, any, any>\r\n> = (\r\n  arg: QueryArgFrom<D>,\r\n  options?: StartQueryActionCreatorOptions\r\n) => ThunkAction<QueryActionCreatorResult<D>, any, any, AnyAction>\r\n\r\nexport type QueryActionCreatorResult<\r\n  D extends QueryDefinition<any, any, any, any>\r\n> = Promise<QueryResultSelectorResult<D>> & {\r\n  arg: QueryArgFrom<D>\r\n  requestId: string\r\n  subscriptionOptions: SubscriptionOptions | undefined\r\n  abort(): void\r\n  unwrap(): Promise<ResultTypeFrom<D>>\r\n  unsubscribe(): void\r\n  refetch(): QueryActionCreatorResult<D>\r\n  updateSubscriptionOptions(options: SubscriptionOptions): void\r\n  queryCacheKey: string\r\n}\r\n\r\ntype StartMutationActionCreator<\r\n  D extends MutationDefinition<any, any, any, any>\r\n> = (\r\n  arg: QueryArgFrom<D>,\r\n  options?: {\r\n    /**\r\n     * If this mutation should be tracked in the store.\r\n     * If you just want to manually trigger this mutation using `dispatch` and don't care about the\r\n     * result, state & potential errors being held in store, you can set this to false.\r\n     * (defaults to `true`)\r\n     */\r\n    track?: boolean\r\n    fixedCacheKey?: string\r\n  }\r\n) => ThunkAction<MutationActionCreatorResult<D>, any, any, AnyAction>\r\n\r\nexport type MutationActionCreatorResult<\r\n  D extends MutationDefinition<any, any, any, any>\r\n> = Promise<\r\n  | { data: ResultTypeFrom<D> }\r\n  | {\r\n      error:\r\n        | Exclude<\r\n            BaseQueryError<\r\n              D extends MutationDefinition<any, infer BaseQuery, any, any>\r\n                ? BaseQuery\r\n                : never\r\n            >,\r\n            undefined\r\n          >\r\n        | SerializedError\r\n    }\r\n> & {\r\n  /** @internal */\r\n  arg: {\r\n    /**\r\n     * The name of the given endpoint for the mutation\r\n     */\r\n    endpointName: string\r\n    /**\r\n     * The original arguments supplied to the mutation call\r\n     */\r\n    originalArgs: QueryArgFrom<D>\r\n    /**\r\n     * Whether the mutation is being tracked in the store.\r\n     */\r\n    track?: boolean\r\n    fixedCacheKey?: string\r\n  }\r\n  /**\r\n   * A unique string generated for the request sequence\r\n   */\r\n  requestId: string\r\n\r\n  /**\r\n   * A method to cancel the mutation promise. Note that this is not intended to prevent the mutation\r\n   * that was fired off from reaching the server, but only to assist in handling the response.\r\n   *\r\n   * Calling `abort()` prior to the promise resolving will force it to reach the error state with\r\n   * the serialized error:\r\n   * `{ name: 'AbortError', message: 'Aborted' }`\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * const [updateUser] = useUpdateUserMutation();\r\n   *\r\n   * useEffect(() => {\r\n   *   const promise = updateUser(id);\r\n   *   promise\r\n   *     .unwrap()\r\n   *     .catch((err) => {\r\n   *       if (err.name === 'AbortError') return;\r\n   *       // else handle the unexpected error\r\n   *     })\r\n   *\r\n   *   return () => {\r\n   *     promise.abort();\r\n   *   }\r\n   * }, [id, updateUser])\r\n   * ```\r\n   */\r\n  abort(): void\r\n  /**\r\n   * Unwraps a mutation call to provide the raw response/error.\r\n   *\r\n   * @remarks\r\n   * If you need to access the error or success payload immediately after a mutation, you can chain .unwrap().\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // codeblock-meta title=\"Using .unwrap\"\r\n   * addPost({ id: 1, name: 'Example' })\r\n   *   .unwrap()\r\n   *   .then((payload) => console.log('fulfilled', payload))\r\n   *   .catch((error) => console.error('rejected', error));\r\n   * ```\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // codeblock-meta title=\"Using .unwrap with async await\"\r\n   * try {\r\n   *   const payload = await addPost({ id: 1, name: 'Example' }).unwrap();\r\n   *   console.log('fulfilled', payload)\r\n   * } catch (error) {\r\n   *   console.error('rejected', error);\r\n   * }\r\n   * ```\r\n   */\r\n  unwrap(): Promise<ResultTypeFrom<D>>\r\n  /**\r\n   * A method to manually unsubscribe from the mutation call, meaning it will be removed from cache after the usual caching grace period.\r\n   The value returned by the hook will reset to `isUninitialized` afterwards.\r\n   */\r\n  reset(): void\r\n  /** @deprecated has been renamed to `reset` */\r\n  unsubscribe(): void\r\n}\r\n\r\nexport function buildInitiate({\r\n  serializeQueryArgs,\r\n  queryThunk,\r\n  mutationThunk,\r\n  api,\r\n  context,\r\n}: {\r\n  serializeQueryArgs: InternalSerializeQueryArgs\r\n  queryThunk: QueryThunk\r\n  mutationThunk: MutationThunk\r\n  api: Api<any, EndpointDefinitions, any, any>\r\n  context: ApiContext<EndpointDefinitions>\r\n}) {\r\n  const runningQueries: Map<\r\n    Dispatch,\r\n    Record<string, QueryActionCreatorResult<any> | undefined>\r\n  > = new Map()\r\n  const runningMutations: Map<\r\n    Dispatch,\r\n    Record<string, MutationActionCreatorResult<any> | undefined>\r\n  > = new Map()\r\n\r\n  const {\r\n    unsubscribeQueryResult,\r\n    removeMutationResult,\r\n    updateSubscriptionOptions,\r\n  } = api.internalActions\r\n  return {\r\n    buildInitiateQuery,\r\n    buildInitiateMutation,\r\n    getRunningQueryThunk,\r\n    getRunningMutationThunk,\r\n    getRunningQueriesThunk,\r\n    getRunningMutationsThunk,\r\n    getRunningOperationPromises,\r\n    removalWarning,\r\n  }\r\n\r\n  /** @deprecated to be removed in 2.0 */\r\n  function removalWarning(): never {\r\n    throw new Error(\r\n      `This method had to be removed due to a conceptual bug in RTK.\r\n       Please see https://github.com/reduxjs/redux-toolkit/pull/2481 for details.\r\n       See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for new guidance on SSR.`\r\n    )\r\n  }\r\n\r\n  /** @deprecated to be removed in 2.0 */\r\n  function getRunningOperationPromises() {\r\n    if (\r\n      typeof process !== 'undefined' &&\r\n      process.env.NODE_ENV === 'development'\r\n    ) {\r\n      removalWarning()\r\n    } else {\r\n      const extract = <T>(\r\n        v: Map<Dispatch<AnyAction>, Record<string, T | undefined>>\r\n      ) =>\r\n        Array.from(v.values()).flatMap((queriesForStore) =>\r\n          queriesForStore ? Object.values(queriesForStore) : []\r\n        )\r\n      return [...extract(runningQueries), ...extract(runningMutations)].filter(\r\n        isNotNullish\r\n      )\r\n    }\r\n  }\r\n\r\n  function getRunningQueryThunk(endpointName: string, queryArgs: any) {\r\n    return (dispatch: Dispatch) => {\r\n      const endpointDefinition = context.endpointDefinitions[endpointName]\r\n      const queryCacheKey = serializeQueryArgs({\r\n        queryArgs,\r\n        endpointDefinition,\r\n        endpointName,\r\n      })\r\n      return runningQueries.get(dispatch)?.[queryCacheKey] as\r\n        | QueryActionCreatorResult<never>\r\n        | undefined\r\n    }\r\n  }\r\n\r\n  function getRunningMutationThunk(\r\n    /**\r\n     * this is only here to allow TS to infer the result type by input value\r\n     * we could use it to validate the result, but it's probably not necessary\r\n     */\r\n    _endpointName: string,\r\n    fixedCacheKeyOrRequestId: string\r\n  ) {\r\n    return (dispatch: Dispatch) => {\r\n      return runningMutations.get(dispatch)?.[fixedCacheKeyOrRequestId] as\r\n        | MutationActionCreatorResult<never>\r\n        | undefined\r\n    }\r\n  }\r\n\r\n  function getRunningQueriesThunk() {\r\n    return (dispatch: Dispatch) =>\r\n      Object.values(runningQueries.get(dispatch) || {}).filter(isNotNullish)\r\n  }\r\n\r\n  function getRunningMutationsThunk() {\r\n    return (dispatch: Dispatch) =>\r\n      Object.values(runningMutations.get(dispatch) || {}).filter(isNotNullish)\r\n  }\r\n\r\n  function middlewareWarning(dispatch: Dispatch) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if ((middlewareWarning as any).triggered) return\r\n      const registered:\r\n        | ReturnType<typeof api.internalActions.internal_probeSubscription>\r\n        | boolean = dispatch(\r\n        api.internalActions.internal_probeSubscription({\r\n          queryCacheKey: 'DOES_NOT_EXIST',\r\n          requestId: 'DUMMY_REQUEST_ID',\r\n        })\r\n      )\r\n\r\n      ;(middlewareWarning as any).triggered = true\r\n\r\n      // The RTKQ middleware _should_ always return a boolean for `probeSubscription`\r\n      if (typeof registered !== 'boolean') {\r\n        // Otherwise, must not have been added\r\n        throw new Error(\r\n          `Warning: Middleware for RTK-Query API at reducerPath \"${api.reducerPath}\" has not been added to the store.\r\nYou must add the middleware for RTK-Query to function correctly!`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  function buildInitiateQuery(\r\n    endpointName: string,\r\n    endpointDefinition: QueryDefinition<any, any, any, any>\r\n  ) {\r\n    const queryAction: StartQueryActionCreator<any> =\r\n      (\r\n        arg,\r\n        {\r\n          subscribe = true,\r\n          forceRefetch,\r\n          subscriptionOptions,\r\n          [forceQueryFnSymbol]: forceQueryFn,\r\n        } = {}\r\n      ) =>\r\n      (dispatch, getState) => {\r\n        const queryCacheKey = serializeQueryArgs({\r\n          queryArgs: arg,\r\n          endpointDefinition,\r\n          endpointName,\r\n        })\r\n\r\n        const thunk = queryThunk({\r\n          type: 'query',\r\n          subscribe,\r\n          forceRefetch: forceRefetch,\r\n          subscriptionOptions,\r\n          endpointName,\r\n          originalArgs: arg,\r\n          queryCacheKey,\r\n          [forceQueryFnSymbol]: forceQueryFn,\r\n        })\r\n        const selector = (\r\n          api.endpoints[endpointName] as ApiEndpointQuery<any, any>\r\n        ).select(arg)\r\n\r\n        const thunkResult = dispatch(thunk)\r\n        const stateAfter = selector(getState())\r\n\r\n        middlewareWarning(dispatch)\r\n\r\n        const { requestId, abort } = thunkResult\r\n\r\n        const skippedSynchronously = stateAfter.requestId !== requestId\r\n\r\n        const runningQuery = runningQueries.get(dispatch)?.[queryCacheKey]\r\n        const selectFromState = () => selector(getState())\r\n\r\n        const statePromise: QueryActionCreatorResult<any> = Object.assign(\r\n          forceQueryFn\r\n            ? // a query has been forced (upsertQueryData)\r\n              // -> we want to resolve it once data has been written with the data that will be written\r\n              thunkResult.then(selectFromState)\r\n            : skippedSynchronously && !runningQuery\r\n            ? // a query has been skipped due to a condition and we do not have any currently running query\r\n              // -> we want to resolve it immediately with the current data\r\n              Promise.resolve(stateAfter)\r\n            : // query just started or one is already in flight\r\n              // -> wait for the running query, then resolve with data from after that\r\n              Promise.all([runningQuery, thunkResult]).then(selectFromState),\r\n          {\r\n            arg,\r\n            requestId,\r\n            subscriptionOptions,\r\n            queryCacheKey,\r\n            abort,\r\n            async unwrap() {\r\n              const result = await statePromise\r\n\r\n              if (result.isError) {\r\n                throw result.error\r\n              }\r\n\r\n              return result.data\r\n            },\r\n            refetch: () =>\r\n              dispatch(\r\n                queryAction(arg, { subscribe: false, forceRefetch: true })\r\n              ),\r\n            unsubscribe() {\r\n              if (subscribe)\r\n                dispatch(\r\n                  unsubscribeQueryResult({\r\n                    queryCacheKey,\r\n                    requestId,\r\n                  })\r\n                )\r\n            },\r\n            updateSubscriptionOptions(options: SubscriptionOptions) {\r\n              statePromise.subscriptionOptions = options\r\n              dispatch(\r\n                updateSubscriptionOptions({\r\n                  endpointName,\r\n                  requestId,\r\n                  queryCacheKey,\r\n                  options,\r\n                })\r\n              )\r\n            },\r\n          }\r\n        )\r\n\r\n        if (!runningQuery && !skippedSynchronously && !forceQueryFn) {\r\n          const running = runningQueries.get(dispatch) || {}\r\n          running[queryCacheKey] = statePromise\r\n          runningQueries.set(dispatch, running)\r\n\r\n          statePromise.then(() => {\r\n            delete running[queryCacheKey]\r\n            if (!Object.keys(running).length) {\r\n              runningQueries.delete(dispatch)\r\n            }\r\n          })\r\n        }\r\n\r\n        return statePromise\r\n      }\r\n    return queryAction\r\n  }\r\n\r\n  function buildInitiateMutation(\r\n    endpointName: string\r\n  ): StartMutationActionCreator<any> {\r\n    return (arg, { track = true, fixedCacheKey } = {}) =>\r\n      (dispatch, getState) => {\r\n        const thunk = mutationThunk({\r\n          type: 'mutation',\r\n          endpointName,\r\n          originalArgs: arg,\r\n          track,\r\n          fixedCacheKey,\r\n        })\r\n        const thunkResult = dispatch(thunk)\r\n        middlewareWarning(dispatch)\r\n        const { requestId, abort, unwrap } = thunkResult\r\n        const returnValuePromise = thunkResult\r\n          .unwrap()\r\n          .then((data) => ({ data }))\r\n          .catch((error) => ({ error }))\r\n\r\n        const reset = () => {\r\n          dispatch(removeMutationResult({ requestId, fixedCacheKey }))\r\n        }\r\n\r\n        const ret = Object.assign(returnValuePromise, {\r\n          arg: thunkResult.arg,\r\n          requestId,\r\n          abort,\r\n          unwrap,\r\n          unsubscribe: reset,\r\n          reset,\r\n        })\r\n\r\n        const running = runningMutations.get(dispatch) || {}\r\n        runningMutations.set(dispatch, running)\r\n        running[requestId] = ret\r\n        ret.then(() => {\r\n          delete running[requestId]\r\n          if (!Object.keys(running).length) {\r\n            runningMutations.delete(dispatch)\r\n          }\r\n        })\r\n        if (fixedCacheKey) {\r\n          running[fixedCacheKey] = ret\r\n          ret.then(() => {\r\n            if (running[fixedCacheKey] === ret) {\r\n              delete running[fixedCacheKey]\r\n              if (!Object.keys(running).length) {\r\n                runningMutations.delete(dispatch)\r\n              }\r\n            }\r\n          })\r\n        }\r\n\r\n        return ret\r\n      }\r\n  }\r\n}\r\n", "import type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs'\r\nimport type { Api, ApiContext } from '../apiTypes'\r\nimport type {\r\n  BaseQueryFn,\r\n  BaseQueryError,\r\n  QueryReturnValue,\r\n} from '../baseQueryTypes'\r\nimport type { RootState, QueryKeys, QuerySubstateIdentifier } from './apiState'\r\nimport { QueryStatus } from './apiState'\r\nimport type {\r\n  StartQueryActionCreatorOptions,\r\n  QueryActionCreatorResult,\r\n} from './buildInitiate'\r\nimport { forceQueryFnSymbol, isUpsertQuery } from './buildInitiate'\r\nimport type {\r\n  AssertTagTypes,\r\n  EndpointDefinition,\r\n  EndpointDefinitions,\r\n  MutationDefinition,\r\n  QueryArgFrom,\r\n  QueryDefinition,\r\n  ResultTypeFrom,\r\n  FullTagDescription,\r\n} from '../endpointDefinitions'\r\nimport { isQueryDefinition } from '../endpointDefinitions'\r\nimport { calculateProvidedBy } from '../endpointDefinitions'\r\nimport type { AsyncThunkPayloadCreator, Draft } from '@reduxjs/toolkit'\r\nimport {\r\n  isAllOf,\r\n  isFulfilled,\r\n  isPending,\r\n  isRejected,\r\n  isRejectedWithValue,\r\n} from '@reduxjs/toolkit'\r\nimport type { Patch } from 'immer'\r\nimport { isDraftable, produceWithPatches } from 'immer'\r\nimport type {\r\n  AnyAction,\r\n  ThunkAction,\r\n  ThunkDispatch,\r\n  AsyncThunk,\r\n} from '@reduxjs/toolkit'\r\nimport { createAsyncThunk, SHOULD_AUTOBATCH } from '@reduxjs/toolkit'\r\n\r\nimport { HandledError } from '../HandledError'\r\n\r\nimport type { ApiEndpointQuery, PrefetchOptions } from './module'\r\nimport type { UnwrapPromise } from '../tsHelpers'\r\n\r\ndeclare module './module' {\r\n  export interface ApiEndpointQuery<\r\n    Definition extends QueryDefinition<any, any, any, any, any>,\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    Definitions extends EndpointDefinitions\r\n  > extends Matchers<QueryThunk, Definition> {}\r\n\r\n  export interface ApiEndpointMutation<\r\n    Definition extends MutationDefinition<any, any, any, any, any>,\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    Definitions extends EndpointDefinitions\r\n  > extends Matchers<MutationThunk, Definition> {}\r\n}\r\n\r\ntype EndpointThunk<\r\n  Thunk extends QueryThunk | MutationThunk,\r\n  Definition extends EndpointDefinition<any, any, any, any>\r\n> = Definition extends EndpointDefinition<\r\n  infer QueryArg,\r\n  infer BaseQueryFn,\r\n  any,\r\n  infer ResultType\r\n>\r\n  ? Thunk extends AsyncThunk<unknown, infer ATArg, infer ATConfig>\r\n    ? AsyncThunk<\r\n        ResultType,\r\n        ATArg & { originalArgs: QueryArg },\r\n        ATConfig & { rejectValue: BaseQueryError<BaseQueryFn> }\r\n      >\r\n    : never\r\n  : never\r\n\r\nexport type PendingAction<\r\n  Thunk extends QueryThunk | MutationThunk,\r\n  Definition extends EndpointDefinition<any, any, any, any>\r\n> = ReturnType<EndpointThunk<Thunk, Definition>['pending']>\r\n\r\nexport type FulfilledAction<\r\n  Thunk extends QueryThunk | MutationThunk,\r\n  Definition extends EndpointDefinition<any, any, any, any>\r\n> = ReturnType<EndpointThunk<Thunk, Definition>['fulfilled']>\r\n\r\nexport type RejectedAction<\r\n  Thunk extends QueryThunk | MutationThunk,\r\n  Definition extends EndpointDefinition<any, any, any, any>\r\n> = ReturnType<EndpointThunk<Thunk, Definition>['rejected']>\r\n\r\nexport type Matcher<M> = (value: any) => value is M\r\n\r\nexport interface Matchers<\r\n  Thunk extends QueryThunk | MutationThunk,\r\n  Definition extends EndpointDefinition<any, any, any, any>\r\n> {\r\n  matchPending: Matcher<PendingAction<Thunk, Definition>>\r\n  matchFulfilled: Matcher<FulfilledAction<Thunk, Definition>>\r\n  matchRejected: Matcher<RejectedAction<Thunk, Definition>>\r\n}\r\n\r\nexport interface QueryThunkArg\r\n  extends QuerySubstateIdentifier,\r\n    StartQueryActionCreatorOptions {\r\n  type: 'query'\r\n  originalArgs: unknown\r\n  endpointName: string\r\n}\r\n\r\nexport interface MutationThunkArg {\r\n  type: 'mutation'\r\n  originalArgs: unknown\r\n  endpointName: string\r\n  track?: boolean\r\n  fixedCacheKey?: string\r\n}\r\n\r\nexport type ThunkResult = unknown\r\n\r\nexport type ThunkApiMetaConfig = {\r\n  pendingMeta: {\r\n    startedTimeStamp: number\r\n    [SHOULD_AUTOBATCH]: true\r\n  }\r\n  fulfilledMeta: {\r\n    fulfilledTimeStamp: number\r\n    baseQueryMeta: unknown\r\n    [SHOULD_AUTOBATCH]: true\r\n  }\r\n  rejectedMeta: {\r\n    baseQueryMeta: unknown\r\n    [SHOULD_AUTOBATCH]: true\r\n  }\r\n}\r\nexport type QueryThunk = AsyncThunk<\r\n  ThunkResult,\r\n  QueryThunkArg,\r\n  ThunkApiMetaConfig\r\n>\r\nexport type MutationThunk = AsyncThunk<\r\n  ThunkResult,\r\n  MutationThunkArg,\r\n  ThunkApiMetaConfig\r\n>\r\n\r\nfunction defaultTransformResponse(baseQueryReturnValue: unknown) {\r\n  return baseQueryReturnValue\r\n}\r\n\r\nexport type MaybeDrafted<T> = T | Draft<T>\r\nexport type Recipe<T> = (data: MaybeDrafted<T>) => void | MaybeDrafted<T>\r\nexport type UpsertRecipe<T> = (\r\n  data: MaybeDrafted<T> | undefined\r\n) => void | MaybeDrafted<T>\r\n\r\nexport type PatchQueryDataThunk<\r\n  Definitions extends EndpointDefinitions,\r\n  PartialState\r\n> = <EndpointName extends QueryKeys<Definitions>>(\r\n  endpointName: EndpointName,\r\n  args: QueryArgFrom<Definitions[EndpointName]>,\r\n  patches: readonly Patch[],\r\n  updateProvided?: boolean\r\n) => ThunkAction<void, PartialState, any, AnyAction>\r\n\r\nexport type UpdateQueryDataThunk<\r\n  Definitions extends EndpointDefinitions,\r\n  PartialState\r\n> = <EndpointName extends QueryKeys<Definitions>>(\r\n  endpointName: EndpointName,\r\n  args: QueryArgFrom<Definitions[EndpointName]>,\r\n  updateRecipe: Recipe<ResultTypeFrom<Definitions[EndpointName]>>,\r\n  updateProvided?: boolean\r\n) => ThunkAction<PatchCollection, PartialState, any, AnyAction>\r\n\r\nexport type UpsertQueryDataThunk<\r\n  Definitions extends EndpointDefinitions,\r\n  PartialState\r\n> = <EndpointName extends QueryKeys<Definitions>>(\r\n  endpointName: EndpointName,\r\n  args: QueryArgFrom<Definitions[EndpointName]>,\r\n  value: ResultTypeFrom<Definitions[EndpointName]>\r\n) => ThunkAction<\r\n  QueryActionCreatorResult<\r\n    Definitions[EndpointName] extends QueryDefinition<any, any, any, any>\r\n      ? Definitions[EndpointName]\r\n      : never\r\n  >,\r\n  PartialState,\r\n  any,\r\n  AnyAction\r\n>\r\n\r\n/**\r\n * An object returned from dispatching a `api.util.updateQueryData` call.\r\n */\r\nexport type PatchCollection = {\r\n  /**\r\n   * An `immer` Patch describing the cache update.\r\n   */\r\n  patches: Patch[]\r\n  /**\r\n   * An `immer` Patch to revert the cache update.\r\n   */\r\n  inversePatches: Patch[]\r\n  /**\r\n   * A function that will undo the cache update.\r\n   */\r\n  undo: () => void\r\n}\r\n\r\nexport function buildThunks<\r\n  BaseQuery extends BaseQueryFn,\r\n  ReducerPath extends string,\r\n  Definitions extends EndpointDefinitions\r\n>({\r\n  reducerPath,\r\n  baseQuery,\r\n  context: { endpointDefinitions },\r\n  serializeQueryArgs,\r\n  api,\r\n  assertTagType,\r\n}: {\r\n  baseQuery: BaseQuery\r\n  reducerPath: ReducerPath\r\n  context: ApiContext<Definitions>\r\n  serializeQueryArgs: InternalSerializeQueryArgs\r\n  api: Api<BaseQuery, Definitions, ReducerPath, any>\r\n  assertTagType: AssertTagTypes\r\n}) {\r\n  type State = RootState<any, string, ReducerPath>\r\n\r\n  const patchQueryData: PatchQueryDataThunk<EndpointDefinitions, State> =\r\n    (endpointName, args, patches, updateProvided) => (dispatch, getState) => {\r\n      const endpointDefinition = endpointDefinitions[endpointName]\r\n\r\n      const queryCacheKey = serializeQueryArgs({\r\n        queryArgs: args,\r\n        endpointDefinition,\r\n        endpointName,\r\n      })\r\n\r\n      dispatch(\r\n        api.internalActions.queryResultPatched({ queryCacheKey, patches })\r\n      )\r\n\r\n      if (!updateProvided) {\r\n        return\r\n      }\r\n\r\n      const newValue = api.endpoints[endpointName].select(args)(\r\n        // Work around TS 4.1 mismatch\r\n        getState() as RootState<any, any, any>\r\n      )\r\n\r\n      const providedTags = calculateProvidedBy(\r\n        endpointDefinition.providesTags,\r\n        newValue.data,\r\n        undefined,\r\n        args,\r\n        {},\r\n        assertTagType\r\n      )\r\n\r\n      dispatch(\r\n        api.internalActions.updateProvidedBy({ queryCacheKey, providedTags })\r\n      )\r\n    }\r\n\r\n  const updateQueryData: UpdateQueryDataThunk<EndpointDefinitions, State> =\r\n    (endpointName, args, updateRecipe, updateProvided = true) =>\r\n    (dispatch, getState) => {\r\n      const endpointDefinition = api.endpoints[endpointName]\r\n\r\n      const currentState = endpointDefinition.select(args)(\r\n        // Work around TS 4.1 mismatch\r\n        getState() as RootState<any, any, any>\r\n      )\r\n\r\n      let ret: PatchCollection = {\r\n        patches: [],\r\n        inversePatches: [],\r\n        undo: () =>\r\n          dispatch(\r\n            api.util.patchQueryData(\r\n              endpointName,\r\n              args,\r\n              ret.inversePatches,\r\n              updateProvided\r\n            )\r\n          ),\r\n      }\r\n      if (currentState.status === QueryStatus.uninitialized) {\r\n        return ret\r\n      }\r\n      let newValue\r\n      if ('data' in currentState) {\r\n        if (isDraftable(currentState.data)) {\r\n          const [value, patches, inversePatches] = produceWithPatches(\r\n            currentState.data,\r\n            updateRecipe\r\n          )\r\n          ret.patches.push(...patches)\r\n          ret.inversePatches.push(...inversePatches)\r\n          newValue = value\r\n        } else {\r\n          newValue = updateRecipe(currentState.data)\r\n          ret.patches.push({ op: 'replace', path: [], value: newValue })\r\n          ret.inversePatches.push({\r\n            op: 'replace',\r\n            path: [],\r\n            value: currentState.data,\r\n          })\r\n        }\r\n      }\r\n\r\n      dispatch(\r\n        api.util.patchQueryData(endpointName, args, ret.patches, updateProvided)\r\n      )\r\n\r\n      return ret\r\n    }\r\n\r\n  const upsertQueryData: UpsertQueryDataThunk<Definitions, State> =\r\n    (endpointName, args, value) => (dispatch) => {\r\n      return dispatch(\r\n        (\r\n          api.endpoints[endpointName] as ApiEndpointQuery<\r\n            QueryDefinition<any, any, any, any, any>,\r\n            Definitions\r\n          >\r\n        ).initiate(args, {\r\n          subscribe: false,\r\n          forceRefetch: true,\r\n          [forceQueryFnSymbol]: () => ({\r\n            data: value,\r\n          }),\r\n        })\r\n      )\r\n    }\r\n\r\n  const executeEndpoint: AsyncThunkPayloadCreator<\r\n    ThunkResult,\r\n    QueryThunkArg | MutationThunkArg,\r\n    ThunkApiMetaConfig & { state: RootState<any, string, ReducerPath> }\r\n  > = async (\r\n    arg,\r\n    {\r\n      signal,\r\n      abort,\r\n      rejectWithValue,\r\n      fulfillWithValue,\r\n      dispatch,\r\n      getState,\r\n      extra,\r\n    }\r\n  ) => {\r\n    const endpointDefinition = endpointDefinitions[arg.endpointName]\r\n\r\n    try {\r\n      let transformResponse: (\r\n        baseQueryReturnValue: any,\r\n        meta: any,\r\n        arg: any\r\n      ) => any = defaultTransformResponse\r\n      let result: QueryReturnValue\r\n      const baseQueryApi = {\r\n        signal,\r\n        abort,\r\n        dispatch,\r\n        getState,\r\n        extra,\r\n        endpoint: arg.endpointName,\r\n        type: arg.type,\r\n        forced:\r\n          arg.type === 'query' ? isForcedQuery(arg, getState()) : undefined,\r\n      }\r\n\r\n      const forceQueryFn =\r\n        arg.type === 'query' ? arg[forceQueryFnSymbol] : undefined\r\n      if (forceQueryFn) {\r\n        result = forceQueryFn()\r\n      } else if (endpointDefinition.query) {\r\n        result = await baseQuery(\r\n          endpointDefinition.query(arg.originalArgs),\r\n          baseQueryApi,\r\n          endpointDefinition.extraOptions as any\r\n        )\r\n\r\n        if (endpointDefinition.transformResponse) {\r\n          transformResponse = endpointDefinition.transformResponse\r\n        }\r\n      } else {\r\n        result = await endpointDefinition.queryFn(\r\n          arg.originalArgs,\r\n          baseQueryApi,\r\n          endpointDefinition.extraOptions as any,\r\n          (arg) =>\r\n            baseQuery(arg, baseQueryApi, endpointDefinition.extraOptions as any)\r\n        )\r\n      }\r\n      if (\r\n        typeof process !== 'undefined' &&\r\n        process.env.NODE_ENV === 'development'\r\n      ) {\r\n        const what = endpointDefinition.query ? '`baseQuery`' : '`queryFn`'\r\n        let err: undefined | string\r\n        if (!result) {\r\n          err = `${what} did not return anything.`\r\n        } else if (typeof result !== 'object') {\r\n          err = `${what} did not return an object.`\r\n        } else if (result.error && result.data) {\r\n          err = `${what} returned an object containing both \\`error\\` and \\`result\\`.`\r\n        } else if (result.error === undefined && result.data === undefined) {\r\n          err = `${what} returned an object containing neither a valid \\`error\\` and \\`result\\`. At least one of them should not be \\`undefined\\``\r\n        } else {\r\n          for (const key of Object.keys(result)) {\r\n            if (key !== 'error' && key !== 'data' && key !== 'meta') {\r\n              err = `The object returned by ${what} has the unknown property ${key}.`\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (err) {\r\n          console.error(\r\n            `Error encountered handling the endpoint ${arg.endpointName}.\r\n              ${err}\r\n              It needs to return an object with either the shape \\`{ data: <value> }\\` or \\`{ error: <value> }\\` that may contain an optional \\`meta\\` property.\r\n              Object returned was:`,\r\n            result\r\n          )\r\n        }\r\n      }\r\n\r\n      if (result.error) throw new HandledError(result.error, result.meta)\r\n\r\n      return fulfillWithValue(\r\n        await transformResponse(result.data, result.meta, arg.originalArgs),\r\n        {\r\n          fulfilledTimeStamp: Date.now(),\r\n          baseQueryMeta: result.meta,\r\n          [SHOULD_AUTOBATCH]: true,\r\n        }\r\n      )\r\n    } catch (error) {\r\n      let catchedError = error\r\n      if (catchedError instanceof HandledError) {\r\n        let transformErrorResponse: (\r\n          baseQueryReturnValue: any,\r\n          meta: any,\r\n          arg: any\r\n        ) => any = defaultTransformResponse\r\n\r\n        if (\r\n          endpointDefinition.query &&\r\n          endpointDefinition.transformErrorResponse\r\n        ) {\r\n          transformErrorResponse = endpointDefinition.transformErrorResponse\r\n        }\r\n        try {\r\n          return rejectWithValue(\r\n            await transformErrorResponse(\r\n              catchedError.value,\r\n              catchedError.meta,\r\n              arg.originalArgs\r\n            ),\r\n            { baseQueryMeta: catchedError.meta, [SHOULD_AUTOBATCH]: true }\r\n          )\r\n        } catch (e) {\r\n          catchedError = e\r\n        }\r\n      }\r\n      if (\r\n        typeof process !== 'undefined' &&\r\n        process.env.NODE_ENV !== 'production'\r\n      ) {\r\n        console.error(\r\n          `An unhandled error occurred processing a request for the endpoint \"${arg.endpointName}\".\r\nIn the case of an unhandled error, no tags will be \"provided\" or \"invalidated\".`,\r\n          catchedError\r\n        )\r\n      } else {\r\n        console.error(catchedError)\r\n      }\r\n      throw catchedError\r\n    }\r\n  }\r\n\r\n  function isForcedQuery(\r\n    arg: QueryThunkArg,\r\n    state: RootState<any, string, ReducerPath>\r\n  ) {\r\n    const requestState = state[reducerPath]?.queries?.[arg.queryCacheKey]\r\n    const baseFetchOnMountOrArgChange =\r\n      state[reducerPath]?.config.refetchOnMountOrArgChange\r\n\r\n    const fulfilledVal = requestState?.fulfilledTimeStamp\r\n    const refetchVal =\r\n      arg.forceRefetch ?? (arg.subscribe && baseFetchOnMountOrArgChange)\r\n\r\n    if (refetchVal) {\r\n      // Return if its true or compare the dates because it must be a number\r\n      return (\r\n        refetchVal === true ||\r\n        (Number(new Date()) - Number(fulfilledVal)) / 1000 >= refetchVal\r\n      )\r\n    }\r\n    return false\r\n  }\r\n\r\n  const queryThunk = createAsyncThunk<\r\n    ThunkResult,\r\n    QueryThunkArg,\r\n    ThunkApiMetaConfig & { state: RootState<any, string, ReducerPath> }\r\n  >(`${reducerPath}/executeQuery`, executeEndpoint, {\r\n    getPendingMeta() {\r\n      return { startedTimeStamp: Date.now(), [SHOULD_AUTOBATCH]: true }\r\n    },\r\n    condition(queryThunkArgs, { getState }) {\r\n      const state = getState()\r\n\r\n      const requestState =\r\n        state[reducerPath]?.queries?.[queryThunkArgs.queryCacheKey]\r\n      const fulfilledVal = requestState?.fulfilledTimeStamp\r\n      const currentArg = queryThunkArgs.originalArgs\r\n      const previousArg = requestState?.originalArgs\r\n      const endpointDefinition =\r\n        endpointDefinitions[queryThunkArgs.endpointName]\r\n\r\n      // Order of these checks matters.\r\n      // In order for `upsertQueryData` to successfully run while an existing request is in flight,\r\n      /// we have to check for that first, otherwise `queryThunk` will bail out and not run at all.\r\n      if (isUpsertQuery(queryThunkArgs)) {\r\n        return true\r\n      }\r\n\r\n      // Don't retry a request that's currently in-flight\r\n      if (requestState?.status === 'pending') {\r\n        return false\r\n      }\r\n\r\n      // if this is forced, continue\r\n      if (isForcedQuery(queryThunkArgs, state)) {\r\n        return true\r\n      }\r\n\r\n      if (\r\n        isQueryDefinition(endpointDefinition) &&\r\n        endpointDefinition?.forceRefetch?.({\r\n          currentArg,\r\n          previousArg,\r\n          endpointState: requestState,\r\n          state,\r\n        })\r\n      ) {\r\n        return true\r\n      }\r\n\r\n      // Pull from the cache unless we explicitly force refetch or qualify based on time\r\n      if (fulfilledVal) {\r\n        // Value is cached and we didn't specify to refresh, skip it.\r\n        return false\r\n      }\r\n\r\n      return true\r\n    },\r\n    dispatchConditionRejection: true,\r\n  })\r\n\r\n  const mutationThunk = createAsyncThunk<\r\n    ThunkResult,\r\n    MutationThunkArg,\r\n    ThunkApiMetaConfig & { state: RootState<any, string, ReducerPath> }\r\n  >(`${reducerPath}/executeMutation`, executeEndpoint, {\r\n    getPendingMeta() {\r\n      return { startedTimeStamp: Date.now(), [SHOULD_AUTOBATCH]: true }\r\n    },\r\n  })\r\n\r\n  const hasTheForce = (options: any): options is { force: boolean } =>\r\n    'force' in options\r\n  const hasMaxAge = (\r\n    options: any\r\n  ): options is { ifOlderThan: false | number } => 'ifOlderThan' in options\r\n\r\n  const prefetch =\r\n    <EndpointName extends QueryKeys<Definitions>>(\r\n      endpointName: EndpointName,\r\n      arg: any,\r\n      options: PrefetchOptions\r\n    ): ThunkAction<void, any, any, AnyAction> =>\r\n    (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\r\n      const force = hasTheForce(options) && options.force\r\n      const maxAge = hasMaxAge(options) && options.ifOlderThan\r\n\r\n      const queryAction = (force: boolean = true) =>\r\n        (api.endpoints[endpointName] as ApiEndpointQuery<any, any>).initiate(\r\n          arg,\r\n          { forceRefetch: force }\r\n        )\r\n      const latestStateValue = (\r\n        api.endpoints[endpointName] as ApiEndpointQuery<any, any>\r\n      ).select(arg)(getState())\r\n\r\n      if (force) {\r\n        dispatch(queryAction())\r\n      } else if (maxAge) {\r\n        const lastFulfilledTs = latestStateValue?.fulfilledTimeStamp\r\n        if (!lastFulfilledTs) {\r\n          dispatch(queryAction())\r\n          return\r\n        }\r\n        const shouldRetrigger =\r\n          (Number(new Date()) - Number(new Date(lastFulfilledTs))) / 1000 >=\r\n          maxAge\r\n        if (shouldRetrigger) {\r\n          dispatch(queryAction())\r\n        }\r\n      } else {\r\n        // If prefetching with no options, just let it try\r\n        dispatch(queryAction(false))\r\n      }\r\n    }\r\n\r\n  function matchesEndpoint(endpointName: string) {\r\n    return (action: any): action is AnyAction =>\r\n      action?.meta?.arg?.endpointName === endpointName\r\n  }\r\n\r\n  function buildMatchThunkActions<\r\n    Thunk extends\r\n      | AsyncThunk<any, QueryThunkArg, ThunkApiMetaConfig>\r\n      | AsyncThunk<any, MutationThunkArg, ThunkApiMetaConfig>\r\n  >(thunk: Thunk, endpointName: string) {\r\n    return {\r\n      matchPending: isAllOf(isPending(thunk), matchesEndpoint(endpointName)),\r\n      matchFulfilled: isAllOf(\r\n        isFulfilled(thunk),\r\n        matchesEndpoint(endpointName)\r\n      ),\r\n      matchRejected: isAllOf(isRejected(thunk), matchesEndpoint(endpointName)),\r\n    } as Matchers<Thunk, any>\r\n  }\r\n\r\n  return {\r\n    queryThunk,\r\n    mutationThunk,\r\n    prefetch,\r\n    updateQueryData,\r\n    upsertQueryData,\r\n    patchQueryData,\r\n    buildMatchThunkActions,\r\n  }\r\n}\r\n\r\nexport function calculateProvidedByThunk(\r\n  action: UnwrapPromise<\r\n    ReturnType<ReturnType<QueryThunk>> | ReturnType<ReturnType<MutationThunk>>\r\n  >,\r\n  type: 'providesTags' | 'invalidatesTags',\r\n  endpointDefinitions: EndpointDefinitions,\r\n  assertTagType: AssertTagTypes\r\n) {\r\n  return calculateProvidedBy(\r\n    endpointDefinitions[action.meta.arg.endpointName][type],\r\n    isFulfilled(action) ? action.payload : undefined,\r\n    isRejectedWithValue(action) ? action.payload : undefined,\r\n    action.meta.arg.originalArgs,\r\n    'baseQueryMeta' in action.meta ? action.meta.baseQueryMeta : undefined,\r\n    assertTagType\r\n  )\r\n}\r\n", "import type { QueryCacheKey } from './core/apiState'\r\nimport type { EndpointDefinition } from './endpointDefinitions'\r\nimport { isPlainObject } from '@reduxjs/toolkit'\r\n\r\nconst cache: WeakMap<any, string> | undefined = WeakMap\r\n  ? new WeakMap()\r\n  : undefined\r\n\r\nexport const defaultSerializeQueryArgs: SerializeQueryArgs<any> = ({\r\n  endpointName,\r\n  queryArgs,\r\n}) => {\r\n  let serialized = ''\r\n\r\n  const cached = cache?.get(queryArgs)\r\n\r\n  if (typeof cached === 'string') {\r\n    serialized = cached\r\n  } else {\r\n    const stringified = JSON.stringify(queryArgs, (key, value) =>\r\n      isPlainObject(value)\r\n        ? Object.keys(value)\r\n            .sort()\r\n            .reduce<any>((acc, key) => {\r\n              acc[key] = (value as any)[key]\r\n              return acc\r\n            }, {})\r\n        : value\r\n    )\r\n    if (isPlainObject(queryArgs)) {\r\n      cache?.set(queryArgs, stringified)\r\n    }\r\n    serialized = stringified\r\n  }\r\n  // Sort the object keys before stringifying, to prevent useQuery({ a: 1, b: 2 }) having a different cache key than useQuery({ b: 2, a: 1 })\r\n  return `${endpointName}(${serialized})`\r\n}\r\n\r\nexport type SerializeQueryArgs<QueryArgs, ReturnType = string> = (_: {\r\n  queryArgs: QueryArgs\r\n  endpointDefinition: EndpointDefinition<any, any, any, any>\r\n  endpointName: string\r\n}) => ReturnType\r\n\r\nexport type InternalSerializeQueryArgs = (_: {\r\n  queryArgs: any\r\n  endpointDefinition: EndpointDefinition<any, any, any, any>\r\n  endpointName: string\r\n}) => QueryCacheKey\r\n", "import type { Api, ApiContext, Module, ModuleName } from './apiTypes'\r\nimport type { CombinedState } from './core/apiState'\r\nimport type { BaseQueryArg, BaseQueryFn } from './baseQueryTypes'\r\nimport type { SerializeQueryArgs } from './defaultSerializeQueryArgs'\r\nimport { defaultSerializeQueryArgs } from './defaultSerializeQueryArgs'\r\nimport type {\r\n  EndpointBuilder,\r\n  EndpointDefinitions,\r\n} from './endpointDefinitions'\r\nimport { DefinitionType, isQueryDefinition } from './endpointDefinitions'\r\nimport { nanoid } from '@reduxjs/toolkit'\r\nimport type { AnyAction } from '@reduxjs/toolkit'\r\nimport type { NoInfer } from './tsHelpers'\r\nimport { defaultMemoize } from 'reselect'\r\n\r\nexport interface CreateApiOptions<\r\n  BaseQuery extends BaseQueryFn,\r\n  Definitions extends EndpointDefinitions,\r\n  ReducerPath extends string = 'api',\r\n  TagTypes extends string = never\r\n> {\r\n  /**\r\n   * The base query used by each endpoint if no `queryFn` option is specified. RTK Query exports a utility called [fetchBaseQuery](./fetchBaseQuery) as a lightweight wrapper around `fetch` for common use-cases. See [Customizing Queries](../../rtk-query/usage/customizing-queries) if `fetchBaseQuery` does not handle your requirements.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\r\n   *\r\n   * const api = createApi({\r\n   *   // highlight-start\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   // highlight-end\r\n   *   endpoints: (build) => ({\r\n   *     // ...endpoints\r\n   *   }),\r\n   * })\r\n   * ```\r\n   */\r\n  baseQuery: BaseQuery\r\n  /**\r\n   * An array of string tag type names. Specifying tag types is optional, but you should define them so that they can be used for caching and invalidation. When defining a tag type, you will be able to [provide](../../rtk-query/usage/automated-refetching#providing-tags) them with `providesTags` and [invalidate](../../rtk-query/usage/automated-refetching#invalidating-tags) them with `invalidatesTags` when configuring [endpoints](#endpoints).\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   // highlight-start\r\n   *   tagTypes: ['Post', 'User'],\r\n   *   // highlight-end\r\n   *   endpoints: (build) => ({\r\n   *     // ...endpoints\r\n   *   }),\r\n   * })\r\n   * ```\r\n   */\r\n  tagTypes?: readonly TagTypes[]\r\n  /**\r\n   * The `reducerPath` is a _unique_ key that your service will be mounted to in your store. If you call `createApi` more than once in your application, you will need to provide a unique value each time. Defaults to `'api'`.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"apis.js\"\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query';\r\n   *\r\n   * const apiOne = createApi({\r\n   *   // highlight-start\r\n   *   reducerPath: 'apiOne',\r\n   *   // highlight-end\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   endpoints: (builder) => ({\r\n   *     // ...endpoints\r\n   *   }),\r\n   * });\r\n   *\r\n   * const apiTwo = createApi({\r\n   *   // highlight-start\r\n   *   reducerPath: 'apiTwo',\r\n   *   // highlight-end\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   endpoints: (builder) => ({\r\n   *     // ...endpoints\r\n   *   }),\r\n   * });\r\n   * ```\r\n   */\r\n  reducerPath?: ReducerPath\r\n  /**\r\n   * Accepts a custom function if you have a need to change the creation of cache keys for any reason.\r\n   */\r\n  serializeQueryArgs?: SerializeQueryArgs<BaseQueryArg<BaseQuery>>\r\n  /**\r\n   * Endpoints are just a set of operations that you want to perform against your server. You define them as an object using the builder syntax. There are two basic endpoint types: [`query`](../../rtk-query/usage/queries) and [`mutation`](../../rtk-query/usage/mutations).\r\n   */\r\n  endpoints(\r\n    build: EndpointBuilder<BaseQuery, TagTypes, ReducerPath>\r\n  ): Definitions\r\n  /**\r\n   * Defaults to `60` _(this value is in seconds)_. This is how long RTK Query will keep your data cached for **after** the last component unsubscribes. For example, if you query an endpoint, then unmount the component, then mount another component that makes the same request within the given time frame, the most recent value will be served from the cache.\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"keepUnusedDataFor example\"\r\n   *\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   * type PostsResponse = Post[]\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   endpoints: (build) => ({\r\n   *     getPosts: build.query<PostsResponse, void>({\r\n   *       query: () => 'posts',\r\n   *       // highlight-start\r\n   *       keepUnusedDataFor: 5\r\n   *       // highlight-end\r\n   *     })\r\n   *   })\r\n   * })\r\n   * ```\r\n   */\r\n  keepUnusedDataFor?: number\r\n  /**\r\n   * Defaults to `false`. This setting allows you to control whether if a cached result is already available RTK Query will only serve a cached result, or if it should `refetch` when set to `true` or if an adequate amount of time has passed since the last successful query result.\r\n   * - `false` - Will not cause a query to be performed _unless_ it does not exist yet.\r\n   * - `true` - Will always refetch when a new subscriber to a query is added. Behaves the same as calling the `refetch` callback or passing `forceRefetch: true` in the action creator.\r\n   * - `number` - **Value is in seconds**. If a number is provided and there is an existing query in the cache, it will compare the current time vs the last fulfilled timestamp, and only refetch if enough time has elapsed.\r\n   *\r\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\r\n   */\r\n  refetchOnMountOrArgChange?: boolean | number\r\n  /**\r\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after the application window regains focus.\r\n   *\r\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\r\n   *\r\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\r\n   */\r\n  refetchOnFocus?: boolean\r\n  /**\r\n   * Defaults to `false`. This setting allows you to control whether RTK Query will try to refetch all subscribed queries after regaining a network connection.\r\n   *\r\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\r\n   *\r\n   * Note: requires [`setupListeners`](./setupListeners) to have been called.\r\n   */\r\n  refetchOnReconnect?: boolean\r\n  /**\r\n   * A function that is passed every dispatched action. If this returns something other than `undefined`,\r\n   * that return value will be used to rehydrate fulfilled & errored queries.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"next-redux-wrapper rehydration example\"\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * import { HYDRATE } from 'next-redux-wrapper'\r\n   *\r\n   * export const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   // highlight-start\r\n   *   extractRehydrationInfo(action, { reducerPath }) {\r\n   *     if (action.type === HYDRATE) {\r\n   *       return action.payload[reducerPath]\r\n   *     }\r\n   *   },\r\n   *   // highlight-end\r\n   *   endpoints: (build) => ({\r\n   *     // omitted\r\n   *   }),\r\n   * })\r\n   * ```\r\n   */\r\n  extractRehydrationInfo?: (\r\n    action: AnyAction,\r\n    {\r\n      reducerPath,\r\n    }: {\r\n      reducerPath: ReducerPath\r\n    }\r\n  ) =>\r\n    | undefined\r\n    | CombinedState<\r\n        NoInfer<Definitions>,\r\n        NoInfer<TagTypes>,\r\n        NoInfer<ReducerPath>\r\n      >\r\n}\r\n\r\nexport type CreateApi<Modules extends ModuleName> = {\r\n  /**\r\n   * Creates a service to use in your application. Contains only the basic redux logic (the core module).\r\n   *\r\n   * @link https://rtk-query-docs.netlify.app/api/createApi\r\n   */\r\n  <\r\n    BaseQuery extends BaseQueryFn,\r\n    Definitions extends EndpointDefinitions,\r\n    ReducerPath extends string = 'api',\r\n    TagTypes extends string = never\r\n  >(\r\n    options: CreateApiOptions<BaseQuery, Definitions, ReducerPath, TagTypes>\r\n  ): Api<BaseQuery, Definitions, ReducerPath, TagTypes, Modules>\r\n}\r\n\r\n/**\r\n * Builds a `createApi` method based on the provided `modules`.\r\n *\r\n * @link https://rtk-query-docs.netlify.app/concepts/customizing-create-api\r\n *\r\n * @example\r\n * ```ts\r\n * const MyContext = React.createContext<ReactReduxContextValue>(null as any);\r\n * const customCreateApi = buildCreateApi(\r\n *   coreModule(),\r\n *   reactHooksModule({ useDispatch: createDispatchHook(MyContext) })\r\n * );\r\n * ```\r\n *\r\n * @param modules - A variable number of modules that customize how the `createApi` method handles endpoints\r\n * @returns A `createApi` method using the provided `modules`.\r\n */\r\nexport function buildCreateApi<Modules extends [Module<any>, ...Module<any>[]]>(\r\n  ...modules: Modules\r\n): CreateApi<Modules[number]['name']> {\r\n  return function baseCreateApi(options) {\r\n    const extractRehydrationInfo = defaultMemoize((action: AnyAction) =>\r\n      options.extractRehydrationInfo?.(action, {\r\n        reducerPath: (options.reducerPath ?? 'api') as any,\r\n      })\r\n    )\r\n\r\n    const optionsWithDefaults: CreateApiOptions<any, any, any, any> = {\r\n      reducerPath: 'api',\r\n      keepUnusedDataFor: 60,\r\n      refetchOnMountOrArgChange: false,\r\n      refetchOnFocus: false,\r\n      refetchOnReconnect: false,\r\n      ...options,\r\n      extractRehydrationInfo,\r\n      serializeQueryArgs(queryArgsApi) {\r\n        let finalSerializeQueryArgs = defaultSerializeQueryArgs\r\n        if ('serializeQueryArgs' in queryArgsApi.endpointDefinition) {\r\n          const endpointSQA =\r\n            queryArgsApi.endpointDefinition.serializeQueryArgs!\r\n          finalSerializeQueryArgs = (queryArgsApi) => {\r\n            const initialResult = endpointSQA(queryArgsApi)\r\n            if (typeof initialResult === 'string') {\r\n              // If the user function returned a string, use it as-is\r\n              return initialResult\r\n            } else {\r\n              // Assume they returned an object (such as a subset of the original\r\n              // query args) or a primitive, and serialize it ourselves\r\n              return defaultSerializeQueryArgs({\r\n                ...queryArgsApi,\r\n                queryArgs: initialResult,\r\n              })\r\n            }\r\n          }\r\n        } else if (options.serializeQueryArgs) {\r\n          finalSerializeQueryArgs = options.serializeQueryArgs\r\n        }\r\n\r\n        return finalSerializeQueryArgs(queryArgsApi)\r\n      },\r\n      tagTypes: [...(options.tagTypes || [])],\r\n    }\r\n\r\n    const context: ApiContext<EndpointDefinitions> = {\r\n      endpointDefinitions: {},\r\n      batch(fn) {\r\n        // placeholder \"batch\" method to be overridden by plugins, for example with React.unstable_batchedUpdate\r\n        fn()\r\n      },\r\n      apiUid: nanoid(),\r\n      extractRehydrationInfo,\r\n      hasRehydrationInfo: defaultMemoize(\r\n        (action) => extractRehydrationInfo(action) != null\r\n      ),\r\n    }\r\n\r\n    const api = {\r\n      injectEndpoints,\r\n      enhanceEndpoints({ addTagTypes, endpoints }) {\r\n        if (addTagTypes) {\r\n          for (const eT of addTagTypes) {\r\n            if (!optionsWithDefaults.tagTypes!.includes(eT as any)) {\r\n              ;(optionsWithDefaults.tagTypes as any[]).push(eT)\r\n            }\r\n          }\r\n        }\r\n        if (endpoints) {\r\n          for (const [endpointName, partialDefinition] of Object.entries(\r\n            endpoints\r\n          )) {\r\n            if (typeof partialDefinition === 'function') {\r\n              partialDefinition(context.endpointDefinitions[endpointName])\r\n            } else {\r\n              Object.assign(\r\n                context.endpointDefinitions[endpointName] || {},\r\n                partialDefinition\r\n              )\r\n            }\r\n          }\r\n        }\r\n        return api\r\n      },\r\n    } as Api<BaseQueryFn, {}, string, string, Modules[number]['name']>\r\n\r\n    const initializedModules = modules.map((m) =>\r\n      m.init(api as any, optionsWithDefaults as any, context)\r\n    )\r\n\r\n    function injectEndpoints(\r\n      inject: Parameters<typeof api.injectEndpoints>[0]\r\n    ) {\r\n      const evaluatedEndpoints = inject.endpoints({\r\n        query: (x) => ({ ...x, type: DefinitionType.query } as any),\r\n        mutation: (x) => ({ ...x, type: DefinitionType.mutation } as any),\r\n      })\r\n\r\n      for (const [endpointName, definition] of Object.entries(\r\n        evaluatedEndpoints\r\n      )) {\r\n        if (\r\n          !inject.overrideExisting &&\r\n          endpointName in context.endpointDefinitions\r\n        ) {\r\n          if (\r\n            typeof process !== 'undefined' &&\r\n            process.env.NODE_ENV === 'development'\r\n          ) {\r\n            console.error(\r\n              `called \\`injectEndpoints\\` to override already-existing endpointName ${endpointName} without specifying \\`overrideExisting: true\\``\r\n            )\r\n          }\r\n\r\n          continue\r\n        }\r\n\r\n        context.endpointDefinitions[endpointName] = definition\r\n        for (const m of initializedModules) {\r\n          m.injectEndpoint(endpointName, definition)\r\n        }\r\n      }\r\n\r\n      return api as any\r\n    }\r\n\r\n    return api.injectEndpoints({ endpoints: options.endpoints as any })\r\n  }\r\n}\r\n", "import type { BaseQueryFn } from './baseQueryTypes'\r\n\r\nconst _NEVER = /* @__PURE__ */ Symbol()\r\nexport type NEVER = typeof _NEVER\r\n\r\n/**\r\n * Creates a \"fake\" baseQuery to be used if your api *only* uses the `queryFn` definition syntax.\r\n * This also allows you to specify a specific error type to be shared by all your `queryFn` definitions.\r\n */\r\nexport function fakeBaseQuery<ErrorType>(): BaseQueryFn<\r\n  void,\r\n  NEVER,\r\n  ErrorType,\r\n  {}\r\n> {\r\n  return function () {\r\n    throw new Error(\r\n      'When using `fakeBaseQuery`, all queries & mutations must use the `queryFn` definition syntax.'\r\n    )\r\n  }\r\n}\r\n", "import type { AnyAction, Middleware, ThunkDispatch } from '@reduxjs/toolkit'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport type {\r\n  EndpointDefinitions,\r\n  FullTagDescription,\r\n} from '../../endpointDefinitions'\r\nimport type { QueryStatus, QuerySubState, RootState } from '../apiState'\r\nimport type { QueryThunkArg } from '../buildThunks'\r\nimport { buildCacheCollectionHandler } from './cacheCollection'\r\nimport { buildInvalidationByTagsHandler } from './invalidationByTags'\r\nimport { buildPollingHandler } from './polling'\r\nimport type {\r\n  BuildMiddlewareInput,\r\n  InternalHandlerBuilder,\r\n  InternalMiddlewareState,\r\n} from './types'\r\nimport { buildWindowEventHandler } from './windowEventHandling'\r\nimport { buildCacheLifecycleHandler } from './cacheLifecycle'\r\nimport { buildQueryLifecycleHandler } from './queryLifecycle'\r\nimport { buildDevCheckHandler } from './devMiddleware'\r\nimport { buildBatchedActionsHandler } from './batchActions'\r\n\r\nexport function buildMiddleware<\r\n  Definitions extends EndpointDefinitions,\r\n  ReducerPath extends string,\r\n  TagTypes extends string\r\n>(input: BuildMiddlewareInput<Definitions, ReducerPath, TagTypes>) {\r\n  const { reducerPath, queryThunk, api, context } = input\r\n  const { apiUid } = context\r\n\r\n  const actions = {\r\n    invalidateTags: createAction<\r\n      Array<TagTypes | FullTagDescription<TagTypes>>\r\n    >(`${reducerPath}/invalidateTags`),\r\n  }\r\n\r\n  const isThisApiSliceAction = (action: AnyAction) => {\r\n    return (\r\n      !!action &&\r\n      typeof action.type === 'string' &&\r\n      action.type.startsWith(`${reducerPath}/`)\r\n    )\r\n  }\r\n\r\n  const handlerBuilders: InternalHandlerBuilder[] = [\r\n    buildDevCheckHandler,\r\n    buildCacheCollectionHandler,\r\n    buildInvalidationByTagsHandler,\r\n    buildPollingHandler,\r\n    buildCacheLifecycleHandler,\r\n    buildQueryLifecycleHandler,\r\n  ]\r\n\r\n  const middleware: Middleware<\r\n    {},\r\n    RootState<Definitions, string, ReducerPath>,\r\n    ThunkDispatch<any, any, AnyAction>\r\n  > = (mwApi) => {\r\n    let initialized = false\r\n\r\n    let internalState: InternalMiddlewareState = {\r\n      currentSubscriptions: {},\r\n    }\r\n\r\n    const builderArgs = {\r\n      ...(input as any as BuildMiddlewareInput<\r\n        EndpointDefinitions,\r\n        string,\r\n        string\r\n      >),\r\n      internalState,\r\n      refetchQuery,\r\n    }\r\n\r\n    const handlers = handlerBuilders.map((build) => build(builderArgs))\r\n\r\n    const batchedActionsHandler = buildBatchedActionsHandler(builderArgs)\r\n    const windowEventsHandler = buildWindowEventHandler(builderArgs)\r\n\r\n    return (next) => {\r\n      return (action) => {\r\n        if (!initialized) {\r\n          initialized = true\r\n          // dispatch before any other action\r\n          mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid))\r\n        }\r\n\r\n        const mwApiWithNext = { ...mwApi, next }\r\n\r\n        const stateBefore = mwApi.getState()\r\n\r\n        const [actionShouldContinue, hasSubscription] = batchedActionsHandler(\r\n          action,\r\n          mwApiWithNext,\r\n          stateBefore\r\n        )\r\n\r\n        let res: any\r\n\r\n        if (actionShouldContinue) {\r\n          res = next(action)\r\n        } else {\r\n          res = hasSubscription\r\n        }\r\n\r\n        if (!!mwApi.getState()[reducerPath]) {\r\n          // Only run these checks if the middleware is registered okay\r\n\r\n          // This looks for actions that aren't specific to the API slice\r\n          windowEventsHandler(action, mwApiWithNext, stateBefore)\r\n\r\n          if (\r\n            isThisApiSliceAction(action) ||\r\n            context.hasRehydrationInfo(action)\r\n          ) {\r\n            // Only run these additional checks if the actions are part of the API slice,\r\n            // or the action has hydration-related data\r\n            for (let handler of handlers) {\r\n              handler(action, mwApiWithNext, stateBefore)\r\n            }\r\n          }\r\n        }\r\n\r\n        return res\r\n      }\r\n    }\r\n  }\r\n\r\n  return { middleware, actions }\r\n\r\n  function refetchQuery(\r\n    querySubState: Exclude<\r\n      QuerySubState<any>,\r\n      { status: QueryStatus.uninitialized }\r\n    >,\r\n    queryCacheKey: string,\r\n    override: Partial<QueryThunkArg> = {}\r\n  ) {\r\n    return queryThunk({\r\n      type: 'query',\r\n      endpointName: querySubState.endpointName,\r\n      originalArgs: querySubState.originalArgs,\r\n      subscribe: false,\r\n      forceRefetch: true,\r\n      queryCacheKey: queryCacheKey as any,\r\n      ...override,\r\n    })\r\n  }\r\n}\r\n", "import type { BaseQueryFn } from '../../baseQueryTypes'\r\nimport type { QueryDefinition } from '../../endpointDefinitions'\r\nimport type { ConfigState, QueryCacheKey } from '../apiState'\r\nimport type {\r\n  QueryStateMeta,\r\n  SubMiddlewareApi,\r\n  TimeoutId,\r\n  InternalHandlerBuilder,\r\n  ApiMiddlewareInternalHandler,\r\n  InternalMiddlewareState,\r\n} from './types'\r\n\r\nexport type ReferenceCacheCollection = never\r\n\r\nfunction isObjectEmpty(obj: Record<any, any>) {\r\n  // Apparently a for..in loop is faster than `Object.keys()` here:\r\n  // https://stackoverflow.com/a/59787784/62937\r\n  for (let k in obj) {\r\n    // If there is at least one key, it's not empty\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\ndeclare module '../../endpointDefinitions' {\r\n  interface QueryExtraOptions<\r\n    TagTypes extends string,\r\n    ResultType,\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ReducerPath extends string = string\r\n  > {\r\n    /**\r\n     * Overrides the api-wide definition of `keepUnusedDataFor` for this endpoint only. _(This value is in seconds.)_\r\n     *\r\n     * This is how long RTK Query will keep your data cached for **after** the last component unsubscribes. For example, if you query an endpoint, then unmount the component, then mount another component that makes the same request within the given time frame, the most recent value will be served from the cache.\r\n     */\r\n    keepUnusedDataFor?: number\r\n  }\r\n}\r\n\r\n// Per https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value , browsers store\r\n// `setTimeout()` timer values in a 32-bit int. If we pass a value in that's larger than that,\r\n// it wraps and ends up executing immediately.\r\n// Our `keepUnusedDataFor` values are in seconds, so adjust the numbers here accordingly.\r\nexport const THIRTY_TWO_BIT_MAX_INT = 2_147_483_647\r\nexport const THIRTY_TWO_BIT_MAX_TIMER_SECONDS = 2_147_483_647 / 1_000 - 1\r\n\r\nexport const buildCacheCollectionHandler: InternalHandlerBuilder = ({\r\n  reducerPath,\r\n  api,\r\n  context,\r\n  internalState,\r\n}) => {\r\n  const { removeQueryResult, unsubscribeQueryResult } = api.internalActions\r\n\r\n  function anySubscriptionsRemainingForKey(queryCacheKey: string) {\r\n    const subscriptions = internalState.currentSubscriptions[queryCacheKey]\r\n    return !!subscriptions && !isObjectEmpty(subscriptions)\r\n  }\r\n\r\n  const currentRemovalTimeouts: QueryStateMeta<TimeoutId> = {}\r\n\r\n  const handler: ApiMiddlewareInternalHandler = (\r\n    action,\r\n    mwApi,\r\n    internalState\r\n  ) => {\r\n    if (unsubscribeQueryResult.match(action)) {\r\n      const state = mwApi.getState()[reducerPath]\r\n      const { queryCacheKey } = action.payload\r\n\r\n      handleUnsubscribe(\r\n        queryCacheKey,\r\n        state.queries[queryCacheKey]?.endpointName,\r\n        mwApi,\r\n        state.config\r\n      )\r\n    }\r\n\r\n    if (api.util.resetApiState.match(action)) {\r\n      for (const [key, timeout] of Object.entries(currentRemovalTimeouts)) {\r\n        if (timeout) clearTimeout(timeout)\r\n        delete currentRemovalTimeouts[key]\r\n      }\r\n    }\r\n\r\n    if (context.hasRehydrationInfo(action)) {\r\n      const state = mwApi.getState()[reducerPath]\r\n      const { queries } = context.extractRehydrationInfo(action)!\r\n      for (const [queryCacheKey, queryState] of Object.entries(queries)) {\r\n        // Gotcha:\r\n        // If rehydrating before the endpoint has been injected,the global `keepUnusedDataFor`\r\n        // will be used instead of the endpoint-specific one.\r\n        handleUnsubscribe(\r\n          queryCacheKey as QueryCacheKey,\r\n          queryState?.endpointName,\r\n          mwApi,\r\n          state.config\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleUnsubscribe(\r\n    queryCacheKey: QueryCacheKey,\r\n    endpointName: string | undefined,\r\n    api: SubMiddlewareApi,\r\n    config: ConfigState<string>\r\n  ) {\r\n    const endpointDefinition = context.endpointDefinitions[\r\n      endpointName!\r\n    ] as QueryDefinition<any, any, any, any>\r\n    const keepUnusedDataFor =\r\n      endpointDefinition?.keepUnusedDataFor ?? config.keepUnusedDataFor\r\n\r\n    if (keepUnusedDataFor === Infinity) {\r\n      // Hey, user said keep this forever!\r\n      return\r\n    }\r\n    // Prevent `setTimeout` timers from overflowing a 32-bit internal int, by\r\n    // clamping the max value to be at most 1000ms less than the 32-bit max.\r\n    // Look, a 24.8-day keepalive ought to be enough for anybody, right? :)\r\n    // Also avoid negative values too.\r\n    const finalKeepUnusedDataFor = Math.max(\r\n      0,\r\n      Math.min(keepUnusedDataFor, THIRTY_TWO_BIT_MAX_TIMER_SECONDS)\r\n    )\r\n\r\n    if (!anySubscriptionsRemainingForKey(queryCacheKey)) {\r\n      const currentTimeout = currentRemovalTimeouts[queryCacheKey]\r\n      if (currentTimeout) {\r\n        clearTimeout(currentTimeout)\r\n      }\r\n      currentRemovalTimeouts[queryCacheKey] = setTimeout(() => {\r\n        if (!anySubscriptionsRemainingForKey(queryCacheKey)) {\r\n          api.dispatch(removeQueryResult({ queryCacheKey }))\r\n        }\r\n        delete currentRemovalTimeouts![queryCacheKey]\r\n      }, finalKeepUnusedDataFor * 1000)\r\n    }\r\n  }\r\n\r\n  return handler\r\n}\r\n", "import { isAnyOf, isFulfilled, isRejectedWithValue } from '@reduxjs/toolkit'\r\n\r\nimport type { FullTagDescription } from '../../endpointDefinitions'\r\nimport { calculateProvidedBy } from '../../endpointDefinitions'\r\nimport type { QueryCacheKey } from '../apiState'\r\nimport { QueryStatus } from '../apiState'\r\nimport { calculateProvidedByThunk } from '../buildThunks'\r\nimport type {\r\n  SubMiddlewareApi,\r\n  InternalHandlerBuilder,\r\n  ApiMiddlewareInternalHandler,\r\n} from './types'\r\n\r\nexport const buildInvalidationByTagsHandler: InternalHandlerBuilder = ({\r\n  reducerPath,\r\n  context,\r\n  context: { endpointDefinitions },\r\n  mutationThunk,\r\n  api,\r\n  assertTagType,\r\n  refetchQuery,\r\n}) => {\r\n  const { removeQueryResult } = api.internalActions\r\n  const isThunkActionWithTags = isAnyOf(\r\n    isFulfilled(mutationThunk),\r\n    isRejectedWithValue(mutationThunk)\r\n  )\r\n\r\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\r\n    if (isThunkActionWithTags(action)) {\r\n      invalidateTags(\r\n        calculateProvidedByThunk(\r\n          action,\r\n          'invalidatesTags',\r\n          endpointDefinitions,\r\n          assertTagType\r\n        ),\r\n        mwApi\r\n      )\r\n    }\r\n\r\n    if (api.util.invalidateTags.match(action)) {\r\n      invalidateTags(\r\n        calculateProvidedBy(\r\n          action.payload,\r\n          undefined,\r\n          undefined,\r\n          undefined,\r\n          undefined,\r\n          assertTagType\r\n        ),\r\n        mwApi\r\n      )\r\n    }\r\n  }\r\n\r\n  function invalidateTags(\r\n    tags: readonly FullTagDescription<string>[],\r\n    mwApi: SubMiddlewareApi\r\n  ) {\r\n    const rootState = mwApi.getState()\r\n    const state = rootState[reducerPath]\r\n\r\n    const toInvalidate = api.util.selectInvalidatedBy(rootState, tags)\r\n\r\n    context.batch(() => {\r\n      const valuesArray = Array.from(toInvalidate.values())\r\n      for (const { queryCacheKey } of valuesArray) {\r\n        const querySubState = state.queries[queryCacheKey]\r\n        const subscriptionSubState = state.subscriptions[queryCacheKey] ?? {}\r\n\r\n        if (querySubState) {\r\n          if (Object.keys(subscriptionSubState).length === 0) {\r\n            mwApi.dispatch(\r\n              removeQueryResult({\r\n                queryCacheKey: queryCacheKey as QueryCacheKey,\r\n              })\r\n            )\r\n          } else if (querySubState.status !== QueryStatus.uninitialized) {\r\n            mwApi.dispatch(refetchQuery(querySubState, queryCacheKey))\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return handler\r\n}\r\n", "import type { QuerySubstateIdentifier, Subscribers } from '../apiState'\r\nimport { QueryStatus } from '../apiState'\r\nimport type {\r\n  QueryStateMeta,\r\n  SubMiddlewareApi,\r\n  TimeoutId,\r\n  InternalHandlerBuilder,\r\n  ApiMiddlewareInternalHandler,\r\n  InternalMiddlewareState,\r\n} from './types'\r\n\r\nexport const buildPollingHandler: InternalHandlerBuilder = ({\r\n  reducerPath,\r\n  queryThunk,\r\n  api,\r\n  refetchQuery,\r\n  internalState,\r\n}) => {\r\n  const currentPolls: QueryStateMeta<{\r\n    nextPollTimestamp: number\r\n    timeout?: TimeoutId\r\n    pollingInterval: number\r\n  }> = {}\r\n\r\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\r\n    if (\r\n      api.internalActions.updateSubscriptionOptions.match(action) ||\r\n      api.internalActions.unsubscribeQueryResult.match(action)\r\n    ) {\r\n      updatePollingInterval(action.payload, mwApi)\r\n    }\r\n\r\n    if (\r\n      queryThunk.pending.match(action) ||\r\n      (queryThunk.rejected.match(action) && action.meta.condition)\r\n    ) {\r\n      updatePollingInterval(action.meta.arg, mwApi)\r\n    }\r\n\r\n    if (\r\n      queryThunk.fulfilled.match(action) ||\r\n      (queryThunk.rejected.match(action) && !action.meta.condition)\r\n    ) {\r\n      startNextPoll(action.meta.arg, mwApi)\r\n    }\r\n\r\n    if (api.util.resetApiState.match(action)) {\r\n      clearPolls()\r\n    }\r\n  }\r\n\r\n  function startNextPoll(\r\n    { queryCacheKey }: QuerySubstateIdentifier,\r\n    api: SubMiddlewareApi\r\n  ) {\r\n    const state = api.getState()[reducerPath]\r\n    const querySubState = state.queries[queryCacheKey]\r\n    const subscriptions = internalState.currentSubscriptions[queryCacheKey]\r\n\r\n    if (!querySubState || querySubState.status === QueryStatus.uninitialized)\r\n      return\r\n\r\n    const lowestPollingInterval = findLowestPollingInterval(subscriptions)\r\n    if (!Number.isFinite(lowestPollingInterval)) return\r\n\r\n    const currentPoll = currentPolls[queryCacheKey]\r\n\r\n    if (currentPoll?.timeout) {\r\n      clearTimeout(currentPoll.timeout)\r\n      currentPoll.timeout = undefined\r\n    }\r\n\r\n    const nextPollTimestamp = Date.now() + lowestPollingInterval\r\n\r\n    const currentInterval: typeof currentPolls[number] = (currentPolls[\r\n      queryCacheKey\r\n    ] = {\r\n      nextPollTimestamp,\r\n      pollingInterval: lowestPollingInterval,\r\n      timeout: setTimeout(() => {\r\n        currentInterval!.timeout = undefined\r\n        api.dispatch(refetchQuery(querySubState, queryCacheKey))\r\n      }, lowestPollingInterval),\r\n    })\r\n  }\r\n\r\n  function updatePollingInterval(\r\n    { queryCacheKey }: QuerySubstateIdentifier,\r\n    api: SubMiddlewareApi\r\n  ) {\r\n    const state = api.getState()[reducerPath]\r\n    const querySubState = state.queries[queryCacheKey]\r\n    const subscriptions = internalState.currentSubscriptions[queryCacheKey]\r\n\r\n    if (!querySubState || querySubState.status === QueryStatus.uninitialized) {\r\n      return\r\n    }\r\n\r\n    const lowestPollingInterval = findLowestPollingInterval(subscriptions)\r\n\r\n    if (!Number.isFinite(lowestPollingInterval)) {\r\n      cleanupPollForKey(queryCacheKey)\r\n      return\r\n    }\r\n\r\n    const currentPoll = currentPolls[queryCacheKey]\r\n    const nextPollTimestamp = Date.now() + lowestPollingInterval\r\n\r\n    if (!currentPoll || nextPollTimestamp < currentPoll.nextPollTimestamp) {\r\n      startNextPoll({ queryCacheKey }, api)\r\n    }\r\n  }\r\n\r\n  function cleanupPollForKey(key: string) {\r\n    const existingPoll = currentPolls[key]\r\n    if (existingPoll?.timeout) {\r\n      clearTimeout(existingPoll.timeout)\r\n    }\r\n    delete currentPolls[key]\r\n  }\r\n\r\n  function clearPolls() {\r\n    for (const key of Object.keys(currentPolls)) {\r\n      cleanupPollForKey(key)\r\n    }\r\n  }\r\n\r\n  function findLowestPollingInterval(subscribers: Subscribers = {}) {\r\n    let lowestPollingInterval = Number.POSITIVE_INFINITY\r\n    for (let key in subscribers) {\r\n      if (!!subscribers[key].pollingInterval) {\r\n        lowestPollingInterval = Math.min(\r\n          subscribers[key].pollingInterval!,\r\n          lowestPollingInterval\r\n        )\r\n      }\r\n    }\r\n\r\n    return lowestPollingInterval\r\n  }\r\n  return handler\r\n}\r\n", "import { QueryStatus } from '../apiState'\r\nimport type { QueryCacheKey } from '../apiState'\r\nimport { onFocus, onOnline } from '../setupListeners'\r\nimport type {\r\n  ApiMiddlewareInternalHandler,\r\n  InternalHandlerBuilder,\r\n  SubMiddlewareApi,\r\n} from './types'\r\n\r\nexport const buildWindowEventHandler: InternalHandlerBuilder = ({\r\n  reducerPath,\r\n  context,\r\n  api,\r\n  refetchQuery,\r\n  internalState,\r\n}) => {\r\n  const { removeQueryResult } = api.internalActions\r\n\r\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\r\n    if (onFocus.match(action)) {\r\n      refetchValidQueries(mwApi, 'refetchOnFocus')\r\n    }\r\n    if (onOnline.match(action)) {\r\n      refetchValidQueries(mwApi, 'refetchOnReconnect')\r\n    }\r\n  }\r\n\r\n  function refetchValidQueries(\r\n    api: SubMiddlewareApi,\r\n    type: 'refetchOnFocus' | 'refetchOnReconnect'\r\n  ) {\r\n    const state = api.getState()[reducerPath]\r\n    const queries = state.queries\r\n    const subscriptions = internalState.currentSubscriptions\r\n\r\n    context.batch(() => {\r\n      for (const queryCacheKey of Object.keys(subscriptions)) {\r\n        const querySubState = queries[queryCacheKey]\r\n        const subscriptionSubState = subscriptions[queryCacheKey]\r\n\r\n        if (!subscriptionSubState || !querySubState) continue\r\n\r\n        const shouldRefetch =\r\n          Object.values(subscriptionSubState).some(\r\n            (sub) => sub[type] === true\r\n          ) ||\r\n          (Object.values(subscriptionSubState).every(\r\n            (sub) => sub[type] === undefined\r\n          ) &&\r\n            state.config[type])\r\n\r\n        if (shouldRefetch) {\r\n          if (Object.keys(subscriptionSubState).length === 0) {\r\n            api.dispatch(\r\n              removeQueryResult({\r\n                queryCacheKey: queryCacheKey as QueryCacheKey,\r\n              })\r\n            )\r\n          } else if (querySubState.status !== QueryStatus.uninitialized) {\r\n            api.dispatch(refetchQuery(querySubState, queryCacheKey))\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return handler\r\n}\r\n", "import { isAsyncThunkAction, isFulfilled } from '@reduxjs/toolkit'\r\nimport type { AnyAction } from 'redux'\r\nimport type { ThunkDispatch } from 'redux-thunk'\r\nimport type { BaseQueryFn, BaseQueryMeta } from '../../baseQueryTypes'\r\nimport { DefinitionType } from '../../endpointDefinitions'\r\nimport type { RootState } from '../apiState'\r\nimport type {\r\n  MutationResultSelectorResult,\r\n  QueryResultSelectorResult,\r\n} from '../buildSelectors'\r\nimport { getMutationCacheKey } from '../buildSlice'\r\nimport type { PatchCollection, Recipe } from '../buildThunks'\r\nimport type {\r\n  ApiMiddlewareInternalHandler,\r\n  InternalHandlerBuilder,\r\n  PromiseWithKnownReason,\r\n  SubMiddlewareApi,\r\n} from './types'\r\n\r\nexport type ReferenceCacheLifecycle = never\r\n\r\ndeclare module '../../endpointDefinitions' {\r\n  export interface QueryBaseLifecycleApi<\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ResultType,\r\n    ReducerPath extends string = string\r\n  > extends LifecycleApi<ReducerPath> {\r\n    /**\r\n     * Gets the current value of this cache entry.\r\n     */\r\n    getCacheEntry(): QueryResultSelectorResult<\r\n      { type: DefinitionType.query } & BaseEndpointDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        ResultType\r\n      >\r\n    >\r\n    /**\r\n     * Updates the current cache entry value.\r\n     * For documentation see `api.util.updateQueryData`.\r\n     */\r\n    updateCachedData(updateRecipe: Recipe<ResultType>): PatchCollection\r\n  }\r\n\r\n  export interface MutationBaseLifecycleApi<\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ResultType,\r\n    ReducerPath extends string = string\r\n  > extends LifecycleApi<ReducerPath> {\r\n    /**\r\n     * Gets the current value of this cache entry.\r\n     */\r\n    getCacheEntry(): MutationResultSelectorResult<\r\n      { type: DefinitionType.mutation } & BaseEndpointDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        ResultType\r\n      >\r\n    >\r\n  }\r\n\r\n  export interface LifecycleApi<ReducerPath extends string = string> {\r\n    /**\r\n     * The dispatch method for the store\r\n     */\r\n    dispatch: ThunkDispatch<any, any, AnyAction>\r\n    /**\r\n     * A method to get the current state\r\n     */\r\n    getState(): RootState<any, any, ReducerPath>\r\n    /**\r\n     * `extra` as provided as `thunk.extraArgument` to the `configureStore` `getDefaultMiddleware` option.\r\n     */\r\n    extra: unknown\r\n    /**\r\n     * A unique ID generated for the mutation\r\n     */\r\n    requestId: string\r\n  }\r\n\r\n  export interface CacheLifecyclePromises<\r\n    ResultType = unknown,\r\n    MetaType = unknown\r\n  > {\r\n    /**\r\n     * Promise that will resolve with the first value for this cache key.\r\n     * This allows you to `await` until an actual value is in cache.\r\n     *\r\n     * If the cache entry is removed from the cache before any value has ever\r\n     * been resolved, this Promise will reject with\r\n     * `new Error('Promise never resolved before cacheEntryRemoved.')`\r\n     * to prevent memory leaks.\r\n     * You can just re-throw that error (or not handle it at all) -\r\n     * it will be caught outside of `cacheEntryAdded`.\r\n     *\r\n     * If you don't interact with this promise, it will not throw.\r\n     */\r\n    cacheDataLoaded: PromiseWithKnownReason<\r\n      {\r\n        /**\r\n         * The (transformed) query result.\r\n         */\r\n        data: ResultType\r\n        /**\r\n         * The `meta` returned by the `baseQuery`\r\n         */\r\n        meta: MetaType\r\n      },\r\n      typeof neverResolvedError\r\n    >\r\n    /**\r\n     * Promise that allows you to wait for the point in time when the cache entry\r\n     * has been removed from the cache, by not being used/subscribed to any more\r\n     * in the application for too long or by dispatching `api.util.resetApiState`.\r\n     */\r\n    cacheEntryRemoved: Promise<void>\r\n  }\r\n\r\n  export interface QueryCacheLifecycleApi<\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ResultType,\r\n    ReducerPath extends string = string\r\n  > extends QueryBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>,\r\n      CacheLifecyclePromises<ResultType, BaseQueryMeta<BaseQuery>> {}\r\n\r\n  export interface MutationCacheLifecycleApi<\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ResultType,\r\n    ReducerPath extends string = string\r\n  > extends MutationBaseLifecycleApi<\r\n        QueryArg,\r\n        BaseQuery,\r\n        ResultType,\r\n        ReducerPath\r\n      >,\r\n      CacheLifecyclePromises<ResultType, BaseQueryMeta<BaseQuery>> {}\r\n\r\n  interface QueryExtraOptions<\r\n    TagTypes extends string,\r\n    ResultType,\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ReducerPath extends string = string\r\n  > {\r\n    onCacheEntryAdded?(\r\n      arg: QueryArg,\r\n      api: QueryCacheLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>\r\n    ): Promise<void> | void\r\n  }\r\n\r\n  interface MutationExtraOptions<\r\n    TagTypes extends string,\r\n    ResultType,\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ReducerPath extends string = string\r\n  > {\r\n    onCacheEntryAdded?(\r\n      arg: QueryArg,\r\n      api: MutationCacheLifecycleApi<\r\n        QueryArg,\r\n        BaseQuery,\r\n        ResultType,\r\n        ReducerPath\r\n      >\r\n    ): Promise<void> | void\r\n  }\r\n}\r\n\r\nconst neverResolvedError = new Error(\r\n  'Promise never resolved before cacheEntryRemoved.'\r\n) as Error & {\r\n  message: 'Promise never resolved before cacheEntryRemoved.'\r\n}\r\n\r\nexport const buildCacheLifecycleHandler: InternalHandlerBuilder = ({\r\n  api,\r\n  reducerPath,\r\n  context,\r\n  queryThunk,\r\n  mutationThunk,\r\n  internalState,\r\n}) => {\r\n  const isQueryThunk = isAsyncThunkAction(queryThunk)\r\n  const isMutationThunk = isAsyncThunkAction(mutationThunk)\r\n  const isFulfilledThunk = isFulfilled(queryThunk, mutationThunk)\r\n\r\n  type CacheLifecycle = {\r\n    valueResolved?(value: { data: unknown; meta: unknown }): unknown\r\n    cacheEntryRemoved(): void\r\n  }\r\n  const lifecycleMap: Record<string, CacheLifecycle> = {}\r\n\r\n  const handler: ApiMiddlewareInternalHandler = (\r\n    action,\r\n    mwApi,\r\n    stateBefore\r\n  ) => {\r\n    const cacheKey = getCacheKey(action)\r\n\r\n    if (queryThunk.pending.match(action)) {\r\n      const oldState = stateBefore[reducerPath].queries[cacheKey]\r\n      const state = mwApi.getState()[reducerPath].queries[cacheKey]\r\n      if (!oldState && state) {\r\n        handleNewKey(\r\n          action.meta.arg.endpointName,\r\n          action.meta.arg.originalArgs,\r\n          cacheKey,\r\n          mwApi,\r\n          action.meta.requestId\r\n        )\r\n      }\r\n    } else if (mutationThunk.pending.match(action)) {\r\n      const state = mwApi.getState()[reducerPath].mutations[cacheKey]\r\n      if (state) {\r\n        handleNewKey(\r\n          action.meta.arg.endpointName,\r\n          action.meta.arg.originalArgs,\r\n          cacheKey,\r\n          mwApi,\r\n          action.meta.requestId\r\n        )\r\n      }\r\n    } else if (isFulfilledThunk(action)) {\r\n      const lifecycle = lifecycleMap[cacheKey]\r\n      if (lifecycle?.valueResolved) {\r\n        lifecycle.valueResolved({\r\n          data: action.payload,\r\n          meta: action.meta.baseQueryMeta,\r\n        })\r\n        delete lifecycle.valueResolved\r\n      }\r\n    } else if (\r\n      api.internalActions.removeQueryResult.match(action) ||\r\n      api.internalActions.removeMutationResult.match(action)\r\n    ) {\r\n      const lifecycle = lifecycleMap[cacheKey]\r\n      if (lifecycle) {\r\n        delete lifecycleMap[cacheKey]\r\n        lifecycle.cacheEntryRemoved()\r\n      }\r\n    } else if (api.util.resetApiState.match(action)) {\r\n      for (const [cacheKey, lifecycle] of Object.entries(lifecycleMap)) {\r\n        delete lifecycleMap[cacheKey]\r\n        lifecycle.cacheEntryRemoved()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getCacheKey(action: any) {\r\n    if (isQueryThunk(action)) return action.meta.arg.queryCacheKey\r\n    if (isMutationThunk(action)) return action.meta.requestId\r\n    if (api.internalActions.removeQueryResult.match(action))\r\n      return action.payload.queryCacheKey\r\n    if (api.internalActions.removeMutationResult.match(action))\r\n      return getMutationCacheKey(action.payload)\r\n    return ''\r\n  }\r\n\r\n  function handleNewKey(\r\n    endpointName: string,\r\n    originalArgs: any,\r\n    queryCacheKey: string,\r\n    mwApi: SubMiddlewareApi,\r\n    requestId: string\r\n  ) {\r\n    const endpointDefinition = context.endpointDefinitions[endpointName]\r\n    const onCacheEntryAdded = endpointDefinition?.onCacheEntryAdded\r\n    if (!onCacheEntryAdded) return\r\n\r\n    let lifecycle = {} as CacheLifecycle\r\n\r\n    const cacheEntryRemoved = new Promise<void>((resolve) => {\r\n      lifecycle.cacheEntryRemoved = resolve\r\n    })\r\n    const cacheDataLoaded: PromiseWithKnownReason<\r\n      { data: unknown; meta: unknown },\r\n      typeof neverResolvedError\r\n    > = Promise.race([\r\n      new Promise<{ data: unknown; meta: unknown }>((resolve) => {\r\n        lifecycle.valueResolved = resolve\r\n      }),\r\n      cacheEntryRemoved.then(() => {\r\n        throw neverResolvedError\r\n      }),\r\n    ])\r\n    // prevent uncaught promise rejections from happening.\r\n    // if the original promise is used in any way, that will create a new promise that will throw again\r\n    cacheDataLoaded.catch(() => {})\r\n    lifecycleMap[queryCacheKey] = lifecycle\r\n    const selector = (api.endpoints[endpointName] as any).select(\r\n      endpointDefinition.type === DefinitionType.query\r\n        ? originalArgs\r\n        : queryCacheKey\r\n    )\r\n\r\n    const extra = mwApi.dispatch((_, __, extra) => extra)\r\n    const lifecycleApi = {\r\n      ...mwApi,\r\n      getCacheEntry: () => selector(mwApi.getState()),\r\n      requestId,\r\n      extra,\r\n      updateCachedData: (endpointDefinition.type === DefinitionType.query\r\n        ? (updateRecipe: Recipe<any>) =>\r\n            mwApi.dispatch(\r\n              api.util.updateQueryData(\r\n                endpointName as never,\r\n                originalArgs,\r\n                updateRecipe\r\n              )\r\n            )\r\n        : undefined) as any,\r\n\r\n      cacheDataLoaded,\r\n      cacheEntryRemoved,\r\n    }\r\n\r\n    const runningHandler = onCacheEntryAdded(originalArgs, lifecycleApi)\r\n    // if a `neverResolvedError` was thrown, but not handled in the running handler, do not let it leak out further\r\n    Promise.resolve(runningHandler).catch((e) => {\r\n      if (e === neverResolvedError) return\r\n      throw e\r\n    })\r\n  }\r\n\r\n  return handler\r\n}\r\n", "import { isPending, isRejected, isFulfilled } from '@reduxjs/toolkit'\r\nimport type {\r\n  BaseQueryError,\r\n  BaseQueryFn,\r\n  BaseQueryMeta,\r\n} from '../../baseQueryTypes'\r\nimport { DefinitionType } from '../../endpointDefinitions'\r\nimport type { QueryFulfilledRejectionReason } from '../../endpointDefinitions'\r\nimport type { Recipe } from '../buildThunks'\r\nimport type {\r\n  PromiseWithKnownReason,\r\n  PromiseConstructorWithKnownReason,\r\n  InternalHandlerBuilder,\r\n  ApiMiddlewareInternalHandler,\r\n} from './types'\r\n\r\nexport type ReferenceQueryLifecycle = never\r\n\r\ndeclare module '../../endpointDefinitions' {\r\n  export interface QueryLifecyclePromises<\r\n    ResultType,\r\n    BaseQuery extends BaseQueryFn\r\n  > {\r\n    /**\r\n     * Promise that will resolve with the (transformed) query result.\r\n     *\r\n     * If the query fails, this promise will reject with the error.\r\n     *\r\n     * This allows you to `await` for the query to finish.\r\n     *\r\n     * If you don't interact with this promise, it will not throw.\r\n     */\r\n    queryFulfilled: PromiseWithKnownReason<\r\n      {\r\n        /**\r\n         * The (transformed) query result.\r\n         */\r\n        data: ResultType\r\n        /**\r\n         * The `meta` returned by the `baseQuery`\r\n         */\r\n        meta: BaseQueryMeta<BaseQuery>\r\n      },\r\n      QueryFulfilledRejectionReason<BaseQuery>\r\n    >\r\n  }\r\n\r\n  type QueryFulfilledRejectionReason<BaseQuery extends BaseQueryFn> =\r\n    | {\r\n        error: BaseQueryError<BaseQuery>\r\n        /**\r\n         * If this is `false`, that means this error was returned from the `baseQuery` or `queryFn` in a controlled manner.\r\n         */\r\n        isUnhandledError: false\r\n        /**\r\n         * The `meta` returned by the `baseQuery`\r\n         */\r\n        meta: BaseQueryMeta<BaseQuery>\r\n      }\r\n    | {\r\n        error: unknown\r\n        meta?: undefined\r\n        /**\r\n         * If this is `true`, that means that this error is the result of `baseQueryFn`, `queryFn`, `transformResponse` or `transformErrorResponse` throwing an error instead of handling it properly.\r\n         * There can not be made any assumption about the shape of `error`.\r\n         */\r\n        isUnhandledError: true\r\n      }\r\n\r\n  interface QueryExtraOptions<\r\n    TagTypes extends string,\r\n    ResultType,\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ReducerPath extends string = string\r\n  > {\r\n    /**\r\n     * A function that is called when the individual query is started. The function is called with a lifecycle api object containing properties such as `queryFulfilled`, allowing code to be run when a query is started, when it succeeds, and when it fails (i.e. throughout the lifecycle of an individual query/mutation call).\r\n     *\r\n     * Can be used to perform side-effects throughout the lifecycle of the query.\r\n     *\r\n     * @example\r\n     * ```ts\r\n     * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\r\n     * import { messageCreated } from './notificationsSlice\r\n     * export interface Post {\r\n     *   id: number\r\n     *   name: string\r\n     * }\r\n     *\r\n     * const api = createApi({\r\n     *   baseQuery: fetchBaseQuery({\r\n     *     baseUrl: '/',\r\n     *   }),\r\n     *   endpoints: (build) => ({\r\n     *     getPost: build.query<Post, number>({\r\n     *       query: (id) => `post/${id}`,\r\n     *       async onQueryStarted(id, { dispatch, queryFulfilled }) {\r\n     *         // `onStart` side-effect\r\n     *         dispatch(messageCreated('Fetching posts...'))\r\n     *         try {\r\n     *           const { data } = await queryFulfilled\r\n     *           // `onSuccess` side-effect\r\n     *           dispatch(messageCreated('Posts received!'))\r\n     *         } catch (err) {\r\n     *           // `onError` side-effect\r\n     *           dispatch(messageCreated('Error fetching posts!'))\r\n     *         }\r\n     *       }\r\n     *     }),\r\n     *   }),\r\n     * })\r\n     * ```\r\n     */\r\n    onQueryStarted?(\r\n      arg: QueryArg,\r\n      api: QueryLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>\r\n    ): Promise<void> | void\r\n  }\r\n\r\n  interface MutationExtraOptions<\r\n    TagTypes extends string,\r\n    ResultType,\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ReducerPath extends string = string\r\n  > {\r\n    /**\r\n     * A function that is called when the individual mutation is started. The function is called with a lifecycle api object containing properties such as `queryFulfilled`, allowing code to be run when a query is started, when it succeeds, and when it fails (i.e. throughout the lifecycle of an individual query/mutation call).\r\n     *\r\n     * Can be used for `optimistic updates`.\r\n     *\r\n     * @example\r\n     *\r\n     * ```ts\r\n     * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query'\r\n     * export interface Post {\r\n     *   id: number\r\n     *   name: string\r\n     * }\r\n     *\r\n     * const api = createApi({\r\n     *   baseQuery: fetchBaseQuery({\r\n     *     baseUrl: '/',\r\n     *   }),\r\n     *   tagTypes: ['Post'],\r\n     *   endpoints: (build) => ({\r\n     *     getPost: build.query<Post, number>({\r\n     *       query: (id) => `post/${id}`,\r\n     *       providesTags: ['Post'],\r\n     *     }),\r\n     *     updatePost: build.mutation<void, Pick<Post, 'id'> & Partial<Post>>({\r\n     *       query: ({ id, ...patch }) => ({\r\n     *         url: `post/${id}`,\r\n     *         method: 'PATCH',\r\n     *         body: patch,\r\n     *       }),\r\n     *       invalidatesTags: ['Post'],\r\n     *       async onQueryStarted({ id, ...patch }, { dispatch, queryFulfilled }) {\r\n     *         const patchResult = dispatch(\r\n     *           api.util.updateQueryData('getPost', id, (draft) => {\r\n     *             Object.assign(draft, patch)\r\n     *           })\r\n     *         )\r\n     *         try {\r\n     *           await queryFulfilled\r\n     *         } catch {\r\n     *           patchResult.undo()\r\n     *         }\r\n     *       },\r\n     *     }),\r\n     *   }),\r\n     * })\r\n     * ```\r\n     */\r\n    onQueryStarted?(\r\n      arg: QueryArg,\r\n      api: MutationLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>\r\n    ): Promise<void> | void\r\n  }\r\n\r\n  export interface QueryLifecycleApi<\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ResultType,\r\n    ReducerPath extends string = string\r\n  > extends QueryBaseLifecycleApi<QueryArg, BaseQuery, ResultType, ReducerPath>,\r\n      QueryLifecyclePromises<ResultType, BaseQuery> {}\r\n\r\n  export interface MutationLifecycleApi<\r\n    QueryArg,\r\n    BaseQuery extends BaseQueryFn,\r\n    ResultType,\r\n    ReducerPath extends string = string\r\n  > extends MutationBaseLifecycleApi<\r\n        QueryArg,\r\n        BaseQuery,\r\n        ResultType,\r\n        ReducerPath\r\n      >,\r\n      QueryLifecyclePromises<ResultType, BaseQuery> {}\r\n}\r\n\r\nexport const buildQueryLifecycleHandler: InternalHandlerBuilder = ({\r\n  api,\r\n  context,\r\n  queryThunk,\r\n  mutationThunk,\r\n}) => {\r\n  const isPendingThunk = isPending(queryThunk, mutationThunk)\r\n  const isRejectedThunk = isRejected(queryThunk, mutationThunk)\r\n  const isFullfilledThunk = isFulfilled(queryThunk, mutationThunk)\r\n\r\n  type CacheLifecycle = {\r\n    resolve(value: { data: unknown; meta: unknown }): unknown\r\n    reject(value: QueryFulfilledRejectionReason<any>): unknown\r\n  }\r\n  const lifecycleMap: Record<string, CacheLifecycle> = {}\r\n\r\n  const handler: ApiMiddlewareInternalHandler = (action, mwApi) => {\r\n    if (isPendingThunk(action)) {\r\n      const {\r\n        requestId,\r\n        arg: { endpointName, originalArgs },\r\n      } = action.meta\r\n      const endpointDefinition = context.endpointDefinitions[endpointName]\r\n      const onQueryStarted = endpointDefinition?.onQueryStarted\r\n      if (onQueryStarted) {\r\n        const lifecycle = {} as CacheLifecycle\r\n        const queryFulfilled =\r\n          new (Promise as PromiseConstructorWithKnownReason)<\r\n            { data: unknown; meta: unknown },\r\n            QueryFulfilledRejectionReason<any>\r\n          >((resolve, reject) => {\r\n            lifecycle.resolve = resolve\r\n            lifecycle.reject = reject\r\n          })\r\n        // prevent uncaught promise rejections from happening.\r\n        // if the original promise is used in any way, that will create a new promise that will throw again\r\n        queryFulfilled.catch(() => {})\r\n        lifecycleMap[requestId] = lifecycle\r\n        const selector = (api.endpoints[endpointName] as any).select(\r\n          endpointDefinition.type === DefinitionType.query\r\n            ? originalArgs\r\n            : requestId\r\n        )\r\n\r\n        const extra = mwApi.dispatch((_, __, extra) => extra)\r\n        const lifecycleApi = {\r\n          ...mwApi,\r\n          getCacheEntry: () => selector(mwApi.getState()),\r\n          requestId,\r\n          extra,\r\n          updateCachedData: (endpointDefinition.type === DefinitionType.query\r\n            ? (updateRecipe: Recipe<any>) =>\r\n                mwApi.dispatch(\r\n                  api.util.updateQueryData(\r\n                    endpointName as never,\r\n                    originalArgs,\r\n                    updateRecipe\r\n                  )\r\n                )\r\n            : undefined) as any,\r\n          queryFulfilled,\r\n        }\r\n        onQueryStarted(originalArgs, lifecycleApi)\r\n      }\r\n    } else if (isFullfilledThunk(action)) {\r\n      const { requestId, baseQueryMeta } = action.meta\r\n      lifecycleMap[requestId]?.resolve({\r\n        data: action.payload,\r\n        meta: baseQueryMeta,\r\n      })\r\n      delete lifecycleMap[requestId]\r\n    } else if (isRejectedThunk(action)) {\r\n      const { requestId, rejectedWithValue, baseQueryMeta } = action.meta\r\n      lifecycleMap[requestId]?.reject({\r\n        error: action.payload ?? action.error,\r\n        isUnhandledError: !rejectedWithValue,\r\n        meta: baseQueryMeta as any,\r\n      })\r\n      delete lifecycleMap[requestId]\r\n    }\r\n  }\r\n\r\n  return handler\r\n}\r\n", "import type { InternalHandlerBuilder } from './types'\r\n\r\nexport const buildDevCheckHandler: InternalHandlerBuilder = ({\r\n  api,\r\n  context: { apiUid },\r\n  reducerPath,\r\n}) => {\r\n  return (action, mwApi) => {\r\n    if (api.util.resetApiState.match(action)) {\r\n      // dispatch after api reset\r\n      mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid))\r\n    }\r\n\r\n    if (\r\n      typeof process !== 'undefined' &&\r\n      process.env.NODE_ENV === 'development'\r\n    ) {\r\n      if (\r\n        api.internalActions.middlewareRegistered.match(action) &&\r\n        action.payload === apiUid &&\r\n        mwApi.getState()[reducerPath]?.config?.middlewareRegistered ===\r\n          'conflict'\r\n      ) {\r\n        console.warn(`There is a mismatch between slice and middleware for the reducerPath \"${reducerPath}\".\r\nYou can only have one api per reducer path, this will lead to crashes in various situations!${\r\n          reducerPath === 'api'\r\n            ? `\r\nIf you have multiple apis, you *have* to specify the reducerPath option when using createApi!`\r\n            : ''\r\n        }`)\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import type { QueryThunk, RejectedAction } from '../buildThunks'\r\nimport type { InternalHandlerBuilder } from './types'\r\nimport type {\r\n  SubscriptionState,\r\n  QuerySubstateIdentifier,\r\n  Subscribers,\r\n} from '../apiState'\r\nimport { produceWithPatches } from 'immer'\r\nimport type { AnyAction } from '@reduxjs/toolkit';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\n// Copied from https://github.com/feross/queue-microtask\r\nlet promise: Promise<any>\r\nconst queueMicrotaskShim =\r\n  typeof queueMicrotask === 'function'\r\n    ? queueMicrotask.bind(\r\n        typeof window !== 'undefined'\r\n          ? window\r\n          : typeof global !== 'undefined'\r\n          ? global\r\n          : globalThis\r\n      )\r\n    : // reuse resolved promise, and allocate it lazily\r\n      (cb: () => void) =>\r\n        (promise || (promise = Promise.resolve())).then(cb).catch((err: any) =>\r\n          setTimeout(() => {\r\n            throw err\r\n          }, 0)\r\n        )\r\n\r\nexport const buildBatchedActionsHandler: InternalHandlerBuilder<\r\n  [actionShouldContinue: boolean, subscriptionExists: boolean]\r\n> = ({ api, queryThunk, internalState }) => {\r\n  const subscriptionsPrefix = `${api.reducerPath}/subscriptions`\r\n\r\n  let previousSubscriptions: SubscriptionState =\r\n    null as unknown as SubscriptionState\r\n\r\n  let dispatchQueued = false\r\n\r\n  const { updateSubscriptionOptions, unsubscribeQueryResult } =\r\n    api.internalActions\r\n\r\n  // Actually intentionally mutate the subscriptions state used in the middleware\r\n  // This is done to speed up perf when loading many components\r\n  const actuallyMutateSubscriptions = (\r\n    mutableState: SubscriptionState,\r\n    action: AnyAction\r\n  ) => {\r\n    if (updateSubscriptionOptions.match(action)) {\r\n      const { queryCacheKey, requestId, options } = action.payload\r\n\r\n      if (mutableState?.[queryCacheKey]?.[requestId]) {\r\n        mutableState[queryCacheKey]![requestId] = options\r\n      }\r\n      return true\r\n    }\r\n    if (unsubscribeQueryResult.match(action)) {\r\n      const { queryCacheKey, requestId } = action.payload\r\n      if (mutableState[queryCacheKey]) {\r\n        delete mutableState[queryCacheKey]![requestId]\r\n      }\r\n      return true\r\n    }\r\n    if (api.internalActions.removeQueryResult.match(action)) {\r\n      delete mutableState[action.payload.queryCacheKey]\r\n      return true\r\n    }\r\n    if (queryThunk.pending.match(action)) {\r\n      const {\r\n        meta: { arg, requestId },\r\n      } = action\r\n      if (arg.subscribe) {\r\n        const substate = (mutableState[arg.queryCacheKey] ??= {})\r\n        substate[requestId] =\r\n          arg.subscriptionOptions ?? substate[requestId] ?? {}\r\n\r\n        return true\r\n      }\r\n    }\r\n    if (queryThunk.rejected.match(action)) {\r\n      const {\r\n        meta: { condition, arg, requestId },\r\n      } = action\r\n      if (condition && arg.subscribe) {\r\n        const substate = (mutableState[arg.queryCacheKey] ??= {})\r\n        substate[requestId] =\r\n          arg.subscriptionOptions ?? substate[requestId] ?? {}\r\n\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  return (action, mwApi) => {\r\n    if (!previousSubscriptions) {\r\n      // Initialize it the first time this handler runs\r\n      previousSubscriptions = JSON.parse(\r\n        JSON.stringify(internalState.currentSubscriptions)\r\n      )\r\n    }\r\n\r\n    if (api.util.resetApiState.match(action)) {\r\n      previousSubscriptions = internalState.currentSubscriptions = {}\r\n      return [true, false]\r\n    }\r\n\r\n    // Intercept requests by hooks to see if they're subscribed\r\n    // Necessary because we delay updating store state to the end of the tick\r\n    if (api.internalActions.internal_probeSubscription.match(action)) {\r\n      const { queryCacheKey, requestId } = action.payload\r\n      const hasSubscription =\r\n        !!internalState.currentSubscriptions[queryCacheKey]?.[requestId]\r\n      return [false, hasSubscription]\r\n    }\r\n\r\n    // Update subscription data based on this action\r\n    const didMutate = actuallyMutateSubscriptions(\r\n      internalState.currentSubscriptions,\r\n      action\r\n    )\r\n\r\n    if (didMutate) {\r\n      if (!dispatchQueued) {\r\n        queueMicrotaskShim(() => {\r\n          // Deep clone the current subscription data\r\n          const newSubscriptions: SubscriptionState = JSON.parse(\r\n            JSON.stringify(internalState.currentSubscriptions)\r\n          )\r\n          // Figure out a smaller diff between original and current\r\n          const [, patches] = produceWithPatches(\r\n            previousSubscriptions,\r\n            () => newSubscriptions\r\n          )\r\n\r\n          // Sync the store state for visibility\r\n          mwApi.next(api.internalActions.subscriptionsUpdated(patches))\r\n          // Save the cloned state for later reference\r\n          previousSubscriptions = newSubscriptions\r\n          dispatchQueued = false\r\n        })\r\n        dispatchQueued = true\r\n      }\r\n\r\n      const isSubscriptionSliceAction =\r\n        !!action.type?.startsWith(subscriptionsPrefix)\r\n      const isAdditionalSubscriptionAction =\r\n        queryThunk.rejected.match(action) &&\r\n        action.meta.condition &&\r\n        !!action.meta.arg.subscribe\r\n\r\n      const actionShouldContinue =\r\n        !isSubscriptionSliceAction && !isAdditionalSubscriptionAction\r\n\r\n      return [actionShouldContinue, false]\r\n    }\r\n\r\n    return [true, false]\r\n  }\r\n}\r\n", "export type Id<T> = { [K in keyof T]: T[K] } & {}\r\nexport type WithRequiredProp<T, K extends keyof T> = Omit<T, K> &\r\n  Required<Pick<T, K>>\r\nexport type Override<T1, T2> = T2 extends any ? Omit<T1, keyof T2> & T2 : never\r\nexport function assertCast<T>(v: any): asserts v is T {}\r\n\r\nexport function safeAssign<T extends object>(\r\n  target: T,\r\n  ...args: Array<Partial<NoInfer<T>>>\r\n) {\r\n  Object.assign(target, ...args)\r\n}\r\n\r\n/**\r\n * Convert a Union type `(A|B)` to an intersection type `(A&B)`\r\n */\r\nexport type UnionToIntersection<U> = (\r\n  U extends any ? (k: U) => void : never\r\n) extends (k: infer I) => void\r\n  ? I\r\n  : never\r\n\r\nexport type NonOptionalKeys<T> = {\r\n  [K in keyof T]-?: undefined extends T[K] ? never : K\r\n}[keyof T]\r\n\r\nexport type HasRequiredProps<T, True, False> = NonOptionalKeys<T> extends never\r\n  ? False\r\n  : True\r\n\r\nexport type OptionalIfAllPropsOptional<T> = HasRequiredProps<T, T, T | never>\r\n\r\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\r\n\r\nexport type NonUndefined<T> = T extends undefined ? never : T\r\n\r\nexport type UnwrapPromise<T> = T extends PromiseLike<infer V> ? V : T\r\n\r\nexport type MaybePromise<T> = T | PromiseLike<T>\r\n\r\nexport type OmitFromUnion<T, K extends keyof T> = T extends any\r\n  ? Omit<T, K>\r\n  : never\r\n\r\nexport type IsAny<T, True, False = never> = true | false extends (\r\n  T extends never ? true : false\r\n)\r\n  ? True\r\n  : False\r\n\r\nexport type CastAny<T, CastTo> = IsAny<T, CastTo, T>\r\n", "/**\r\n * Note: this file should import all other files for type discovery and declaration merging\r\n */\r\nimport type {\r\n  PatchQueryDataThunk,\r\n  UpdateQueryDataThunk,\r\n  UpsertQueryDataThunk,\r\n} from './buildThunks'\r\nimport { buildThunks } from './buildThunks'\r\nimport type {\r\n  ActionCreatorWithPayload,\r\n  AnyAction,\r\n  Middleware,\r\n  Reducer,\r\n  ThunkAction,\r\n  ThunkDispatch,\r\n} from '@reduxjs/toolkit'\r\nimport type {\r\n  EndpointDefinitions,\r\n  QueryArgFrom,\r\n  QueryDefinition,\r\n  MutationDefinition,\r\n  AssertTagTypes,\r\n  TagDescription,\r\n} from '../endpointDefinitions'\r\nimport { isQueryDefinition, isMutationDefinition } from '../endpointDefinitions'\r\nimport type {\r\n  CombinedState,\r\n  QueryKeys,\r\n  MutationKeys,\r\n  RootState,\r\n} from './apiState'\r\nimport type { Api, Module } from '../apiTypes'\r\nimport { onFocus, onFocusLost, onOnline, onOffline } from './setupListeners'\r\nimport { buildSlice } from './buildSlice'\r\nimport { buildMiddleware } from './buildMiddleware'\r\nimport { buildSelectors } from './buildSelectors'\r\nimport type {\r\n  MutationActionCreatorResult,\r\n  QueryActionCreatorResult,\r\n} from './buildInitiate'\r\nimport { buildInitiate } from './buildInitiate'\r\nimport { assertCast, safeAssign } from '../tsHelpers'\r\nimport type { InternalSerializeQueryArgs } from '../defaultSerializeQueryArgs'\r\nimport type { SliceActions } from './buildSlice'\r\nimport type { BaseQueryFn } from '../baseQueryTypes'\r\n\r\nimport type { ReferenceCacheLifecycle } from './buildMiddleware/cacheLifecycle'\r\nimport type { ReferenceQueryLifecycle } from './buildMiddleware/queryLifecycle'\r\nimport type { ReferenceCacheCollection } from './buildMiddleware/cacheCollection'\r\nimport { enablePatches } from 'immer'\r\n\r\n/**\r\n * `ifOlderThan` - (default: `false` | `number`) - _number is value in seconds_\r\n * - If specified, it will only run the query if the difference between `new Date()` and the last `fulfilledTimeStamp` is greater than the given value\r\n *\r\n * @overloadSummary\r\n * `force`\r\n * - If `force: true`, it will ignore the `ifOlderThan` value if it is set and the query will be run even if it exists in the cache.\r\n */\r\nexport type PrefetchOptions =\r\n  | {\r\n      ifOlderThan?: false | number\r\n    }\r\n  | { force?: boolean }\r\n\r\nexport const coreModuleName = /* @__PURE__ */ Symbol()\r\nexport type CoreModule =\r\n  | typeof coreModuleName\r\n  | ReferenceCacheLifecycle\r\n  | ReferenceQueryLifecycle\r\n  | ReferenceCacheCollection\r\n\r\nexport interface ThunkWithReturnValue<T> extends ThunkAction<T, any, any, AnyAction> {}\r\n\r\ndeclare module '../apiTypes' {\r\n  export interface ApiModules<\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    BaseQuery extends BaseQueryFn,\r\n    Definitions extends EndpointDefinitions,\r\n    ReducerPath extends string,\r\n    TagTypes extends string\r\n  > {\r\n    [coreModuleName]: {\r\n      /**\r\n       * This api's reducer should be mounted at `store[api.reducerPath]`.\r\n       *\r\n       * @example\r\n       * ```ts\r\n       * configureStore({\r\n       *   reducer: {\r\n       *     [api.reducerPath]: api.reducer,\r\n       *   },\r\n       *   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),\r\n       * })\r\n       * ```\r\n       */\r\n      reducerPath: ReducerPath\r\n      /**\r\n       * Internal actions not part of the public API. Note: These are subject to change at any given time.\r\n       */\r\n      internalActions: InternalActions\r\n      /**\r\n       *  A standard redux reducer that enables core functionality. Make sure it's included in your store.\r\n       *\r\n       * @example\r\n       * ```ts\r\n       * configureStore({\r\n       *   reducer: {\r\n       *     [api.reducerPath]: api.reducer,\r\n       *   },\r\n       *   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),\r\n       * })\r\n       * ```\r\n       */\r\n      reducer: Reducer<\r\n        CombinedState<Definitions, TagTypes, ReducerPath>,\r\n        AnyAction\r\n      >\r\n      /**\r\n       * This is a standard redux middleware and is responsible for things like polling, garbage collection and a handful of other things. Make sure it's included in your store.\r\n       *\r\n       * @example\r\n       * ```ts\r\n       * configureStore({\r\n       *   reducer: {\r\n       *     [api.reducerPath]: api.reducer,\r\n       *   },\r\n       *   middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),\r\n       * })\r\n       * ```\r\n       */\r\n      middleware: Middleware<\r\n        {},\r\n        RootState<Definitions, string, ReducerPath>,\r\n        ThunkDispatch<any, any, AnyAction>\r\n      >\r\n      /**\r\n       * A collection of utility thunks for various situations.\r\n       */\r\n      util: {\r\n        /**\r\n         * This method had to be removed due to a conceptual bug in RTK.\r\n         *\r\n         * Despite TypeScript errors, it will continue working in the \"buggy\" way it did\r\n         * before in production builds and will be removed in the next major release.\r\n         *\r\n         * Nonetheless, you should immediately replace it with the new recommended approach.\r\n         * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for new guidance on SSR.\r\n         *\r\n         * Please see https://github.com/reduxjs/redux-toolkit/pull/2481 for details.\r\n         * @deprecated\r\n         */\r\n        getRunningOperationPromises: never // this is now types as `never` to immediately throw TS errors on use, but still allow for a comment\r\n\r\n        /**\r\n         * This method had to be removed due to a conceptual bug in RTK.\r\n         * It has been replaced by `api.util.getRunningQueryThunk` and `api.util.getRunningMutationThunk`.\r\n         * Please see https://github.com/reduxjs/redux-toolkit/pull/2481 for details.\r\n         * @deprecated\r\n         */\r\n        getRunningOperationPromise: never // this is now types as `never` to immediately throw TS errors on use, but still allow for a comment\r\n\r\n        /**\r\n         * A thunk that (if dispatched) will return a specific running query, identified\r\n         * by `endpointName` and `args`.\r\n         * If that query is not running, dispatching the thunk will result in `undefined`.\r\n         *\r\n         * Can be used to await a specific query triggered in any way,\r\n         * including via hook calls or manually dispatching `initiate` actions.\r\n         *\r\n         * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\r\n         */\r\n        getRunningQueryThunk<EndpointName extends QueryKeys<Definitions>>(\r\n          endpointName: EndpointName,\r\n          args: QueryArgFrom<Definitions[EndpointName]>\r\n        ): ThunkWithReturnValue<\r\n          | QueryActionCreatorResult<\r\n              Definitions[EndpointName] & { type: 'query' }\r\n            >\r\n          | undefined\r\n        >\r\n\r\n        /**\r\n         * A thunk that (if dispatched) will return a specific running mutation, identified\r\n         * by `endpointName` and `fixedCacheKey` or `requestId`.\r\n         * If that mutation is not running, dispatching the thunk will result in `undefined`.\r\n         *\r\n         * Can be used to await a specific mutation triggered in any way,\r\n         * including via hook trigger functions or manually dispatching `initiate` actions.\r\n         *\r\n         * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\r\n         */\r\n        getRunningMutationThunk<EndpointName extends MutationKeys<Definitions>>(\r\n          endpointName: EndpointName,\r\n          fixedCacheKeyOrRequestId: string\r\n        ): ThunkWithReturnValue<\r\n          | MutationActionCreatorResult<\r\n              Definitions[EndpointName] & { type: 'mutation' }\r\n            >\r\n          | undefined\r\n        >\r\n\r\n        /**\r\n         * A thunk that (if dispatched) will return all running queries.\r\n         *\r\n         * Useful for SSR scenarios to await all running queries triggered in any way,\r\n         * including via hook calls or manually dispatching `initiate` actions.\r\n         *\r\n         * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\r\n         */\r\n        getRunningQueriesThunk(): ThunkWithReturnValue<\r\n          Array<QueryActionCreatorResult<any>>\r\n        >\r\n\r\n        /**\r\n         * A thunk that (if dispatched) will return all running mutations.\r\n         *\r\n         * Useful for SSR scenarios to await all running mutations triggered in any way,\r\n         * including via hook calls or manually dispatching `initiate` actions.\r\n         *\r\n         * See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for details.\r\n         */\r\n        getRunningMutationsThunk(): ThunkWithReturnValue<\r\n          Array<MutationActionCreatorResult<any>>\r\n        >\r\n\r\n        /**\r\n         * A Redux thunk that can be used to manually trigger pre-fetching of data.\r\n         *\r\n         * The thunk accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and a set of options used to determine if the data actually should be re-fetched based on cache staleness.\r\n         *\r\n         * React Hooks users will most likely never need to use this directly, as the `usePrefetch` hook will dispatch this thunk internally as needed when you call the prefetching function supplied by the hook.\r\n         *\r\n         * @example\r\n         *\r\n         * ```ts no-transpile\r\n         * dispatch(api.util.prefetch('getPosts', undefined, { force: true }))\r\n         * ```\r\n         */\r\n        prefetch<EndpointName extends QueryKeys<Definitions>>(\r\n          endpointName: EndpointName,\r\n          arg: QueryArgFrom<Definitions[EndpointName]>,\r\n          options: PrefetchOptions\r\n        ): ThunkAction<void, any, any, AnyAction>\r\n        /**\r\n         * A Redux thunk action creator that, when dispatched, creates and applies a set of JSON diff/patch objects to the current state. This immediately updates the Redux state with those changes.\r\n         *\r\n         * The thunk action creator accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and an `updateRecipe` callback function. The callback receives an Immer-wrapped `draft` of the current state, and may modify the draft to match the expected results after the mutation completes successfully.\r\n         *\r\n         * The thunk executes _synchronously_, and returns an object containing `{patches: Patch[], inversePatches: Patch[], undo: () => void}`. The `patches` and `inversePatches` are generated using Immer's [`produceWithPatches` method](https://immerjs.github.io/immer/patches).\r\n         *\r\n         * This is typically used as the first step in implementing optimistic updates. The generated `inversePatches` can be used to revert the updates by calling `dispatch(patchQueryData(endpointName, args, inversePatches))`. Alternatively, the `undo` method can be called directly to achieve the same effect.\r\n         *\r\n         * Note that the first two arguments (`endpointName` and `args`) are used to determine which existing cache entry to update. If no existing cache entry is found, the `updateRecipe` callback will not run.\r\n         *\r\n         * @example\r\n         *\r\n         * ```ts\r\n         * const patchCollection = dispatch(\r\n         *   api.util.updateQueryData('getPosts', undefined, (draftPosts) => {\r\n         *     draftPosts.push({ id: 1, name: 'Teddy' })\r\n         *   })\r\n         * )\r\n         * ```\r\n         */\r\n        updateQueryData: UpdateQueryDataThunk<\r\n          Definitions,\r\n          RootState<Definitions, string, ReducerPath>\r\n        >\r\n        /** @deprecated renamed to `updateQueryData` */\r\n        updateQueryResult: UpdateQueryDataThunk<\r\n          Definitions,\r\n          RootState<Definitions, string, ReducerPath>\r\n        >\r\n        /**\r\n         * A Redux thunk action creator that, when dispatched, acts as an artificial API request to upsert a value into the cache.\r\n         *\r\n         * The thunk action creator accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and the data to upsert.\r\n         *\r\n         * If no cache entry for that cache key exists, a cache entry will be created and the data added. If a cache entry already exists, this will _overwrite_ the existing cache entry data.\r\n         *\r\n         * The thunk executes _asynchronously_, and returns a promise that resolves when the store has been updated.\r\n         *\r\n         * If dispatched while an actual request is in progress, both the upsert and request will be handled as soon as they resolve, resulting in a \"last result wins\" update behavior.\r\n         *\r\n         * @example\r\n         *\r\n         * ```ts\r\n         * await dispatch(\r\n         *   api.util.upsertQueryData('getPost', {id: 1}, {id: 1, text: \"Hello!\"})\r\n         * )\r\n         * ```\r\n         */\r\n        upsertQueryData: UpsertQueryDataThunk<\r\n          Definitions,\r\n          RootState<Definitions, string, ReducerPath>\r\n        >\r\n        /**\r\n         * A Redux thunk that applies a JSON diff/patch array to the cached data for a given query result. This immediately updates the Redux state with those changes.\r\n         *\r\n         * The thunk accepts three arguments: the name of the endpoint we are updating (such as `'getPost'`), the appropriate query arg values to construct the desired cache key, and a JSON diff/patch array as produced by Immer's `produceWithPatches`.\r\n         *\r\n         * This is typically used as the second step in implementing optimistic updates. If a request fails, the optimistically-applied changes can be reverted by dispatching `patchQueryData` with the `inversePatches` that were generated by `updateQueryData` earlier.\r\n         *\r\n         * In cases where it is desired to simply revert the previous changes, it may be preferable to call the `undo` method returned from dispatching `updateQueryData` instead.\r\n         *\r\n         * @example\r\n         * ```ts\r\n         * const patchCollection = dispatch(\r\n         *   api.util.updateQueryData('getPosts', undefined, (draftPosts) => {\r\n         *     draftPosts.push({ id: 1, name: 'Teddy' })\r\n         *   })\r\n         * )\r\n         *\r\n         * // later\r\n         * dispatch(\r\n         *   api.util.patchQueryData('getPosts', undefined, patchCollection.inversePatches)\r\n         * )\r\n         *\r\n         * // or\r\n         * patchCollection.undo()\r\n         * ```\r\n         */\r\n        patchQueryData: PatchQueryDataThunk<\r\n          Definitions,\r\n          RootState<Definitions, string, ReducerPath>\r\n        >\r\n        /** @deprecated renamed to `patchQueryData` */\r\n        patchQueryResult: PatchQueryDataThunk<\r\n          Definitions,\r\n          RootState<Definitions, string, ReducerPath>\r\n        >\r\n        /**\r\n         * A Redux action creator that can be dispatched to manually reset the api state completely. This will immediately remove all existing cache entries, and all queries will be considered 'uninitialized'.\r\n         *\r\n         * @example\r\n         *\r\n         * ```ts\r\n         * dispatch(api.util.resetApiState())\r\n         * ```\r\n         */\r\n        resetApiState: SliceActions['resetApiState']\r\n        /**\r\n         * A Redux action creator that can be used to manually invalidate cache tags for [automated re-fetching](../../usage/automated-refetching.mdx).\r\n         *\r\n         * The action creator accepts one argument: the cache tags to be invalidated. It returns an action with those tags as a payload, and the corresponding `invalidateTags` action type for the api.\r\n         *\r\n         * Dispatching the result of this action creator will [invalidate](../../usage/automated-refetching.mdx#invalidating-cache-data) the given tags, causing queries to automatically re-fetch if they are subscribed to cache data that [provides](../../usage/automated-refetching.mdx#providing-cache-data) the corresponding tags.\r\n         *\r\n         * The array of tags provided to the action creator should be in one of the following formats, where `TagType` is equal to a string provided to the [`tagTypes`](../createApi.mdx#tagtypes) property of the api:\r\n         *\r\n         * - `[TagType]`\r\n         * - `[{ type: TagType }]`\r\n         * - `[{ type: TagType, id: number | string }]`\r\n         *\r\n         * @example\r\n         *\r\n         * ```ts\r\n         * dispatch(api.util.invalidateTags(['Post']))\r\n         * dispatch(api.util.invalidateTags([{ type: 'Post', id: 1 }]))\r\n         * dispatch(\r\n         *   api.util.invalidateTags([\r\n         *     { type: 'Post', id: 1 },\r\n         *     { type: 'Post', id: 'LIST' },\r\n         *   ])\r\n         * )\r\n         * ```\r\n         */\r\n        invalidateTags: ActionCreatorWithPayload<\r\n          Array<TagDescription<TagTypes>>,\r\n          string\r\n        >\r\n\r\n        /**\r\n         * A function to select all `{ endpointName, originalArgs, queryCacheKey }` combinations that would be invalidated by a specific set of tags.\r\n         *\r\n         * Can be used for mutations that want to do optimistic updates instead of invalidating a set of tags, but don't know exactly what they need to update.\r\n         */\r\n        selectInvalidatedBy: (\r\n          state: RootState<Definitions, string, ReducerPath>,\r\n          tags: ReadonlyArray<TagDescription<TagTypes>>\r\n        ) => Array<{\r\n          endpointName: string\r\n          originalArgs: any\r\n          queryCacheKey: string\r\n        }>\r\n      }\r\n      /**\r\n       * Endpoints based on the input endpoints provided to `createApi`, containing `select` and `action matchers`.\r\n       */\r\n      endpoints: {\r\n        [K in keyof Definitions]: Definitions[K] extends QueryDefinition<\r\n          any,\r\n          any,\r\n          any,\r\n          any,\r\n          any\r\n        >\r\n          ? ApiEndpointQuery<Definitions[K], Definitions>\r\n          : Definitions[K] extends MutationDefinition<any, any, any, any, any>\r\n          ? ApiEndpointMutation<Definitions[K], Definitions>\r\n          : never\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface ApiEndpointQuery<\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  Definition extends QueryDefinition<any, any, any, any, any>,\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  Definitions extends EndpointDefinitions\r\n> {\r\n  name: string\r\n  /**\r\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\r\n   */\r\n  Types: NonNullable<Definition['Types']>\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nexport interface ApiEndpointMutation<\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  Definition extends MutationDefinition<any, any, any, any, any>,\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  Definitions extends EndpointDefinitions\r\n> {\r\n  name: string\r\n  /**\r\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\r\n   */\r\n  Types: NonNullable<Definition['Types']>\r\n}\r\n\r\nexport type ListenerActions = {\r\n  /**\r\n   * Will cause the RTK Query middleware to trigger any refetchOnReconnect-related behavior\r\n   * @link https://rtk-query-docs.netlify.app/api/setupListeners\r\n   */\r\n  onOnline: typeof onOnline\r\n  onOffline: typeof onOffline\r\n  /**\r\n   * Will cause the RTK Query middleware to trigger any refetchOnFocus-related behavior\r\n   * @link https://rtk-query-docs.netlify.app/api/setupListeners\r\n   */\r\n  onFocus: typeof onFocus\r\n  onFocusLost: typeof onFocusLost\r\n}\r\n\r\nexport type InternalActions = SliceActions & ListenerActions\r\n\r\n/**\r\n * Creates a module containing the basic redux logic for use with `buildCreateApi`.\r\n *\r\n * @example\r\n * ```ts\r\n * const createBaseApi = buildCreateApi(coreModule());\r\n * ```\r\n */\r\nexport const coreModule = (): Module<CoreModule> => ({\r\n  name: coreModuleName,\r\n  init(\r\n    api,\r\n    {\r\n      baseQuery,\r\n      tagTypes,\r\n      reducerPath,\r\n      serializeQueryArgs,\r\n      keepUnusedDataFor,\r\n      refetchOnMountOrArgChange,\r\n      refetchOnFocus,\r\n      refetchOnReconnect,\r\n    },\r\n    context\r\n  ) {\r\n    enablePatches()\r\n\r\n    assertCast<InternalSerializeQueryArgs>(serializeQueryArgs)\r\n\r\n    const assertTagType: AssertTagTypes = (tag) => {\r\n      if (\r\n        typeof process !== 'undefined' &&\r\n        process.env.NODE_ENV === 'development'\r\n      ) {\r\n        if (!tagTypes.includes(tag.type as any)) {\r\n          console.error(\r\n            `Tag type '${tag.type}' was used, but not specified in \\`tagTypes\\`!`\r\n          )\r\n        }\r\n      }\r\n      return tag\r\n    }\r\n\r\n    Object.assign(api, {\r\n      reducerPath,\r\n      endpoints: {},\r\n      internalActions: {\r\n        onOnline,\r\n        onOffline,\r\n        onFocus,\r\n        onFocusLost,\r\n      },\r\n      util: {},\r\n    })\r\n\r\n    const {\r\n      queryThunk,\r\n      mutationThunk,\r\n      patchQueryData,\r\n      updateQueryData,\r\n      upsertQueryData,\r\n      prefetch,\r\n      buildMatchThunkActions,\r\n    } = buildThunks({\r\n      baseQuery,\r\n      reducerPath,\r\n      context,\r\n      api,\r\n      serializeQueryArgs,\r\n      assertTagType,\r\n    })\r\n\r\n    const { reducer, actions: sliceActions } = buildSlice({\r\n      context,\r\n      queryThunk,\r\n      mutationThunk,\r\n      reducerPath,\r\n      assertTagType,\r\n      config: {\r\n        refetchOnFocus,\r\n        refetchOnReconnect,\r\n        refetchOnMountOrArgChange,\r\n        keepUnusedDataFor,\r\n        reducerPath,\r\n      },\r\n    })\r\n\r\n    safeAssign(api.util, {\r\n      patchQueryData,\r\n      updateQueryData,\r\n      upsertQueryData,\r\n      prefetch,\r\n      resetApiState: sliceActions.resetApiState,\r\n    })\r\n    safeAssign(api.internalActions, sliceActions)\r\n\r\n    const { middleware, actions: middlewareActions } = buildMiddleware({\r\n      reducerPath,\r\n      context,\r\n      queryThunk,\r\n      mutationThunk,\r\n      api,\r\n      assertTagType,\r\n    })\r\n    safeAssign(api.util, middlewareActions)\r\n\r\n    safeAssign(api, { reducer: reducer as any, middleware })\r\n\r\n    const { buildQuerySelector, buildMutationSelector, selectInvalidatedBy } =\r\n      buildSelectors({\r\n        serializeQueryArgs: serializeQueryArgs as any,\r\n        reducerPath,\r\n      })\r\n\r\n    safeAssign(api.util, { selectInvalidatedBy })\r\n\r\n    const {\r\n      buildInitiateQuery,\r\n      buildInitiateMutation,\r\n      getRunningMutationThunk,\r\n      getRunningMutationsThunk,\r\n      getRunningQueriesThunk,\r\n      getRunningQueryThunk,\r\n      getRunningOperationPromises,\r\n      removalWarning,\r\n    } = buildInitiate({\r\n      queryThunk,\r\n      mutationThunk,\r\n      api,\r\n      serializeQueryArgs: serializeQueryArgs as any,\r\n      context,\r\n    })\r\n\r\n    safeAssign(api.util, {\r\n      getRunningOperationPromises: getRunningOperationPromises as any,\r\n      getRunningOperationPromise: removalWarning as any,\r\n      getRunningMutationThunk,\r\n      getRunningMutationsThunk,\r\n      getRunningQueryThunk,\r\n      getRunningQueriesThunk,\r\n    })\r\n\r\n    return {\r\n      name: coreModuleName,\r\n      injectEndpoint(endpointName, definition) {\r\n        const anyApi = api as any as Api<\r\n          any,\r\n          Record<string, any>,\r\n          string,\r\n          string,\r\n          CoreModule\r\n        >\r\n        anyApi.endpoints[endpointName] ??= {} as any\r\n        if (isQueryDefinition(definition)) {\r\n          safeAssign(\r\n            anyApi.endpoints[endpointName],\r\n            {\r\n              name: endpointName,\r\n              select: buildQuerySelector(endpointName, definition),\r\n              initiate: buildInitiateQuery(endpointName, definition),\r\n            },\r\n            buildMatchThunkActions(queryThunk, endpointName)\r\n          )\r\n        } else if (isMutationDefinition(definition)) {\r\n          safeAssign(\r\n            anyApi.endpoints[endpointName],\r\n            {\r\n              name: endpointName,\r\n              select: buildMutationSelector(),\r\n              initiate: buildInitiateMutation(endpointName),\r\n            },\r\n            buildMatchThunkActions(mutationThunk, endpointName)\r\n          )\r\n        }\r\n      },\r\n    }\r\n  },\r\n})\r\n", "import { buildCreateApi, CreateApi } from '../createApi'\r\nimport { coreModule, coreModuleName } from './module'\r\n\r\nconst createApi = /* @__PURE__ */ buildCreateApi(coreModule())\r\n\r\nexport { createApi, coreModule, coreModuleName }\r\n", "var __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nvar __defProp = Object.defineProperty;\r\nvar __defProps = Object.defineProperties;\r\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp = function (obj, key, value) { return key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };\r\nvar __spreadValues = function (a, b) {\r\n    for (var prop in b || (b = {}))\r\n        if (__hasOwnProp.call(b, prop))\r\n            __defNormalProp(a, prop, b[prop]);\r\n    if (__getOwnPropSymbols)\r\n        for (var _j = 0, _k = __getOwnPropSymbols(b); _j < _k.length; _j++) {\r\n            var prop = _k[_j];\r\n            if (__propIsEnum.call(b, prop))\r\n                __defNormalProp(a, prop, b[prop]);\r\n        }\r\n    return a;\r\n};\r\nvar __spreadProps = function (a, b) { return __defProps(a, __getOwnPropDescs(b)); };\r\nvar __objRest = function (source, exclude) {\r\n    var target = {};\r\n    for (var prop in source)\r\n        if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\r\n            target[prop] = source[prop];\r\n    if (source != null && __getOwnPropSymbols)\r\n        for (var _j = 0, _k = __getOwnPropSymbols(source); _j < _k.length; _j++) {\r\n            var prop = _k[_j];\r\n            if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\r\n                target[prop] = source[prop];\r\n        }\r\n    return target;\r\n};\r\nvar __async = function (__this, __arguments, generator) {\r\n    return new Promise(function (resolve, reject) {\r\n        var fulfilled = function (value) {\r\n            try {\r\n                step(generator.next(value));\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        };\r\n        var rejected = function (value) {\r\n            try {\r\n                step(generator.throw(value));\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        };\r\n        var step = function (x) { return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected); };\r\n        step((generator = generator.apply(__this, __arguments)).next());\r\n    });\r\n};\r\n// src/query/core/apiState.ts\r\nvar QueryStatus;\r\n(function (QueryStatus2) {\r\n    QueryStatus2[\"uninitialized\"] = \"uninitialized\";\r\n    QueryStatus2[\"pending\"] = \"pending\";\r\n    QueryStatus2[\"fulfilled\"] = \"fulfilled\";\r\n    QueryStatus2[\"rejected\"] = \"rejected\";\r\n})(QueryStatus || (QueryStatus = {}));\r\nfunction getRequestStatusFlags(status) {\r\n    return {\r\n        status: status,\r\n        isUninitialized: status === QueryStatus.uninitialized,\r\n        isLoading: status === QueryStatus.pending,\r\n        isSuccess: status === QueryStatus.fulfilled,\r\n        isError: status === QueryStatus.rejected\r\n    };\r\n}\r\n// src/query/utils/isAbsoluteUrl.ts\r\nfunction isAbsoluteUrl(url) {\r\n    return new RegExp(\"(^|:)//\").test(url);\r\n}\r\n// src/query/utils/joinUrls.ts\r\nvar withoutTrailingSlash = function (url) { return url.replace(/\\/$/, \"\"); };\r\nvar withoutLeadingSlash = function (url) { return url.replace(/^\\//, \"\"); };\r\nfunction joinUrls(base, url) {\r\n    if (!base) {\r\n        return url;\r\n    }\r\n    if (!url) {\r\n        return base;\r\n    }\r\n    if (isAbsoluteUrl(url)) {\r\n        return url;\r\n    }\r\n    var delimiter = base.endsWith(\"/\") || !url.startsWith(\"?\") ? \"/\" : \"\";\r\n    base = withoutTrailingSlash(base);\r\n    url = withoutLeadingSlash(url);\r\n    return \"\" + base + delimiter + url;\r\n}\r\n// src/query/utils/flatten.ts\r\nvar flatten = function (arr) { return [].concat.apply([], arr); };\r\n// src/query/utils/isOnline.ts\r\nfunction isOnline() {\r\n    return typeof navigator === \"undefined\" ? true : navigator.onLine === void 0 ? true : navigator.onLine;\r\n}\r\n// src/query/utils/isDocumentVisible.ts\r\nfunction isDocumentVisible() {\r\n    if (typeof document === \"undefined\") {\r\n        return true;\r\n    }\r\n    return document.visibilityState !== \"hidden\";\r\n}\r\n// src/query/utils/copyWithStructuralSharing.ts\r\nimport { isPlainObject as _iPO } from \"@reduxjs/toolkit\";\r\nvar isPlainObject = _iPO;\r\nfunction copyWithStructuralSharing(oldObj, newObj) {\r\n    if (oldObj === newObj || !(isPlainObject(oldObj) && isPlainObject(newObj) || Array.isArray(oldObj) && Array.isArray(newObj))) {\r\n        return newObj;\r\n    }\r\n    var newKeys = Object.keys(newObj);\r\n    var oldKeys = Object.keys(oldObj);\r\n    var isSameObject = newKeys.length === oldKeys.length;\r\n    var mergeObj = Array.isArray(newObj) ? [] : {};\r\n    for (var _j = 0, newKeys_1 = newKeys; _j < newKeys_1.length; _j++) {\r\n        var key = newKeys_1[_j];\r\n        mergeObj[key] = copyWithStructuralSharing(oldObj[key], newObj[key]);\r\n        if (isSameObject)\r\n            isSameObject = oldObj[key] === mergeObj[key];\r\n    }\r\n    return isSameObject ? oldObj : mergeObj;\r\n}\r\n// src/query/fetchBaseQuery.ts\r\nimport { isPlainObject as isPlainObject2 } from \"@reduxjs/toolkit\";\r\nvar defaultFetchFn = function () {\r\n    var args = [];\r\n    for (var _j = 0; _j < arguments.length; _j++) {\r\n        args[_j] = arguments[_j];\r\n    }\r\n    return fetch.apply(void 0, args);\r\n};\r\nvar defaultValidateStatus = function (response) { return response.status >= 200 && response.status <= 299; };\r\nvar defaultIsJsonContentType = function (headers) { return /ion\\/(vnd\\.api\\+)?json/.test(headers.get(\"content-type\") || \"\"); };\r\nfunction stripUndefined(obj) {\r\n    if (!isPlainObject2(obj)) {\r\n        return obj;\r\n    }\r\n    var copy = __spreadValues({}, obj);\r\n    for (var _j = 0, _k = Object.entries(copy); _j < _k.length; _j++) {\r\n        var _l = _k[_j], k = _l[0], v = _l[1];\r\n        if (v === void 0)\r\n            delete copy[k];\r\n    }\r\n    return copy;\r\n}\r\nfunction fetchBaseQuery(_a) {\r\n    var _this = this;\r\n    if (_a === void 0) { _a = {}; }\r\n    var _b = _a, baseUrl = _b.baseUrl, _j = _b.prepareHeaders, prepareHeaders = _j === void 0 ? function (x) { return x; } : _j, _k = _b.fetchFn, fetchFn = _k === void 0 ? defaultFetchFn : _k, paramsSerializer = _b.paramsSerializer, _l = _b.isJsonContentType, isJsonContentType = _l === void 0 ? defaultIsJsonContentType : _l, _m = _b.jsonContentType, jsonContentType = _m === void 0 ? \"application/json\" : _m, jsonReplacer = _b.jsonReplacer, defaultTimeout = _b.timeout, globalResponseHandler = _b.responseHandler, globalValidateStatus = _b.validateStatus, baseFetchOptions = __objRest(_b, [\r\n        \"baseUrl\",\r\n        \"prepareHeaders\",\r\n        \"fetchFn\",\r\n        \"paramsSerializer\",\r\n        \"isJsonContentType\",\r\n        \"jsonContentType\",\r\n        \"jsonReplacer\",\r\n        \"timeout\",\r\n        \"responseHandler\",\r\n        \"validateStatus\"\r\n    ]);\r\n    if (typeof fetch === \"undefined\" && fetchFn === defaultFetchFn) {\r\n        console.warn(\"Warning: `fetch` is not available. Please supply a custom `fetchFn` property to use `fetchBaseQuery` on SSR environments.\");\r\n    }\r\n    return function (arg, api) { return __async(_this, null, function () {\r\n        var signal, getState, extra, endpoint, forced, type, meta, _a2, url, _j, headers, _k, params, _l, responseHandler, _m, validateStatus, _o, timeout, rest, config, _p, isJsonifiable, divider, query, request, requestClone, response, timedOut, timeoutId, e_1, responseClone, resultData, responseText, handleResponseError_1, e_2;\r\n        return __generator(this, function (_q) {\r\n            switch (_q.label) {\r\n                case 0:\r\n                    signal = api.signal, getState = api.getState, extra = api.extra, endpoint = api.endpoint, forced = api.forced, type = api.type;\r\n                    _a2 = typeof arg == \"string\" ? { url: arg } : arg, url = _a2.url, _j = _a2.headers, headers = _j === void 0 ? new Headers(baseFetchOptions.headers) : _j, _k = _a2.params, params = _k === void 0 ? void 0 : _k, _l = _a2.responseHandler, responseHandler = _l === void 0 ? globalResponseHandler != null ? globalResponseHandler : \"json\" : _l, _m = _a2.validateStatus, validateStatus = _m === void 0 ? globalValidateStatus != null ? globalValidateStatus : defaultValidateStatus : _m, _o = _a2.timeout, timeout = _o === void 0 ? defaultTimeout : _o, rest = __objRest(_a2, [\r\n                        \"url\",\r\n                        \"headers\",\r\n                        \"params\",\r\n                        \"responseHandler\",\r\n                        \"validateStatus\",\r\n                        \"timeout\"\r\n                    ]);\r\n                    config = __spreadValues(__spreadProps(__spreadValues({}, baseFetchOptions), {\r\n                        signal: signal\r\n                    }), rest);\r\n                    headers = new Headers(stripUndefined(headers));\r\n                    _p = config;\r\n                    return [4 /*yield*/, prepareHeaders(headers, {\r\n                            getState: getState,\r\n                            extra: extra,\r\n                            endpoint: endpoint,\r\n                            forced: forced,\r\n                            type: type\r\n                        })];\r\n                case 1:\r\n                    _p.headers = (_q.sent()) || headers;\r\n                    isJsonifiable = function (body) { return typeof body === \"object\" && (isPlainObject2(body) || Array.isArray(body) || typeof body.toJSON === \"function\"); };\r\n                    if (!config.headers.has(\"content-type\") && isJsonifiable(config.body)) {\r\n                        config.headers.set(\"content-type\", jsonContentType);\r\n                    }\r\n                    if (isJsonifiable(config.body) && isJsonContentType(config.headers)) {\r\n                        config.body = JSON.stringify(config.body, jsonReplacer);\r\n                    }\r\n                    if (params) {\r\n                        divider = ~url.indexOf(\"?\") ? \"&\" : \"?\";\r\n                        query = paramsSerializer ? paramsSerializer(params) : new URLSearchParams(stripUndefined(params));\r\n                        url += divider + query;\r\n                    }\r\n                    url = joinUrls(baseUrl, url);\r\n                    request = new Request(url, config);\r\n                    requestClone = new Request(url, config);\r\n                    meta = { request: requestClone };\r\n                    timedOut = false, timeoutId = timeout && setTimeout(function () {\r\n                        timedOut = true;\r\n                        api.abort();\r\n                    }, timeout);\r\n                    _q.label = 2;\r\n                case 2:\r\n                    _q.trys.push([2, 4, 5, 6]);\r\n                    return [4 /*yield*/, fetchFn(request)];\r\n                case 3:\r\n                    response = _q.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4:\r\n                    e_1 = _q.sent();\r\n                    return [2 /*return*/, {\r\n                            error: {\r\n                                status: timedOut ? \"TIMEOUT_ERROR\" : \"FETCH_ERROR\",\r\n                                error: String(e_1)\r\n                            },\r\n                            meta: meta\r\n                        }];\r\n                case 5:\r\n                    if (timeoutId)\r\n                        clearTimeout(timeoutId);\r\n                    return [7 /*endfinally*/];\r\n                case 6:\r\n                    responseClone = response.clone();\r\n                    meta.response = responseClone;\r\n                    responseText = \"\";\r\n                    _q.label = 7;\r\n                case 7:\r\n                    _q.trys.push([7, 9, , 10]);\r\n                    return [4 /*yield*/, Promise.all([\r\n                            handleResponse(response, responseHandler).then(function (r) { return resultData = r; }, function (e) { return handleResponseError_1 = e; }),\r\n                            responseClone.text().then(function (r) { return responseText = r; }, function () {\r\n                            })\r\n                        ])];\r\n                case 8:\r\n                    _q.sent();\r\n                    if (handleResponseError_1)\r\n                        throw handleResponseError_1;\r\n                    return [3 /*break*/, 10];\r\n                case 9:\r\n                    e_2 = _q.sent();\r\n                    return [2 /*return*/, {\r\n                            error: {\r\n                                status: \"PARSING_ERROR\",\r\n                                originalStatus: response.status,\r\n                                data: responseText,\r\n                                error: String(e_2)\r\n                            },\r\n                            meta: meta\r\n                        }];\r\n                case 10: return [2 /*return*/, validateStatus(response, resultData) ? {\r\n                        data: resultData,\r\n                        meta: meta\r\n                    } : {\r\n                        error: {\r\n                            status: response.status,\r\n                            data: resultData\r\n                        },\r\n                        meta: meta\r\n                    }];\r\n            }\r\n        });\r\n    }); };\r\n    function handleResponse(response, responseHandler) {\r\n        return __async(this, null, function () {\r\n            var text;\r\n            return __generator(this, function (_j) {\r\n                switch (_j.label) {\r\n                    case 0:\r\n                        if (typeof responseHandler === \"function\") {\r\n                            return [2 /*return*/, responseHandler(response)];\r\n                        }\r\n                        if (responseHandler === \"content-type\") {\r\n                            responseHandler = isJsonContentType(response.headers) ? \"json\" : \"text\";\r\n                        }\r\n                        if (!(responseHandler === \"json\")) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, response.text()];\r\n                    case 1:\r\n                        text = _j.sent();\r\n                        return [2 /*return*/, text.length ? JSON.parse(text) : null];\r\n                    case 2: return [2 /*return*/, response.text()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n// src/query/HandledError.ts\r\nvar HandledError = /** @class */ (function () {\r\n    function HandledError(value, meta) {\r\n        if (meta === void 0) { meta = void 0; }\r\n        this.value = value;\r\n        this.meta = meta;\r\n    }\r\n    return HandledError;\r\n}());\r\n// src/query/retry.ts\r\nfunction defaultBackoff(attempt, maxRetries) {\r\n    if (attempt === void 0) { attempt = 0; }\r\n    if (maxRetries === void 0) { maxRetries = 5; }\r\n    return __async(this, null, function () {\r\n        var attempts, timeout;\r\n        return __generator(this, function (_j) {\r\n            switch (_j.label) {\r\n                case 0:\r\n                    attempts = Math.min(attempt, maxRetries);\r\n                    timeout = ~~((Math.random() + 0.4) * (300 << attempts));\r\n                    return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(function (res) { return resolve(res); }, timeout); })];\r\n                case 1:\r\n                    _j.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction fail(e) {\r\n    throw Object.assign(new HandledError({ error: e }), {\r\n        throwImmediately: true\r\n    });\r\n}\r\nvar EMPTY_OPTIONS = {};\r\nvar retryWithBackoff = function (baseQuery, defaultOptions) { return function (args, api, extraOptions) { return __async(void 0, null, function () {\r\n    var possibleMaxRetries, maxRetries, defaultRetryCondition, options, retry2, result, e_3;\r\n    return __generator(this, function (_j) {\r\n        switch (_j.label) {\r\n            case 0:\r\n                possibleMaxRetries = [\r\n                    5,\r\n                    (defaultOptions || EMPTY_OPTIONS).maxRetries,\r\n                    (extraOptions || EMPTY_OPTIONS).maxRetries\r\n                ].filter(function (x) { return x !== void 0; });\r\n                maxRetries = possibleMaxRetries.slice(-1)[0];\r\n                defaultRetryCondition = function (_, __, _j) {\r\n                    var attempt = _j.attempt;\r\n                    return attempt <= maxRetries;\r\n                };\r\n                options = __spreadValues(__spreadValues({\r\n                    maxRetries: maxRetries,\r\n                    backoff: defaultBackoff,\r\n                    retryCondition: defaultRetryCondition\r\n                }, defaultOptions), extraOptions);\r\n                retry2 = 0;\r\n                _j.label = 1;\r\n            case 1:\r\n                if (!true) return [3 /*break*/, 7];\r\n                _j.label = 2;\r\n            case 2:\r\n                _j.trys.push([2, 4, , 6]);\r\n                return [4 /*yield*/, baseQuery(args, api, extraOptions)];\r\n            case 3:\r\n                result = _j.sent();\r\n                if (result.error) {\r\n                    throw new HandledError(result);\r\n                }\r\n                return [2 /*return*/, result];\r\n            case 4:\r\n                e_3 = _j.sent();\r\n                retry2++;\r\n                if (e_3.throwImmediately) {\r\n                    if (e_3 instanceof HandledError) {\r\n                        return [2 /*return*/, e_3.value];\r\n                    }\r\n                    throw e_3;\r\n                }\r\n                if (e_3 instanceof HandledError && !options.retryCondition(e_3.value.error, args, {\r\n                    attempt: retry2,\r\n                    baseQueryApi: api,\r\n                    extraOptions: extraOptions\r\n                })) {\r\n                    return [2 /*return*/, e_3.value];\r\n                }\r\n                return [4 /*yield*/, options.backoff(retry2, options.maxRetries)];\r\n            case 5:\r\n                _j.sent();\r\n                return [3 /*break*/, 6];\r\n            case 6: return [3 /*break*/, 1];\r\n            case 7: return [2 /*return*/];\r\n        }\r\n    });\r\n}); }; };\r\nvar retry = /* @__PURE__ */ Object.assign(retryWithBackoff, { fail: fail });\r\n// src/query/core/setupListeners.ts\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nvar onFocus = /* @__PURE__ */ createAction(\"__rtkq/focused\");\r\nvar onFocusLost = /* @__PURE__ */ createAction(\"__rtkq/unfocused\");\r\nvar onOnline = /* @__PURE__ */ createAction(\"__rtkq/online\");\r\nvar onOffline = /* @__PURE__ */ createAction(\"__rtkq/offline\");\r\nvar initialized = false;\r\nfunction setupListeners(dispatch, customHandler) {\r\n    function defaultHandler() {\r\n        var handleFocus = function () { return dispatch(onFocus()); };\r\n        var handleFocusLost = function () { return dispatch(onFocusLost()); };\r\n        var handleOnline = function () { return dispatch(onOnline()); };\r\n        var handleOffline = function () { return dispatch(onOffline()); };\r\n        var handleVisibilityChange = function () {\r\n            if (window.document.visibilityState === \"visible\") {\r\n                handleFocus();\r\n            }\r\n            else {\r\n                handleFocusLost();\r\n            }\r\n        };\r\n        if (!initialized) {\r\n            if (typeof window !== \"undefined\" && window.addEventListener) {\r\n                window.addEventListener(\"visibilitychange\", handleVisibilityChange, false);\r\n                window.addEventListener(\"focus\", handleFocus, false);\r\n                window.addEventListener(\"online\", handleOnline, false);\r\n                window.addEventListener(\"offline\", handleOffline, false);\r\n                initialized = true;\r\n            }\r\n        }\r\n        var unsubscribe = function () {\r\n            window.removeEventListener(\"focus\", handleFocus);\r\n            window.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n            window.removeEventListener(\"online\", handleOnline);\r\n            window.removeEventListener(\"offline\", handleOffline);\r\n            initialized = false;\r\n        };\r\n        return unsubscribe;\r\n    }\r\n    return customHandler ? customHandler(dispatch, { onFocus: onFocus, onFocusLost: onFocusLost, onOffline: onOffline, onOnline: onOnline }) : defaultHandler();\r\n}\r\n// src/query/core/buildSelectors.ts\r\nimport { createNextState as createNextState2, createSelector } from \"@reduxjs/toolkit\";\r\n// src/query/endpointDefinitions.ts\r\nvar DefinitionType;\r\n(function (DefinitionType2) {\r\n    DefinitionType2[\"query\"] = \"query\";\r\n    DefinitionType2[\"mutation\"] = \"mutation\";\r\n})(DefinitionType || (DefinitionType = {}));\r\nfunction isQueryDefinition(e) {\r\n    return e.type === DefinitionType.query;\r\n}\r\nfunction isMutationDefinition(e) {\r\n    return e.type === DefinitionType.mutation;\r\n}\r\nfunction calculateProvidedBy(description, result, error, queryArg, meta, assertTagTypes) {\r\n    if (isFunction(description)) {\r\n        return description(result, error, queryArg, meta).map(expandTagDescription).map(assertTagTypes);\r\n    }\r\n    if (Array.isArray(description)) {\r\n        return description.map(expandTagDescription).map(assertTagTypes);\r\n    }\r\n    return [];\r\n}\r\nfunction isFunction(t) {\r\n    return typeof t === \"function\";\r\n}\r\nfunction expandTagDescription(description) {\r\n    return typeof description === \"string\" ? { type: description } : description;\r\n}\r\n// src/query/core/buildSlice.ts\r\nimport { combineReducers, createAction as createAction2, createSlice, isAnyOf, isFulfilled as isFulfilled2, isRejectedWithValue as isRejectedWithValue2, createNextState, prepareAutoBatched } from \"@reduxjs/toolkit\";\r\n// src/query/utils/isNotNullish.ts\r\nfunction isNotNullish(v) {\r\n    return v != null;\r\n}\r\n// src/query/core/buildInitiate.ts\r\nvar forceQueryFnSymbol = Symbol(\"forceQueryFn\");\r\nvar isUpsertQuery = function (arg) { return typeof arg[forceQueryFnSymbol] === \"function\"; };\r\nfunction buildInitiate(_j) {\r\n    var serializeQueryArgs = _j.serializeQueryArgs, queryThunk = _j.queryThunk, mutationThunk = _j.mutationThunk, api = _j.api, context = _j.context;\r\n    var runningQueries = new Map();\r\n    var runningMutations = new Map();\r\n    var _k = api.internalActions, unsubscribeQueryResult = _k.unsubscribeQueryResult, removeMutationResult = _k.removeMutationResult, updateSubscriptionOptions = _k.updateSubscriptionOptions;\r\n    return {\r\n        buildInitiateQuery: buildInitiateQuery,\r\n        buildInitiateMutation: buildInitiateMutation,\r\n        getRunningQueryThunk: getRunningQueryThunk,\r\n        getRunningMutationThunk: getRunningMutationThunk,\r\n        getRunningQueriesThunk: getRunningQueriesThunk,\r\n        getRunningMutationsThunk: getRunningMutationsThunk,\r\n        getRunningOperationPromises: getRunningOperationPromises,\r\n        removalWarning: removalWarning\r\n    };\r\n    function removalWarning() {\r\n        throw new Error(\"This method had to be removed due to a conceptual bug in RTK.\\n       Please see https://github.com/reduxjs/redux-toolkit/pull/2481 for details.\\n       See https://redux-toolkit.js.org/rtk-query/usage/server-side-rendering for new guidance on SSR.\");\r\n    }\r\n    function getRunningOperationPromises() {\r\n        if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\r\n            removalWarning();\r\n        }\r\n        else {\r\n            var extract = function (v) { return Array.from(v.values()).flatMap(function (queriesForStore) { return queriesForStore ? Object.values(queriesForStore) : []; }); };\r\n            return __spreadArray(__spreadArray([], extract(runningQueries)), extract(runningMutations)).filter(isNotNullish);\r\n        }\r\n    }\r\n    function getRunningQueryThunk(endpointName, queryArgs) {\r\n        return function (dispatch) {\r\n            var _a;\r\n            var endpointDefinition = context.endpointDefinitions[endpointName];\r\n            var queryCacheKey = serializeQueryArgs({\r\n                queryArgs: queryArgs,\r\n                endpointDefinition: endpointDefinition,\r\n                endpointName: endpointName\r\n            });\r\n            return (_a = runningQueries.get(dispatch)) == null ? void 0 : _a[queryCacheKey];\r\n        };\r\n    }\r\n    function getRunningMutationThunk(_endpointName, fixedCacheKeyOrRequestId) {\r\n        return function (dispatch) {\r\n            var _a;\r\n            return (_a = runningMutations.get(dispatch)) == null ? void 0 : _a[fixedCacheKeyOrRequestId];\r\n        };\r\n    }\r\n    function getRunningQueriesThunk() {\r\n        return function (dispatch) { return Object.values(runningQueries.get(dispatch) || {}).filter(isNotNullish); };\r\n    }\r\n    function getRunningMutationsThunk() {\r\n        return function (dispatch) { return Object.values(runningMutations.get(dispatch) || {}).filter(isNotNullish); };\r\n    }\r\n    function middlewareWarning(dispatch) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            if (middlewareWarning.triggered)\r\n                return;\r\n            var registered = dispatch(api.internalActions.internal_probeSubscription({\r\n                queryCacheKey: \"DOES_NOT_EXIST\",\r\n                requestId: \"DUMMY_REQUEST_ID\"\r\n            }));\r\n            middlewareWarning.triggered = true;\r\n            if (typeof registered !== \"boolean\") {\r\n                throw new Error(\"Warning: Middleware for RTK-Query API at reducerPath \\\"\" + api.reducerPath + \"\\\" has not been added to the store.\\nYou must add the middleware for RTK-Query to function correctly!\");\r\n            }\r\n        }\r\n    }\r\n    function buildInitiateQuery(endpointName, endpointDefinition) {\r\n        var queryAction = function (arg, _j) {\r\n            var _k = _j === void 0 ? {} : _j, _l = _k.subscribe, subscribe = _l === void 0 ? true : _l, forceRefetch = _k.forceRefetch, subscriptionOptions = _k.subscriptionOptions, _m = forceQueryFnSymbol, forceQueryFn = _k[_m];\r\n            return function (dispatch, getState) {\r\n                var _j;\r\n                var _a;\r\n                var queryCacheKey = serializeQueryArgs({\r\n                    queryArgs: arg,\r\n                    endpointDefinition: endpointDefinition,\r\n                    endpointName: endpointName\r\n                });\r\n                var thunk = queryThunk((_j = {\r\n                        type: \"query\",\r\n                        subscribe: subscribe,\r\n                        forceRefetch: forceRefetch,\r\n                        subscriptionOptions: subscriptionOptions,\r\n                        endpointName: endpointName,\r\n                        originalArgs: arg,\r\n                        queryCacheKey: queryCacheKey\r\n                    },\r\n                    _j[forceQueryFnSymbol] = forceQueryFn,\r\n                    _j));\r\n                var selector = api.endpoints[endpointName].select(arg);\r\n                var thunkResult = dispatch(thunk);\r\n                var stateAfter = selector(getState());\r\n                middlewareWarning(dispatch);\r\n                var requestId = thunkResult.requestId, abort = thunkResult.abort;\r\n                var skippedSynchronously = stateAfter.requestId !== requestId;\r\n                var runningQuery = (_a = runningQueries.get(dispatch)) == null ? void 0 : _a[queryCacheKey];\r\n                var selectFromState = function () { return selector(getState()); };\r\n                var statePromise = Object.assign(forceQueryFn ? thunkResult.then(selectFromState) : skippedSynchronously && !runningQuery ? Promise.resolve(stateAfter) : Promise.all([runningQuery, thunkResult]).then(selectFromState), {\r\n                    arg: arg,\r\n                    requestId: requestId,\r\n                    subscriptionOptions: subscriptionOptions,\r\n                    queryCacheKey: queryCacheKey,\r\n                    abort: abort,\r\n                    unwrap: function () {\r\n                        return __async(this, null, function () {\r\n                            var result;\r\n                            return __generator(this, function (_j) {\r\n                                switch (_j.label) {\r\n                                    case 0: return [4 /*yield*/, statePromise];\r\n                                    case 1:\r\n                                        result = _j.sent();\r\n                                        if (result.isError) {\r\n                                            throw result.error;\r\n                                        }\r\n                                        return [2 /*return*/, result.data];\r\n                                }\r\n                            });\r\n                        });\r\n                    },\r\n                    refetch: function () { return dispatch(queryAction(arg, { subscribe: false, forceRefetch: true })); },\r\n                    unsubscribe: function () {\r\n                        if (subscribe)\r\n                            dispatch(unsubscribeQueryResult({\r\n                                queryCacheKey: queryCacheKey,\r\n                                requestId: requestId\r\n                            }));\r\n                    },\r\n                    updateSubscriptionOptions: function (options) {\r\n                        statePromise.subscriptionOptions = options;\r\n                        dispatch(updateSubscriptionOptions({\r\n                            endpointName: endpointName,\r\n                            requestId: requestId,\r\n                            queryCacheKey: queryCacheKey,\r\n                            options: options\r\n                        }));\r\n                    }\r\n                });\r\n                if (!runningQuery && !skippedSynchronously && !forceQueryFn) {\r\n                    var running_1 = runningQueries.get(dispatch) || {};\r\n                    running_1[queryCacheKey] = statePromise;\r\n                    runningQueries.set(dispatch, running_1);\r\n                    statePromise.then(function () {\r\n                        delete running_1[queryCacheKey];\r\n                        if (!Object.keys(running_1).length) {\r\n                            runningQueries.delete(dispatch);\r\n                        }\r\n                    });\r\n                }\r\n                return statePromise;\r\n            };\r\n        };\r\n        return queryAction;\r\n    }\r\n    function buildInitiateMutation(endpointName) {\r\n        return function (arg, _j) {\r\n            var _k = _j === void 0 ? {} : _j, _l = _k.track, track = _l === void 0 ? true : _l, fixedCacheKey = _k.fixedCacheKey;\r\n            return function (dispatch, getState) {\r\n                var thunk = mutationThunk({\r\n                    type: \"mutation\",\r\n                    endpointName: endpointName,\r\n                    originalArgs: arg,\r\n                    track: track,\r\n                    fixedCacheKey: fixedCacheKey\r\n                });\r\n                var thunkResult = dispatch(thunk);\r\n                middlewareWarning(dispatch);\r\n                var requestId = thunkResult.requestId, abort = thunkResult.abort, unwrap = thunkResult.unwrap;\r\n                var returnValuePromise = thunkResult.unwrap().then(function (data) { return ({ data: data }); }).catch(function (error) { return ({ error: error }); });\r\n                var reset = function () {\r\n                    dispatch(removeMutationResult({ requestId: requestId, fixedCacheKey: fixedCacheKey }));\r\n                };\r\n                var ret = Object.assign(returnValuePromise, {\r\n                    arg: thunkResult.arg,\r\n                    requestId: requestId,\r\n                    abort: abort,\r\n                    unwrap: unwrap,\r\n                    unsubscribe: reset,\r\n                    reset: reset\r\n                });\r\n                var running = runningMutations.get(dispatch) || {};\r\n                runningMutations.set(dispatch, running);\r\n                running[requestId] = ret;\r\n                ret.then(function () {\r\n                    delete running[requestId];\r\n                    if (!Object.keys(running).length) {\r\n                        runningMutations.delete(dispatch);\r\n                    }\r\n                });\r\n                if (fixedCacheKey) {\r\n                    running[fixedCacheKey] = ret;\r\n                    ret.then(function () {\r\n                        if (running[fixedCacheKey] === ret) {\r\n                            delete running[fixedCacheKey];\r\n                            if (!Object.keys(running).length) {\r\n                                runningMutations.delete(dispatch);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                return ret;\r\n            };\r\n        };\r\n    }\r\n}\r\n// src/query/core/buildThunks.ts\r\nimport { isAllOf, isFulfilled, isPending, isRejected, isRejectedWithValue } from \"@reduxjs/toolkit\";\r\nimport { isDraftable, produceWithPatches } from \"immer\";\r\nimport { createAsyncThunk, SHOULD_AUTOBATCH } from \"@reduxjs/toolkit\";\r\nfunction defaultTransformResponse(baseQueryReturnValue) {\r\n    return baseQueryReturnValue;\r\n}\r\nfunction buildThunks(_j) {\r\n    var _this = this;\r\n    var reducerPath = _j.reducerPath, baseQuery = _j.baseQuery, endpointDefinitions = _j.context.endpointDefinitions, serializeQueryArgs = _j.serializeQueryArgs, api = _j.api, assertTagType = _j.assertTagType;\r\n    var patchQueryData = function (endpointName, args, patches, updateProvided) { return function (dispatch, getState) {\r\n        var endpointDefinition = endpointDefinitions[endpointName];\r\n        var queryCacheKey = serializeQueryArgs({\r\n            queryArgs: args,\r\n            endpointDefinition: endpointDefinition,\r\n            endpointName: endpointName\r\n        });\r\n        dispatch(api.internalActions.queryResultPatched({ queryCacheKey: queryCacheKey, patches: patches }));\r\n        if (!updateProvided) {\r\n            return;\r\n        }\r\n        var newValue = api.endpoints[endpointName].select(args)(getState());\r\n        var providedTags = calculateProvidedBy(endpointDefinition.providesTags, newValue.data, void 0, args, {}, assertTagType);\r\n        dispatch(api.internalActions.updateProvidedBy({ queryCacheKey: queryCacheKey, providedTags: providedTags }));\r\n    }; };\r\n    var updateQueryData = function (endpointName, args, updateRecipe, updateProvided) {\r\n        if (updateProvided === void 0) { updateProvided = true; }\r\n        return function (dispatch, getState) {\r\n            var _j, _k;\r\n            var endpointDefinition = api.endpoints[endpointName];\r\n            var currentState = endpointDefinition.select(args)(getState());\r\n            var ret = {\r\n                patches: [],\r\n                inversePatches: [],\r\n                undo: function () { return dispatch(api.util.patchQueryData(endpointName, args, ret.inversePatches, updateProvided)); }\r\n            };\r\n            if (currentState.status === QueryStatus.uninitialized) {\r\n                return ret;\r\n            }\r\n            var newValue;\r\n            if (\"data\" in currentState) {\r\n                if (isDraftable(currentState.data)) {\r\n                    var _l = produceWithPatches(currentState.data, updateRecipe), value = _l[0], patches = _l[1], inversePatches = _l[2];\r\n                    (_j = ret.patches).push.apply(_j, patches);\r\n                    (_k = ret.inversePatches).push.apply(_k, inversePatches);\r\n                    newValue = value;\r\n                }\r\n                else {\r\n                    newValue = updateRecipe(currentState.data);\r\n                    ret.patches.push({ op: \"replace\", path: [], value: newValue });\r\n                    ret.inversePatches.push({\r\n                        op: \"replace\",\r\n                        path: [],\r\n                        value: currentState.data\r\n                    });\r\n                }\r\n            }\r\n            dispatch(api.util.patchQueryData(endpointName, args, ret.patches, updateProvided));\r\n            return ret;\r\n        };\r\n    };\r\n    var upsertQueryData = function (endpointName, args, value) { return function (dispatch) {\r\n        var _j;\r\n        return dispatch(api.endpoints[endpointName].initiate(args, (_j = {\r\n                subscribe: false,\r\n                forceRefetch: true\r\n            },\r\n            _j[forceQueryFnSymbol] = function () { return ({\r\n                data: value\r\n            }); },\r\n            _j)));\r\n    }; };\r\n    var executeEndpoint = function (_0, _1) { return __async(_this, [_0, _1], function (arg, _j) {\r\n        var endpointDefinition, transformResponse, result, baseQueryApi_1, forceQueryFn, what, err, _k, _l, key, _m, error_1, catchedError, transformErrorResponse, _o, e_4;\r\n        var _p, _q;\r\n        var signal = _j.signal, abort = _j.abort, rejectWithValue = _j.rejectWithValue, fulfillWithValue = _j.fulfillWithValue, dispatch = _j.dispatch, getState = _j.getState, extra = _j.extra;\r\n        return __generator(this, function (_r) {\r\n            switch (_r.label) {\r\n                case 0:\r\n                    endpointDefinition = endpointDefinitions[arg.endpointName];\r\n                    _r.label = 1;\r\n                case 1:\r\n                    _r.trys.push([1, 8, , 13]);\r\n                    transformResponse = defaultTransformResponse;\r\n                    result = void 0;\r\n                    baseQueryApi_1 = {\r\n                        signal: signal,\r\n                        abort: abort,\r\n                        dispatch: dispatch,\r\n                        getState: getState,\r\n                        extra: extra,\r\n                        endpoint: arg.endpointName,\r\n                        type: arg.type,\r\n                        forced: arg.type === \"query\" ? isForcedQuery(arg, getState()) : void 0\r\n                    };\r\n                    forceQueryFn = arg.type === \"query\" ? arg[forceQueryFnSymbol] : void 0;\r\n                    if (!forceQueryFn) return [3 /*break*/, 2];\r\n                    result = forceQueryFn();\r\n                    return [3 /*break*/, 6];\r\n                case 2:\r\n                    if (!endpointDefinition.query) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, baseQuery(endpointDefinition.query(arg.originalArgs), baseQueryApi_1, endpointDefinition.extraOptions)];\r\n                case 3:\r\n                    result = _r.sent();\r\n                    if (endpointDefinition.transformResponse) {\r\n                        transformResponse = endpointDefinition.transformResponse;\r\n                    }\r\n                    return [3 /*break*/, 6];\r\n                case 4: return [4 /*yield*/, endpointDefinition.queryFn(arg.originalArgs, baseQueryApi_1, endpointDefinition.extraOptions, function (arg2) { return baseQuery(arg2, baseQueryApi_1, endpointDefinition.extraOptions); })];\r\n                case 5:\r\n                    result = _r.sent();\r\n                    _r.label = 6;\r\n                case 6:\r\n                    if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\r\n                        what = endpointDefinition.query ? \"`baseQuery`\" : \"`queryFn`\";\r\n                        err = void 0;\r\n                        if (!result) {\r\n                            err = what + \" did not return anything.\";\r\n                        }\r\n                        else if (typeof result !== \"object\") {\r\n                            err = what + \" did not return an object.\";\r\n                        }\r\n                        else if (result.error && result.data) {\r\n                            err = what + \" returned an object containing both `error` and `result`.\";\r\n                        }\r\n                        else if (result.error === void 0 && result.data === void 0) {\r\n                            err = what + \" returned an object containing neither a valid `error` and `result`. At least one of them should not be `undefined`\";\r\n                        }\r\n                        else {\r\n                            for (_k = 0, _l = Object.keys(result); _k < _l.length; _k++) {\r\n                                key = _l[_k];\r\n                                if (key !== \"error\" && key !== \"data\" && key !== \"meta\") {\r\n                                    err = \"The object returned by \" + what + \" has the unknown property \" + key + \".\";\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (err) {\r\n                            console.error(\"Error encountered handling the endpoint \" + arg.endpointName + \".\\n              \" + err + \"\\n              It needs to return an object with either the shape `{ data: <value> }` or `{ error: <value> }` that may contain an optional `meta` property.\\n              Object returned was:\", result);\r\n                        }\r\n                    }\r\n                    if (result.error)\r\n                        throw new HandledError(result.error, result.meta);\r\n                    _m = fulfillWithValue;\r\n                    return [4 /*yield*/, transformResponse(result.data, result.meta, arg.originalArgs)];\r\n                case 7: return [2 /*return*/, _m.apply(void 0, [_r.sent(), (_p = {\r\n                                fulfilledTimeStamp: Date.now(),\r\n                                baseQueryMeta: result.meta\r\n                            },\r\n                            _p[SHOULD_AUTOBATCH] = true,\r\n                            _p)])];\r\n                case 8:\r\n                    error_1 = _r.sent();\r\n                    catchedError = error_1;\r\n                    if (!(catchedError instanceof HandledError)) return [3 /*break*/, 12];\r\n                    transformErrorResponse = defaultTransformResponse;\r\n                    if (endpointDefinition.query && endpointDefinition.transformErrorResponse) {\r\n                        transformErrorResponse = endpointDefinition.transformErrorResponse;\r\n                    }\r\n                    _r.label = 9;\r\n                case 9:\r\n                    _r.trys.push([9, 11, , 12]);\r\n                    _o = rejectWithValue;\r\n                    return [4 /*yield*/, transformErrorResponse(catchedError.value, catchedError.meta, arg.originalArgs)];\r\n                case 10: return [2 /*return*/, _o.apply(void 0, [_r.sent(), (_q = { baseQueryMeta: catchedError.meta }, _q[SHOULD_AUTOBATCH] = true, _q)])];\r\n                case 11:\r\n                    e_4 = _r.sent();\r\n                    catchedError = e_4;\r\n                    return [3 /*break*/, 12];\r\n                case 12:\r\n                    if (typeof process !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\r\n                        console.error(\"An unhandled error occurred processing a request for the endpoint \\\"\" + arg.endpointName + \"\\\".\\nIn the case of an unhandled error, no tags will be \\\"provided\\\" or \\\"invalidated\\\".\", catchedError);\r\n                    }\r\n                    else {\r\n                        console.error(catchedError);\r\n                    }\r\n                    throw catchedError;\r\n                case 13: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    function isForcedQuery(arg, state) {\r\n        var _a, _b, _c, _d;\r\n        var requestState = (_b = (_a = state[reducerPath]) == null ? void 0 : _a.queries) == null ? void 0 : _b[arg.queryCacheKey];\r\n        var baseFetchOnMountOrArgChange = (_c = state[reducerPath]) == null ? void 0 : _c.config.refetchOnMountOrArgChange;\r\n        var fulfilledVal = requestState == null ? void 0 : requestState.fulfilledTimeStamp;\r\n        var refetchVal = (_d = arg.forceRefetch) != null ? _d : arg.subscribe && baseFetchOnMountOrArgChange;\r\n        if (refetchVal) {\r\n            return refetchVal === true || (Number(new Date()) - Number(fulfilledVal)) / 1e3 >= refetchVal;\r\n        }\r\n        return false;\r\n    }\r\n    var queryThunk = createAsyncThunk(reducerPath + \"/executeQuery\", executeEndpoint, {\r\n        getPendingMeta: function () {\r\n            var _j;\r\n            return _j = { startedTimeStamp: Date.now() }, _j[SHOULD_AUTOBATCH] = true, _j;\r\n        },\r\n        condition: function (queryThunkArgs, _j) {\r\n            var getState = _j.getState;\r\n            var _a, _b, _c;\r\n            var state = getState();\r\n            var requestState = (_b = (_a = state[reducerPath]) == null ? void 0 : _a.queries) == null ? void 0 : _b[queryThunkArgs.queryCacheKey];\r\n            var fulfilledVal = requestState == null ? void 0 : requestState.fulfilledTimeStamp;\r\n            var currentArg = queryThunkArgs.originalArgs;\r\n            var previousArg = requestState == null ? void 0 : requestState.originalArgs;\r\n            var endpointDefinition = endpointDefinitions[queryThunkArgs.endpointName];\r\n            if (isUpsertQuery(queryThunkArgs)) {\r\n                return true;\r\n            }\r\n            if ((requestState == null ? void 0 : requestState.status) === \"pending\") {\r\n                return false;\r\n            }\r\n            if (isForcedQuery(queryThunkArgs, state)) {\r\n                return true;\r\n            }\r\n            if (isQueryDefinition(endpointDefinition) && ((_c = endpointDefinition == null ? void 0 : endpointDefinition.forceRefetch) == null ? void 0 : _c.call(endpointDefinition, {\r\n                currentArg: currentArg,\r\n                previousArg: previousArg,\r\n                endpointState: requestState,\r\n                state: state\r\n            }))) {\r\n                return true;\r\n            }\r\n            if (fulfilledVal) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        dispatchConditionRejection: true\r\n    });\r\n    var mutationThunk = createAsyncThunk(reducerPath + \"/executeMutation\", executeEndpoint, {\r\n        getPendingMeta: function () {\r\n            var _j;\r\n            return _j = { startedTimeStamp: Date.now() }, _j[SHOULD_AUTOBATCH] = true, _j;\r\n        }\r\n    });\r\n    var hasTheForce = function (options) { return \"force\" in options; };\r\n    var hasMaxAge = function (options) { return \"ifOlderThan\" in options; };\r\n    var prefetch = function (endpointName, arg, options) { return function (dispatch, getState) {\r\n        var force = hasTheForce(options) && options.force;\r\n        var maxAge = hasMaxAge(options) && options.ifOlderThan;\r\n        var queryAction = function (force2) {\r\n            if (force2 === void 0) { force2 = true; }\r\n            return api.endpoints[endpointName].initiate(arg, { forceRefetch: force2 });\r\n        };\r\n        var latestStateValue = api.endpoints[endpointName].select(arg)(getState());\r\n        if (force) {\r\n            dispatch(queryAction());\r\n        }\r\n        else if (maxAge) {\r\n            var lastFulfilledTs = latestStateValue == null ? void 0 : latestStateValue.fulfilledTimeStamp;\r\n            if (!lastFulfilledTs) {\r\n                dispatch(queryAction());\r\n                return;\r\n            }\r\n            var shouldRetrigger = (Number(new Date()) - Number(new Date(lastFulfilledTs))) / 1e3 >= maxAge;\r\n            if (shouldRetrigger) {\r\n                dispatch(queryAction());\r\n            }\r\n        }\r\n        else {\r\n            dispatch(queryAction(false));\r\n        }\r\n    }; };\r\n    function matchesEndpoint(endpointName) {\r\n        return function (action) {\r\n            var _a, _b;\r\n            return ((_b = (_a = action == null ? void 0 : action.meta) == null ? void 0 : _a.arg) == null ? void 0 : _b.endpointName) === endpointName;\r\n        };\r\n    }\r\n    function buildMatchThunkActions(thunk, endpointName) {\r\n        return {\r\n            matchPending: isAllOf(isPending(thunk), matchesEndpoint(endpointName)),\r\n            matchFulfilled: isAllOf(isFulfilled(thunk), matchesEndpoint(endpointName)),\r\n            matchRejected: isAllOf(isRejected(thunk), matchesEndpoint(endpointName))\r\n        };\r\n    }\r\n    return {\r\n        queryThunk: queryThunk,\r\n        mutationThunk: mutationThunk,\r\n        prefetch: prefetch,\r\n        updateQueryData: updateQueryData,\r\n        upsertQueryData: upsertQueryData,\r\n        patchQueryData: patchQueryData,\r\n        buildMatchThunkActions: buildMatchThunkActions\r\n    };\r\n}\r\nfunction calculateProvidedByThunk(action, type, endpointDefinitions, assertTagType) {\r\n    return calculateProvidedBy(endpointDefinitions[action.meta.arg.endpointName][type], isFulfilled(action) ? action.payload : void 0, isRejectedWithValue(action) ? action.payload : void 0, action.meta.arg.originalArgs, \"baseQueryMeta\" in action.meta ? action.meta.baseQueryMeta : void 0, assertTagType);\r\n}\r\n// src/query/core/buildSlice.ts\r\nimport { isDraft } from \"immer\";\r\nimport { applyPatches, original } from \"immer\";\r\nfunction updateQuerySubstateIfExists(state, queryCacheKey, update) {\r\n    var substate = state[queryCacheKey];\r\n    if (substate) {\r\n        update(substate);\r\n    }\r\n}\r\nfunction getMutationCacheKey(id) {\r\n    var _a;\r\n    return (_a = \"arg\" in id ? id.arg.fixedCacheKey : id.fixedCacheKey) != null ? _a : id.requestId;\r\n}\r\nfunction updateMutationSubstateIfExists(state, id, update) {\r\n    var substate = state[getMutationCacheKey(id)];\r\n    if (substate) {\r\n        update(substate);\r\n    }\r\n}\r\nvar initialState = {};\r\nfunction buildSlice(_j) {\r\n    var reducerPath = _j.reducerPath, queryThunk = _j.queryThunk, mutationThunk = _j.mutationThunk, _k = _j.context, definitions = _k.endpointDefinitions, apiUid = _k.apiUid, extractRehydrationInfo = _k.extractRehydrationInfo, hasRehydrationInfo = _k.hasRehydrationInfo, assertTagType = _j.assertTagType, config = _j.config;\r\n    var resetApiState = createAction2(reducerPath + \"/resetApiState\");\r\n    var querySlice = createSlice({\r\n        name: reducerPath + \"/queries\",\r\n        initialState: initialState,\r\n        reducers: {\r\n            removeQueryResult: {\r\n                reducer: function (draft, _j) {\r\n                    var queryCacheKey = _j.payload.queryCacheKey;\r\n                    delete draft[queryCacheKey];\r\n                },\r\n                prepare: prepareAutoBatched()\r\n            },\r\n            queryResultPatched: {\r\n                reducer: function (draft, _j) {\r\n                    var _k = _j.payload, queryCacheKey = _k.queryCacheKey, patches = _k.patches;\r\n                    updateQuerySubstateIfExists(draft, queryCacheKey, function (substate) {\r\n                        substate.data = applyPatches(substate.data, patches.concat());\r\n                    });\r\n                },\r\n                prepare: prepareAutoBatched()\r\n            }\r\n        },\r\n        extraReducers: function (builder) {\r\n            builder.addCase(queryThunk.pending, function (draft, _j) {\r\n                var meta = _j.meta, arg = _j.meta.arg;\r\n                var _a, _b;\r\n                var upserting = isUpsertQuery(arg);\r\n                if (arg.subscribe || upserting) {\r\n                    (_b = draft[_a = arg.queryCacheKey]) != null ? _b : draft[_a] = {\r\n                        status: QueryStatus.uninitialized,\r\n                        endpointName: arg.endpointName\r\n                    };\r\n                }\r\n                updateQuerySubstateIfExists(draft, arg.queryCacheKey, function (substate) {\r\n                    substate.status = QueryStatus.pending;\r\n                    substate.requestId = upserting && substate.requestId ? substate.requestId : meta.requestId;\r\n                    if (arg.originalArgs !== void 0) {\r\n                        substate.originalArgs = arg.originalArgs;\r\n                    }\r\n                    substate.startedTimeStamp = meta.startedTimeStamp;\r\n                });\r\n            }).addCase(queryThunk.fulfilled, function (draft, _j) {\r\n                var meta = _j.meta, payload = _j.payload;\r\n                updateQuerySubstateIfExists(draft, meta.arg.queryCacheKey, function (substate) {\r\n                    var _a;\r\n                    if (substate.requestId !== meta.requestId && !isUpsertQuery(meta.arg))\r\n                        return;\r\n                    var merge = definitions[meta.arg.endpointName].merge;\r\n                    substate.status = QueryStatus.fulfilled;\r\n                    if (merge) {\r\n                        if (substate.data !== void 0) {\r\n                            var fulfilledTimeStamp_1 = meta.fulfilledTimeStamp, arg_1 = meta.arg, baseQueryMeta_1 = meta.baseQueryMeta, requestId_1 = meta.requestId;\r\n                            var newData = createNextState(substate.data, function (draftSubstateData) {\r\n                                return merge(draftSubstateData, payload, {\r\n                                    arg: arg_1.originalArgs,\r\n                                    baseQueryMeta: baseQueryMeta_1,\r\n                                    fulfilledTimeStamp: fulfilledTimeStamp_1,\r\n                                    requestId: requestId_1\r\n                                });\r\n                            });\r\n                            substate.data = newData;\r\n                        }\r\n                        else {\r\n                            substate.data = payload;\r\n                        }\r\n                    }\r\n                    else {\r\n                        substate.data = ((_a = definitions[meta.arg.endpointName].structuralSharing) != null ? _a : true) ? copyWithStructuralSharing(isDraft(substate.data) ? original(substate.data) : substate.data, payload) : payload;\r\n                    }\r\n                    delete substate.error;\r\n                    substate.fulfilledTimeStamp = meta.fulfilledTimeStamp;\r\n                });\r\n            }).addCase(queryThunk.rejected, function (draft, _j) {\r\n                var _k = _j.meta, condition = _k.condition, arg = _k.arg, requestId = _k.requestId, error = _j.error, payload = _j.payload;\r\n                updateQuerySubstateIfExists(draft, arg.queryCacheKey, function (substate) {\r\n                    if (condition) {\r\n                    }\r\n                    else {\r\n                        if (substate.requestId !== requestId)\r\n                            return;\r\n                        substate.status = QueryStatus.rejected;\r\n                        substate.error = payload != null ? payload : error;\r\n                    }\r\n                });\r\n            }).addMatcher(hasRehydrationInfo, function (draft, action) {\r\n                var queries = extractRehydrationInfo(action).queries;\r\n                for (var _j = 0, _k = Object.entries(queries); _j < _k.length; _j++) {\r\n                    var _l = _k[_j], key = _l[0], entry = _l[1];\r\n                    if ((entry == null ? void 0 : entry.status) === QueryStatus.fulfilled || (entry == null ? void 0 : entry.status) === QueryStatus.rejected) {\r\n                        draft[key] = entry;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    var mutationSlice = createSlice({\r\n        name: reducerPath + \"/mutations\",\r\n        initialState: initialState,\r\n        reducers: {\r\n            removeMutationResult: {\r\n                reducer: function (draft, _j) {\r\n                    var payload = _j.payload;\r\n                    var cacheKey = getMutationCacheKey(payload);\r\n                    if (cacheKey in draft) {\r\n                        delete draft[cacheKey];\r\n                    }\r\n                },\r\n                prepare: prepareAutoBatched()\r\n            }\r\n        },\r\n        extraReducers: function (builder) {\r\n            builder.addCase(mutationThunk.pending, function (draft, _j) {\r\n                var meta = _j.meta, _k = _j.meta, requestId = _k.requestId, arg = _k.arg, startedTimeStamp = _k.startedTimeStamp;\r\n                if (!arg.track)\r\n                    return;\r\n                draft[getMutationCacheKey(meta)] = {\r\n                    requestId: requestId,\r\n                    status: QueryStatus.pending,\r\n                    endpointName: arg.endpointName,\r\n                    startedTimeStamp: startedTimeStamp\r\n                };\r\n            }).addCase(mutationThunk.fulfilled, function (draft, _j) {\r\n                var payload = _j.payload, meta = _j.meta;\r\n                if (!meta.arg.track)\r\n                    return;\r\n                updateMutationSubstateIfExists(draft, meta, function (substate) {\r\n                    if (substate.requestId !== meta.requestId)\r\n                        return;\r\n                    substate.status = QueryStatus.fulfilled;\r\n                    substate.data = payload;\r\n                    substate.fulfilledTimeStamp = meta.fulfilledTimeStamp;\r\n                });\r\n            }).addCase(mutationThunk.rejected, function (draft, _j) {\r\n                var payload = _j.payload, error = _j.error, meta = _j.meta;\r\n                if (!meta.arg.track)\r\n                    return;\r\n                updateMutationSubstateIfExists(draft, meta, function (substate) {\r\n                    if (substate.requestId !== meta.requestId)\r\n                        return;\r\n                    substate.status = QueryStatus.rejected;\r\n                    substate.error = payload != null ? payload : error;\r\n                });\r\n            }).addMatcher(hasRehydrationInfo, function (draft, action) {\r\n                var mutations = extractRehydrationInfo(action).mutations;\r\n                for (var _j = 0, _k = Object.entries(mutations); _j < _k.length; _j++) {\r\n                    var _l = _k[_j], key = _l[0], entry = _l[1];\r\n                    if (((entry == null ? void 0 : entry.status) === QueryStatus.fulfilled || (entry == null ? void 0 : entry.status) === QueryStatus.rejected) && key !== (entry == null ? void 0 : entry.requestId)) {\r\n                        draft[key] = entry;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n    var invalidationSlice = createSlice({\r\n        name: reducerPath + \"/invalidation\",\r\n        initialState: initialState,\r\n        reducers: {\r\n            updateProvidedBy: {\r\n                reducer: function (draft, action) {\r\n                    var _a, _b, _c, _d;\r\n                    var _j = action.payload, queryCacheKey = _j.queryCacheKey, providedTags = _j.providedTags;\r\n                    for (var _k = 0, _l = Object.values(draft); _k < _l.length; _k++) {\r\n                        var tagTypeSubscriptions = _l[_k];\r\n                        for (var _m = 0, _o = Object.values(tagTypeSubscriptions); _m < _o.length; _m++) {\r\n                            var idSubscriptions = _o[_m];\r\n                            var foundAt = idSubscriptions.indexOf(queryCacheKey);\r\n                            if (foundAt !== -1) {\r\n                                idSubscriptions.splice(foundAt, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    for (var _p = 0, providedTags_1 = providedTags; _p < providedTags_1.length; _p++) {\r\n                        var _q = providedTags_1[_p], type = _q.type, id = _q.id;\r\n                        var subscribedQueries = (_d = (_b = (_a = draft[type]) != null ? _a : draft[type] = {})[_c = id || \"__internal_without_id\"]) != null ? _d : _b[_c] = [];\r\n                        var alreadySubscribed = subscribedQueries.includes(queryCacheKey);\r\n                        if (!alreadySubscribed) {\r\n                            subscribedQueries.push(queryCacheKey);\r\n                        }\r\n                    }\r\n                },\r\n                prepare: prepareAutoBatched()\r\n            }\r\n        },\r\n        extraReducers: function (builder) {\r\n            builder.addCase(querySlice.actions.removeQueryResult, function (draft, _j) {\r\n                var queryCacheKey = _j.payload.queryCacheKey;\r\n                for (var _k = 0, _l = Object.values(draft); _k < _l.length; _k++) {\r\n                    var tagTypeSubscriptions = _l[_k];\r\n                    for (var _m = 0, _o = Object.values(tagTypeSubscriptions); _m < _o.length; _m++) {\r\n                        var idSubscriptions = _o[_m];\r\n                        var foundAt = idSubscriptions.indexOf(queryCacheKey);\r\n                        if (foundAt !== -1) {\r\n                            idSubscriptions.splice(foundAt, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }).addMatcher(hasRehydrationInfo, function (draft, action) {\r\n                var _a, _b, _c, _d;\r\n                var provided = extractRehydrationInfo(action).provided;\r\n                for (var _j = 0, _k = Object.entries(provided); _j < _k.length; _j++) {\r\n                    var _l = _k[_j], type = _l[0], incomingTags = _l[1];\r\n                    for (var _m = 0, _o = Object.entries(incomingTags); _m < _o.length; _m++) {\r\n                        var _p = _o[_m], id = _p[0], cacheKeys = _p[1];\r\n                        var subscribedQueries = (_d = (_b = (_a = draft[type]) != null ? _a : draft[type] = {})[_c = id || \"__internal_without_id\"]) != null ? _d : _b[_c] = [];\r\n                        for (var _q = 0, cacheKeys_1 = cacheKeys; _q < cacheKeys_1.length; _q++) {\r\n                            var queryCacheKey = cacheKeys_1[_q];\r\n                            var alreadySubscribed = subscribedQueries.includes(queryCacheKey);\r\n                            if (!alreadySubscribed) {\r\n                                subscribedQueries.push(queryCacheKey);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }).addMatcher(isAnyOf(isFulfilled2(queryThunk), isRejectedWithValue2(queryThunk)), function (draft, action) {\r\n                var providedTags = calculateProvidedByThunk(action, \"providesTags\", definitions, assertTagType);\r\n                var queryCacheKey = action.meta.arg.queryCacheKey;\r\n                invalidationSlice.caseReducers.updateProvidedBy(draft, invalidationSlice.actions.updateProvidedBy({\r\n                    queryCacheKey: queryCacheKey,\r\n                    providedTags: providedTags\r\n                }));\r\n            });\r\n        }\r\n    });\r\n    var subscriptionSlice = createSlice({\r\n        name: reducerPath + \"/subscriptions\",\r\n        initialState: initialState,\r\n        reducers: {\r\n            updateSubscriptionOptions: function (d, a) {\r\n            },\r\n            unsubscribeQueryResult: function (d, a) {\r\n            },\r\n            internal_probeSubscription: function (d, a) {\r\n            }\r\n        }\r\n    });\r\n    var internalSubscriptionsSlice = createSlice({\r\n        name: reducerPath + \"/internalSubscriptions\",\r\n        initialState: initialState,\r\n        reducers: {\r\n            subscriptionsUpdated: {\r\n                reducer: function (state, action) {\r\n                    return applyPatches(state, action.payload);\r\n                },\r\n                prepare: prepareAutoBatched()\r\n            }\r\n        }\r\n    });\r\n    var configSlice = createSlice({\r\n        name: reducerPath + \"/config\",\r\n        initialState: __spreadValues({\r\n            online: isOnline(),\r\n            focused: isDocumentVisible(),\r\n            middlewareRegistered: false\r\n        }, config),\r\n        reducers: {\r\n            middlewareRegistered: function (state, _j) {\r\n                var payload = _j.payload;\r\n                state.middlewareRegistered = state.middlewareRegistered === \"conflict\" || apiUid !== payload ? \"conflict\" : true;\r\n            }\r\n        },\r\n        extraReducers: function (builder) {\r\n            builder.addCase(onOnline, function (state) {\r\n                state.online = true;\r\n            }).addCase(onOffline, function (state) {\r\n                state.online = false;\r\n            }).addCase(onFocus, function (state) {\r\n                state.focused = true;\r\n            }).addCase(onFocusLost, function (state) {\r\n                state.focused = false;\r\n            }).addMatcher(hasRehydrationInfo, function (draft) { return __spreadValues({}, draft); });\r\n        }\r\n    });\r\n    var combinedReducer = combineReducers({\r\n        queries: querySlice.reducer,\r\n        mutations: mutationSlice.reducer,\r\n        provided: invalidationSlice.reducer,\r\n        subscriptions: internalSubscriptionsSlice.reducer,\r\n        config: configSlice.reducer\r\n    });\r\n    var reducer = function (state, action) { return combinedReducer(resetApiState.match(action) ? void 0 : state, action); };\r\n    var actions = __spreadProps(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, configSlice.actions), querySlice.actions), subscriptionSlice.actions), internalSubscriptionsSlice.actions), mutationSlice.actions), invalidationSlice.actions), {\r\n        unsubscribeMutationResult: mutationSlice.actions.removeMutationResult,\r\n        resetApiState: resetApiState\r\n    });\r\n    return { reducer: reducer, actions: actions };\r\n}\r\n// src/query/core/buildSelectors.ts\r\nvar skipToken = /* @__PURE__ */ Symbol.for(\"RTKQ/skipToken\");\r\nvar skipSelector = skipToken;\r\nvar initialSubState = {\r\n    status: QueryStatus.uninitialized\r\n};\r\nvar defaultQuerySubState = /* @__PURE__ */ createNextState2(initialSubState, function () {\r\n});\r\nvar defaultMutationSubState = /* @__PURE__ */ createNextState2(initialSubState, function () {\r\n});\r\nfunction buildSelectors(_j) {\r\n    var serializeQueryArgs = _j.serializeQueryArgs, reducerPath = _j.reducerPath;\r\n    var selectSkippedQuery = function (state) { return defaultQuerySubState; };\r\n    var selectSkippedMutation = function (state) { return defaultMutationSubState; };\r\n    return { buildQuerySelector: buildQuerySelector, buildMutationSelector: buildMutationSelector, selectInvalidatedBy: selectInvalidatedBy };\r\n    function withRequestFlags(substate) {\r\n        return __spreadValues(__spreadValues({}, substate), getRequestStatusFlags(substate.status));\r\n    }\r\n    function selectInternalState(rootState) {\r\n        var state = rootState[reducerPath];\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            if (!state) {\r\n                if (selectInternalState.triggered)\r\n                    return state;\r\n                selectInternalState.triggered = true;\r\n                console.error(\"Error: No data found at `state.\" + reducerPath + \"`. Did you forget to add the reducer to the store?\");\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    function buildQuerySelector(endpointName, endpointDefinition) {\r\n        return function (queryArgs) {\r\n            var serializedArgs = serializeQueryArgs({\r\n                queryArgs: queryArgs,\r\n                endpointDefinition: endpointDefinition,\r\n                endpointName: endpointName\r\n            });\r\n            var selectQuerySubstate = function (state) {\r\n                var _a, _b, _c;\r\n                return (_c = (_b = (_a = selectInternalState(state)) == null ? void 0 : _a.queries) == null ? void 0 : _b[serializedArgs]) != null ? _c : defaultQuerySubState;\r\n            };\r\n            var finalSelectQuerySubState = queryArgs === skipToken ? selectSkippedQuery : selectQuerySubstate;\r\n            return createSelector(finalSelectQuerySubState, withRequestFlags);\r\n        };\r\n    }\r\n    function buildMutationSelector() {\r\n        return function (id) {\r\n            var _a;\r\n            var mutationId;\r\n            if (typeof id === \"object\") {\r\n                mutationId = (_a = getMutationCacheKey(id)) != null ? _a : skipToken;\r\n            }\r\n            else {\r\n                mutationId = id;\r\n            }\r\n            var selectMutationSubstate = function (state) {\r\n                var _a2, _b, _c;\r\n                return (_c = (_b = (_a2 = selectInternalState(state)) == null ? void 0 : _a2.mutations) == null ? void 0 : _b[mutationId]) != null ? _c : defaultMutationSubState;\r\n            };\r\n            var finalSelectMutationSubstate = mutationId === skipToken ? selectSkippedMutation : selectMutationSubstate;\r\n            return createSelector(finalSelectMutationSubstate, withRequestFlags);\r\n        };\r\n    }\r\n    function selectInvalidatedBy(state, tags) {\r\n        var _a;\r\n        var apiState = state[reducerPath];\r\n        var toInvalidate = new Set();\r\n        for (var _j = 0, _k = tags.map(expandTagDescription); _j < _k.length; _j++) {\r\n            var tag = _k[_j];\r\n            var provided = apiState.provided[tag.type];\r\n            if (!provided) {\r\n                continue;\r\n            }\r\n            var invalidateSubscriptions = (_a = tag.id !== void 0 ? provided[tag.id] : flatten(Object.values(provided))) != null ? _a : [];\r\n            for (var _l = 0, invalidateSubscriptions_1 = invalidateSubscriptions; _l < invalidateSubscriptions_1.length; _l++) {\r\n                var invalidate = invalidateSubscriptions_1[_l];\r\n                toInvalidate.add(invalidate);\r\n            }\r\n        }\r\n        return flatten(Array.from(toInvalidate.values()).map(function (queryCacheKey) {\r\n            var querySubState = apiState.queries[queryCacheKey];\r\n            return querySubState ? [\r\n                {\r\n                    queryCacheKey: queryCacheKey,\r\n                    endpointName: querySubState.endpointName,\r\n                    originalArgs: querySubState.originalArgs\r\n                }\r\n            ] : [];\r\n        }));\r\n    }\r\n}\r\n// src/query/defaultSerializeQueryArgs.ts\r\nimport { isPlainObject as isPlainObject3 } from \"@reduxjs/toolkit\";\r\nvar cache = WeakMap ? new WeakMap() : void 0;\r\nvar defaultSerializeQueryArgs = function (_j) {\r\n    var endpointName = _j.endpointName, queryArgs = _j.queryArgs;\r\n    var serialized = \"\";\r\n    var cached = cache == null ? void 0 : cache.get(queryArgs);\r\n    if (typeof cached === \"string\") {\r\n        serialized = cached;\r\n    }\r\n    else {\r\n        var stringified = JSON.stringify(queryArgs, function (key, value) { return isPlainObject3(value) ? Object.keys(value).sort().reduce(function (acc, key2) {\r\n            acc[key2] = value[key2];\r\n            return acc;\r\n        }, {}) : value; });\r\n        if (isPlainObject3(queryArgs)) {\r\n            cache == null ? void 0 : cache.set(queryArgs, stringified);\r\n        }\r\n        serialized = stringified;\r\n    }\r\n    return endpointName + \"(\" + serialized + \")\";\r\n};\r\n// src/query/createApi.ts\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { defaultMemoize } from \"reselect\";\r\nfunction buildCreateApi() {\r\n    var modules = [];\r\n    for (var _j = 0; _j < arguments.length; _j++) {\r\n        modules[_j] = arguments[_j];\r\n    }\r\n    return function baseCreateApi(options) {\r\n        var extractRehydrationInfo = defaultMemoize(function (action) {\r\n            var _a, _b;\r\n            return (_b = options.extractRehydrationInfo) == null ? void 0 : _b.call(options, action, {\r\n                reducerPath: (_a = options.reducerPath) != null ? _a : \"api\"\r\n            });\r\n        });\r\n        var optionsWithDefaults = __spreadProps(__spreadValues({\r\n            reducerPath: \"api\",\r\n            keepUnusedDataFor: 60,\r\n            refetchOnMountOrArgChange: false,\r\n            refetchOnFocus: false,\r\n            refetchOnReconnect: false\r\n        }, options), {\r\n            extractRehydrationInfo: extractRehydrationInfo,\r\n            serializeQueryArgs: function (queryArgsApi) {\r\n                var finalSerializeQueryArgs = defaultSerializeQueryArgs;\r\n                if (\"serializeQueryArgs\" in queryArgsApi.endpointDefinition) {\r\n                    var endpointSQA_1 = queryArgsApi.endpointDefinition.serializeQueryArgs;\r\n                    finalSerializeQueryArgs = function (queryArgsApi2) {\r\n                        var initialResult = endpointSQA_1(queryArgsApi2);\r\n                        if (typeof initialResult === \"string\") {\r\n                            return initialResult;\r\n                        }\r\n                        else {\r\n                            return defaultSerializeQueryArgs(__spreadProps(__spreadValues({}, queryArgsApi2), {\r\n                                queryArgs: initialResult\r\n                            }));\r\n                        }\r\n                    };\r\n                }\r\n                else if (options.serializeQueryArgs) {\r\n                    finalSerializeQueryArgs = options.serializeQueryArgs;\r\n                }\r\n                return finalSerializeQueryArgs(queryArgsApi);\r\n            },\r\n            tagTypes: __spreadArray([], options.tagTypes || [])\r\n        });\r\n        var context = {\r\n            endpointDefinitions: {},\r\n            batch: function (fn) {\r\n                fn();\r\n            },\r\n            apiUid: nanoid(),\r\n            extractRehydrationInfo: extractRehydrationInfo,\r\n            hasRehydrationInfo: defaultMemoize(function (action) { return extractRehydrationInfo(action) != null; })\r\n        };\r\n        var api = {\r\n            injectEndpoints: injectEndpoints,\r\n            enhanceEndpoints: function (_j) {\r\n                var addTagTypes = _j.addTagTypes, endpoints = _j.endpoints;\r\n                if (addTagTypes) {\r\n                    for (var _k = 0, addTagTypes_1 = addTagTypes; _k < addTagTypes_1.length; _k++) {\r\n                        var eT = addTagTypes_1[_k];\r\n                        if (!optionsWithDefaults.tagTypes.includes(eT)) {\r\n                            ;\r\n                            optionsWithDefaults.tagTypes.push(eT);\r\n                        }\r\n                    }\r\n                }\r\n                if (endpoints) {\r\n                    for (var _l = 0, _m = Object.entries(endpoints); _l < _m.length; _l++) {\r\n                        var _o = _m[_l], endpointName = _o[0], partialDefinition = _o[1];\r\n                        if (typeof partialDefinition === \"function\") {\r\n                            partialDefinition(context.endpointDefinitions[endpointName]);\r\n                        }\r\n                        else {\r\n                            Object.assign(context.endpointDefinitions[endpointName] || {}, partialDefinition);\r\n                        }\r\n                    }\r\n                }\r\n                return api;\r\n            }\r\n        };\r\n        var initializedModules = modules.map(function (m) { return m.init(api, optionsWithDefaults, context); });\r\n        function injectEndpoints(inject) {\r\n            var evaluatedEndpoints = inject.endpoints({\r\n                query: function (x) { return __spreadProps(__spreadValues({}, x), { type: DefinitionType.query }); },\r\n                mutation: function (x) { return __spreadProps(__spreadValues({}, x), { type: DefinitionType.mutation }); }\r\n            });\r\n            for (var _j = 0, _k = Object.entries(evaluatedEndpoints); _j < _k.length; _j++) {\r\n                var _l = _k[_j], endpointName = _l[0], definition = _l[1];\r\n                if (!inject.overrideExisting && endpointName in context.endpointDefinitions) {\r\n                    if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\r\n                        console.error(\"called `injectEndpoints` to override already-existing endpointName \" + endpointName + \" without specifying `overrideExisting: true`\");\r\n                    }\r\n                    continue;\r\n                }\r\n                context.endpointDefinitions[endpointName] = definition;\r\n                for (var _m = 0, initializedModules_1 = initializedModules; _m < initializedModules_1.length; _m++) {\r\n                    var m = initializedModules_1[_m];\r\n                    m.injectEndpoint(endpointName, definition);\r\n                }\r\n            }\r\n            return api;\r\n        }\r\n        return api.injectEndpoints({ endpoints: options.endpoints });\r\n    };\r\n}\r\n// src/query/fakeBaseQuery.ts\r\nfunction fakeBaseQuery() {\r\n    return function () {\r\n        throw new Error(\"When using `fakeBaseQuery`, all queries & mutations must use the `queryFn` definition syntax.\");\r\n    };\r\n}\r\n// src/query/core/buildMiddleware/index.ts\r\nimport { createAction as createAction3 } from \"@reduxjs/toolkit\";\r\n// src/query/core/buildMiddleware/cacheCollection.ts\r\nfunction isObjectEmpty(obj) {\r\n    for (var k in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nvar THIRTY_TWO_BIT_MAX_TIMER_SECONDS = 2147483647 / 1e3 - 1;\r\nvar buildCacheCollectionHandler = function (_j) {\r\n    var reducerPath = _j.reducerPath, api = _j.api, context = _j.context, internalState = _j.internalState;\r\n    var _k = api.internalActions, removeQueryResult = _k.removeQueryResult, unsubscribeQueryResult = _k.unsubscribeQueryResult;\r\n    function anySubscriptionsRemainingForKey(queryCacheKey) {\r\n        var subscriptions = internalState.currentSubscriptions[queryCacheKey];\r\n        return !!subscriptions && !isObjectEmpty(subscriptions);\r\n    }\r\n    var currentRemovalTimeouts = {};\r\n    var handler = function (action, mwApi, internalState2) {\r\n        var _a;\r\n        if (unsubscribeQueryResult.match(action)) {\r\n            var state = mwApi.getState()[reducerPath];\r\n            var queryCacheKey = action.payload.queryCacheKey;\r\n            handleUnsubscribe(queryCacheKey, (_a = state.queries[queryCacheKey]) == null ? void 0 : _a.endpointName, mwApi, state.config);\r\n        }\r\n        if (api.util.resetApiState.match(action)) {\r\n            for (var _j = 0, _k = Object.entries(currentRemovalTimeouts); _j < _k.length; _j++) {\r\n                var _l = _k[_j], key = _l[0], timeout = _l[1];\r\n                if (timeout)\r\n                    clearTimeout(timeout);\r\n                delete currentRemovalTimeouts[key];\r\n            }\r\n        }\r\n        if (context.hasRehydrationInfo(action)) {\r\n            var state = mwApi.getState()[reducerPath];\r\n            var queries = context.extractRehydrationInfo(action).queries;\r\n            for (var _m = 0, _o = Object.entries(queries); _m < _o.length; _m++) {\r\n                var _p = _o[_m], queryCacheKey = _p[0], queryState = _p[1];\r\n                handleUnsubscribe(queryCacheKey, queryState == null ? void 0 : queryState.endpointName, mwApi, state.config);\r\n            }\r\n        }\r\n    };\r\n    function handleUnsubscribe(queryCacheKey, endpointName, api2, config) {\r\n        var _a;\r\n        var endpointDefinition = context.endpointDefinitions[endpointName];\r\n        var keepUnusedDataFor = (_a = endpointDefinition == null ? void 0 : endpointDefinition.keepUnusedDataFor) != null ? _a : config.keepUnusedDataFor;\r\n        if (keepUnusedDataFor === Infinity) {\r\n            return;\r\n        }\r\n        var finalKeepUnusedDataFor = Math.max(0, Math.min(keepUnusedDataFor, THIRTY_TWO_BIT_MAX_TIMER_SECONDS));\r\n        if (!anySubscriptionsRemainingForKey(queryCacheKey)) {\r\n            var currentTimeout = currentRemovalTimeouts[queryCacheKey];\r\n            if (currentTimeout) {\r\n                clearTimeout(currentTimeout);\r\n            }\r\n            currentRemovalTimeouts[queryCacheKey] = setTimeout(function () {\r\n                if (!anySubscriptionsRemainingForKey(queryCacheKey)) {\r\n                    api2.dispatch(removeQueryResult({ queryCacheKey: queryCacheKey }));\r\n                }\r\n                delete currentRemovalTimeouts[queryCacheKey];\r\n            }, finalKeepUnusedDataFor * 1e3);\r\n        }\r\n    }\r\n    return handler;\r\n};\r\n// src/query/core/buildMiddleware/invalidationByTags.ts\r\nimport { isAnyOf as isAnyOf2, isFulfilled as isFulfilled3, isRejectedWithValue as isRejectedWithValue3 } from \"@reduxjs/toolkit\";\r\nvar buildInvalidationByTagsHandler = function (_j) {\r\n    var reducerPath = _j.reducerPath, context = _j.context, endpointDefinitions = _j.context.endpointDefinitions, mutationThunk = _j.mutationThunk, api = _j.api, assertTagType = _j.assertTagType, refetchQuery = _j.refetchQuery;\r\n    var removeQueryResult = api.internalActions.removeQueryResult;\r\n    var isThunkActionWithTags = isAnyOf2(isFulfilled3(mutationThunk), isRejectedWithValue3(mutationThunk));\r\n    var handler = function (action, mwApi) {\r\n        if (isThunkActionWithTags(action)) {\r\n            invalidateTags(calculateProvidedByThunk(action, \"invalidatesTags\", endpointDefinitions, assertTagType), mwApi);\r\n        }\r\n        if (api.util.invalidateTags.match(action)) {\r\n            invalidateTags(calculateProvidedBy(action.payload, void 0, void 0, void 0, void 0, assertTagType), mwApi);\r\n        }\r\n    };\r\n    function invalidateTags(tags, mwApi) {\r\n        var rootState = mwApi.getState();\r\n        var state = rootState[reducerPath];\r\n        var toInvalidate = api.util.selectInvalidatedBy(rootState, tags);\r\n        context.batch(function () {\r\n            var _a;\r\n            var valuesArray = Array.from(toInvalidate.values());\r\n            for (var _j = 0, valuesArray_1 = valuesArray; _j < valuesArray_1.length; _j++) {\r\n                var queryCacheKey = valuesArray_1[_j].queryCacheKey;\r\n                var querySubState = state.queries[queryCacheKey];\r\n                var subscriptionSubState = (_a = state.subscriptions[queryCacheKey]) != null ? _a : {};\r\n                if (querySubState) {\r\n                    if (Object.keys(subscriptionSubState).length === 0) {\r\n                        mwApi.dispatch(removeQueryResult({\r\n                            queryCacheKey: queryCacheKey\r\n                        }));\r\n                    }\r\n                    else if (querySubState.status !== QueryStatus.uninitialized) {\r\n                        mwApi.dispatch(refetchQuery(querySubState, queryCacheKey));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return handler;\r\n};\r\n// src/query/core/buildMiddleware/polling.ts\r\nvar buildPollingHandler = function (_j) {\r\n    var reducerPath = _j.reducerPath, queryThunk = _j.queryThunk, api = _j.api, refetchQuery = _j.refetchQuery, internalState = _j.internalState;\r\n    var currentPolls = {};\r\n    var handler = function (action, mwApi) {\r\n        if (api.internalActions.updateSubscriptionOptions.match(action) || api.internalActions.unsubscribeQueryResult.match(action)) {\r\n            updatePollingInterval(action.payload, mwApi);\r\n        }\r\n        if (queryThunk.pending.match(action) || queryThunk.rejected.match(action) && action.meta.condition) {\r\n            updatePollingInterval(action.meta.arg, mwApi);\r\n        }\r\n        if (queryThunk.fulfilled.match(action) || queryThunk.rejected.match(action) && !action.meta.condition) {\r\n            startNextPoll(action.meta.arg, mwApi);\r\n        }\r\n        if (api.util.resetApiState.match(action)) {\r\n            clearPolls();\r\n        }\r\n    };\r\n    function startNextPoll(_j, api2) {\r\n        var queryCacheKey = _j.queryCacheKey;\r\n        var state = api2.getState()[reducerPath];\r\n        var querySubState = state.queries[queryCacheKey];\r\n        var subscriptions = internalState.currentSubscriptions[queryCacheKey];\r\n        if (!querySubState || querySubState.status === QueryStatus.uninitialized)\r\n            return;\r\n        var lowestPollingInterval = findLowestPollingInterval(subscriptions);\r\n        if (!Number.isFinite(lowestPollingInterval))\r\n            return;\r\n        var currentPoll = currentPolls[queryCacheKey];\r\n        if (currentPoll == null ? void 0 : currentPoll.timeout) {\r\n            clearTimeout(currentPoll.timeout);\r\n            currentPoll.timeout = void 0;\r\n        }\r\n        var nextPollTimestamp = Date.now() + lowestPollingInterval;\r\n        var currentInterval = currentPolls[queryCacheKey] = {\r\n            nextPollTimestamp: nextPollTimestamp,\r\n            pollingInterval: lowestPollingInterval,\r\n            timeout: setTimeout(function () {\r\n                currentInterval.timeout = void 0;\r\n                api2.dispatch(refetchQuery(querySubState, queryCacheKey));\r\n            }, lowestPollingInterval)\r\n        };\r\n    }\r\n    function updatePollingInterval(_j, api2) {\r\n        var queryCacheKey = _j.queryCacheKey;\r\n        var state = api2.getState()[reducerPath];\r\n        var querySubState = state.queries[queryCacheKey];\r\n        var subscriptions = internalState.currentSubscriptions[queryCacheKey];\r\n        if (!querySubState || querySubState.status === QueryStatus.uninitialized) {\r\n            return;\r\n        }\r\n        var lowestPollingInterval = findLowestPollingInterval(subscriptions);\r\n        if (!Number.isFinite(lowestPollingInterval)) {\r\n            cleanupPollForKey(queryCacheKey);\r\n            return;\r\n        }\r\n        var currentPoll = currentPolls[queryCacheKey];\r\n        var nextPollTimestamp = Date.now() + lowestPollingInterval;\r\n        if (!currentPoll || nextPollTimestamp < currentPoll.nextPollTimestamp) {\r\n            startNextPoll({ queryCacheKey: queryCacheKey }, api2);\r\n        }\r\n    }\r\n    function cleanupPollForKey(key) {\r\n        var existingPoll = currentPolls[key];\r\n        if (existingPoll == null ? void 0 : existingPoll.timeout) {\r\n            clearTimeout(existingPoll.timeout);\r\n        }\r\n        delete currentPolls[key];\r\n    }\r\n    function clearPolls() {\r\n        for (var _j = 0, _k = Object.keys(currentPolls); _j < _k.length; _j++) {\r\n            var key = _k[_j];\r\n            cleanupPollForKey(key);\r\n        }\r\n    }\r\n    function findLowestPollingInterval(subscribers) {\r\n        if (subscribers === void 0) { subscribers = {}; }\r\n        var lowestPollingInterval = Number.POSITIVE_INFINITY;\r\n        for (var key in subscribers) {\r\n            if (!!subscribers[key].pollingInterval) {\r\n                lowestPollingInterval = Math.min(subscribers[key].pollingInterval, lowestPollingInterval);\r\n            }\r\n        }\r\n        return lowestPollingInterval;\r\n    }\r\n    return handler;\r\n};\r\n// src/query/core/buildMiddleware/windowEventHandling.ts\r\nvar buildWindowEventHandler = function (_j) {\r\n    var reducerPath = _j.reducerPath, context = _j.context, api = _j.api, refetchQuery = _j.refetchQuery, internalState = _j.internalState;\r\n    var removeQueryResult = api.internalActions.removeQueryResult;\r\n    var handler = function (action, mwApi) {\r\n        if (onFocus.match(action)) {\r\n            refetchValidQueries(mwApi, \"refetchOnFocus\");\r\n        }\r\n        if (onOnline.match(action)) {\r\n            refetchValidQueries(mwApi, \"refetchOnReconnect\");\r\n        }\r\n    };\r\n    function refetchValidQueries(api2, type) {\r\n        var state = api2.getState()[reducerPath];\r\n        var queries = state.queries;\r\n        var subscriptions = internalState.currentSubscriptions;\r\n        context.batch(function () {\r\n            for (var _j = 0, _k = Object.keys(subscriptions); _j < _k.length; _j++) {\r\n                var queryCacheKey = _k[_j];\r\n                var querySubState = queries[queryCacheKey];\r\n                var subscriptionSubState = subscriptions[queryCacheKey];\r\n                if (!subscriptionSubState || !querySubState)\r\n                    continue;\r\n                var shouldRefetch = Object.values(subscriptionSubState).some(function (sub) { return sub[type] === true; }) || Object.values(subscriptionSubState).every(function (sub) { return sub[type] === void 0; }) && state.config[type];\r\n                if (shouldRefetch) {\r\n                    if (Object.keys(subscriptionSubState).length === 0) {\r\n                        api2.dispatch(removeQueryResult({\r\n                            queryCacheKey: queryCacheKey\r\n                        }));\r\n                    }\r\n                    else if (querySubState.status !== QueryStatus.uninitialized) {\r\n                        api2.dispatch(refetchQuery(querySubState, queryCacheKey));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return handler;\r\n};\r\n// src/query/core/buildMiddleware/cacheLifecycle.ts\r\nimport { isAsyncThunkAction, isFulfilled as isFulfilled4 } from \"@reduxjs/toolkit\";\r\nvar neverResolvedError = new Error(\"Promise never resolved before cacheEntryRemoved.\");\r\nvar buildCacheLifecycleHandler = function (_j) {\r\n    var api = _j.api, reducerPath = _j.reducerPath, context = _j.context, queryThunk = _j.queryThunk, mutationThunk = _j.mutationThunk, internalState = _j.internalState;\r\n    var isQueryThunk = isAsyncThunkAction(queryThunk);\r\n    var isMutationThunk = isAsyncThunkAction(mutationThunk);\r\n    var isFulfilledThunk = isFulfilled4(queryThunk, mutationThunk);\r\n    var lifecycleMap = {};\r\n    var handler = function (action, mwApi, stateBefore) {\r\n        var cacheKey = getCacheKey(action);\r\n        if (queryThunk.pending.match(action)) {\r\n            var oldState = stateBefore[reducerPath].queries[cacheKey];\r\n            var state = mwApi.getState()[reducerPath].queries[cacheKey];\r\n            if (!oldState && state) {\r\n                handleNewKey(action.meta.arg.endpointName, action.meta.arg.originalArgs, cacheKey, mwApi, action.meta.requestId);\r\n            }\r\n        }\r\n        else if (mutationThunk.pending.match(action)) {\r\n            var state = mwApi.getState()[reducerPath].mutations[cacheKey];\r\n            if (state) {\r\n                handleNewKey(action.meta.arg.endpointName, action.meta.arg.originalArgs, cacheKey, mwApi, action.meta.requestId);\r\n            }\r\n        }\r\n        else if (isFulfilledThunk(action)) {\r\n            var lifecycle = lifecycleMap[cacheKey];\r\n            if (lifecycle == null ? void 0 : lifecycle.valueResolved) {\r\n                lifecycle.valueResolved({\r\n                    data: action.payload,\r\n                    meta: action.meta.baseQueryMeta\r\n                });\r\n                delete lifecycle.valueResolved;\r\n            }\r\n        }\r\n        else if (api.internalActions.removeQueryResult.match(action) || api.internalActions.removeMutationResult.match(action)) {\r\n            var lifecycle = lifecycleMap[cacheKey];\r\n            if (lifecycle) {\r\n                delete lifecycleMap[cacheKey];\r\n                lifecycle.cacheEntryRemoved();\r\n            }\r\n        }\r\n        else if (api.util.resetApiState.match(action)) {\r\n            for (var _j = 0, _k = Object.entries(lifecycleMap); _j < _k.length; _j++) {\r\n                var _l = _k[_j], cacheKey2 = _l[0], lifecycle = _l[1];\r\n                delete lifecycleMap[cacheKey2];\r\n                lifecycle.cacheEntryRemoved();\r\n            }\r\n        }\r\n    };\r\n    function getCacheKey(action) {\r\n        if (isQueryThunk(action))\r\n            return action.meta.arg.queryCacheKey;\r\n        if (isMutationThunk(action))\r\n            return action.meta.requestId;\r\n        if (api.internalActions.removeQueryResult.match(action))\r\n            return action.payload.queryCacheKey;\r\n        if (api.internalActions.removeMutationResult.match(action))\r\n            return getMutationCacheKey(action.payload);\r\n        return \"\";\r\n    }\r\n    function handleNewKey(endpointName, originalArgs, queryCacheKey, mwApi, requestId) {\r\n        var endpointDefinition = context.endpointDefinitions[endpointName];\r\n        var onCacheEntryAdded = endpointDefinition == null ? void 0 : endpointDefinition.onCacheEntryAdded;\r\n        if (!onCacheEntryAdded)\r\n            return;\r\n        var lifecycle = {};\r\n        var cacheEntryRemoved = new Promise(function (resolve) {\r\n            lifecycle.cacheEntryRemoved = resolve;\r\n        });\r\n        var cacheDataLoaded = Promise.race([\r\n            new Promise(function (resolve) {\r\n                lifecycle.valueResolved = resolve;\r\n            }),\r\n            cacheEntryRemoved.then(function () {\r\n                throw neverResolvedError;\r\n            })\r\n        ]);\r\n        cacheDataLoaded.catch(function () {\r\n        });\r\n        lifecycleMap[queryCacheKey] = lifecycle;\r\n        var selector = api.endpoints[endpointName].select(endpointDefinition.type === DefinitionType.query ? originalArgs : queryCacheKey);\r\n        var extra = mwApi.dispatch(function (_, __, extra2) { return extra2; });\r\n        var lifecycleApi = __spreadProps(__spreadValues({}, mwApi), {\r\n            getCacheEntry: function () { return selector(mwApi.getState()); },\r\n            requestId: requestId,\r\n            extra: extra,\r\n            updateCachedData: endpointDefinition.type === DefinitionType.query ? function (updateRecipe) { return mwApi.dispatch(api.util.updateQueryData(endpointName, originalArgs, updateRecipe)); } : void 0,\r\n            cacheDataLoaded: cacheDataLoaded,\r\n            cacheEntryRemoved: cacheEntryRemoved\r\n        });\r\n        var runningHandler = onCacheEntryAdded(originalArgs, lifecycleApi);\r\n        Promise.resolve(runningHandler).catch(function (e) {\r\n            if (e === neverResolvedError)\r\n                return;\r\n            throw e;\r\n        });\r\n    }\r\n    return handler;\r\n};\r\n// src/query/core/buildMiddleware/queryLifecycle.ts\r\nimport { isPending as isPending2, isRejected as isRejected2, isFulfilled as isFulfilled5 } from \"@reduxjs/toolkit\";\r\nvar buildQueryLifecycleHandler = function (_j) {\r\n    var api = _j.api, context = _j.context, queryThunk = _j.queryThunk, mutationThunk = _j.mutationThunk;\r\n    var isPendingThunk = isPending2(queryThunk, mutationThunk);\r\n    var isRejectedThunk = isRejected2(queryThunk, mutationThunk);\r\n    var isFullfilledThunk = isFulfilled5(queryThunk, mutationThunk);\r\n    var lifecycleMap = {};\r\n    var handler = function (action, mwApi) {\r\n        var _a, _b, _c;\r\n        if (isPendingThunk(action)) {\r\n            var _j = action.meta, requestId = _j.requestId, _k = _j.arg, endpointName_1 = _k.endpointName, originalArgs_1 = _k.originalArgs;\r\n            var endpointDefinition = context.endpointDefinitions[endpointName_1];\r\n            var onQueryStarted = endpointDefinition == null ? void 0 : endpointDefinition.onQueryStarted;\r\n            if (onQueryStarted) {\r\n                var lifecycle_1 = {};\r\n                var queryFulfilled = new Promise(function (resolve, reject) {\r\n                    lifecycle_1.resolve = resolve;\r\n                    lifecycle_1.reject = reject;\r\n                });\r\n                queryFulfilled.catch(function () {\r\n                });\r\n                lifecycleMap[requestId] = lifecycle_1;\r\n                var selector_1 = api.endpoints[endpointName_1].select(endpointDefinition.type === DefinitionType.query ? originalArgs_1 : requestId);\r\n                var extra = mwApi.dispatch(function (_, __, extra2) { return extra2; });\r\n                var lifecycleApi = __spreadProps(__spreadValues({}, mwApi), {\r\n                    getCacheEntry: function () { return selector_1(mwApi.getState()); },\r\n                    requestId: requestId,\r\n                    extra: extra,\r\n                    updateCachedData: endpointDefinition.type === DefinitionType.query ? function (updateRecipe) { return mwApi.dispatch(api.util.updateQueryData(endpointName_1, originalArgs_1, updateRecipe)); } : void 0,\r\n                    queryFulfilled: queryFulfilled\r\n                });\r\n                onQueryStarted(originalArgs_1, lifecycleApi);\r\n            }\r\n        }\r\n        else if (isFullfilledThunk(action)) {\r\n            var _l = action.meta, requestId = _l.requestId, baseQueryMeta = _l.baseQueryMeta;\r\n            (_a = lifecycleMap[requestId]) == null ? void 0 : _a.resolve({\r\n                data: action.payload,\r\n                meta: baseQueryMeta\r\n            });\r\n            delete lifecycleMap[requestId];\r\n        }\r\n        else if (isRejectedThunk(action)) {\r\n            var _m = action.meta, requestId = _m.requestId, rejectedWithValue = _m.rejectedWithValue, baseQueryMeta = _m.baseQueryMeta;\r\n            (_c = lifecycleMap[requestId]) == null ? void 0 : _c.reject({\r\n                error: (_b = action.payload) != null ? _b : action.error,\r\n                isUnhandledError: !rejectedWithValue,\r\n                meta: baseQueryMeta\r\n            });\r\n            delete lifecycleMap[requestId];\r\n        }\r\n    };\r\n    return handler;\r\n};\r\n// src/query/core/buildMiddleware/devMiddleware.ts\r\nvar buildDevCheckHandler = function (_j) {\r\n    var api = _j.api, apiUid = _j.context.apiUid, reducerPath = _j.reducerPath;\r\n    return function (action, mwApi) {\r\n        var _a, _b;\r\n        if (api.util.resetApiState.match(action)) {\r\n            mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid));\r\n        }\r\n        if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\r\n            if (api.internalActions.middlewareRegistered.match(action) && action.payload === apiUid && ((_b = (_a = mwApi.getState()[reducerPath]) == null ? void 0 : _a.config) == null ? void 0 : _b.middlewareRegistered) === \"conflict\") {\r\n                console.warn(\"There is a mismatch between slice and middleware for the reducerPath \\\"\" + reducerPath + \"\\\".\\nYou can only have one api per reducer path, this will lead to crashes in various situations!\" + (reducerPath === \"api\" ? \"\\nIf you have multiple apis, you *have* to specify the reducerPath option when using createApi!\" : \"\"));\r\n            }\r\n        }\r\n    };\r\n};\r\n// src/query/core/buildMiddleware/batchActions.ts\r\nimport { produceWithPatches as produceWithPatches2 } from \"immer\";\r\nvar promise;\r\nvar queueMicrotaskShim = typeof queueMicrotask === \"function\" ? queueMicrotask.bind(typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : globalThis) : function (cb) { return (promise || (promise = Promise.resolve())).then(cb).catch(function (err) { return setTimeout(function () {\r\n    throw err;\r\n}, 0); }); };\r\nvar buildBatchedActionsHandler = function (_j) {\r\n    var api = _j.api, queryThunk = _j.queryThunk, internalState = _j.internalState;\r\n    var subscriptionsPrefix = api.reducerPath + \"/subscriptions\";\r\n    var previousSubscriptions = null;\r\n    var dispatchQueued = false;\r\n    var _k = api.internalActions, updateSubscriptionOptions = _k.updateSubscriptionOptions, unsubscribeQueryResult = _k.unsubscribeQueryResult;\r\n    var actuallyMutateSubscriptions = function (mutableState, action) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _i;\r\n        if (updateSubscriptionOptions.match(action)) {\r\n            var _j = action.payload, queryCacheKey = _j.queryCacheKey, requestId = _j.requestId, options = _j.options;\r\n            if ((_a = mutableState == null ? void 0 : mutableState[queryCacheKey]) == null ? void 0 : _a[requestId]) {\r\n                mutableState[queryCacheKey][requestId] = options;\r\n            }\r\n            return true;\r\n        }\r\n        if (unsubscribeQueryResult.match(action)) {\r\n            var _k = action.payload, queryCacheKey = _k.queryCacheKey, requestId = _k.requestId;\r\n            if (mutableState[queryCacheKey]) {\r\n                delete mutableState[queryCacheKey][requestId];\r\n            }\r\n            return true;\r\n        }\r\n        if (api.internalActions.removeQueryResult.match(action)) {\r\n            delete mutableState[action.payload.queryCacheKey];\r\n            return true;\r\n        }\r\n        if (queryThunk.pending.match(action)) {\r\n            var _l = action.meta, arg = _l.arg, requestId = _l.requestId;\r\n            if (arg.subscribe) {\r\n                var substate = (_c = mutableState[_b = arg.queryCacheKey]) != null ? _c : mutableState[_b] = {};\r\n                substate[requestId] = (_e = (_d = arg.subscriptionOptions) != null ? _d : substate[requestId]) != null ? _e : {};\r\n                return true;\r\n            }\r\n        }\r\n        if (queryThunk.rejected.match(action)) {\r\n            var _m = action.meta, condition = _m.condition, arg = _m.arg, requestId = _m.requestId;\r\n            if (condition && arg.subscribe) {\r\n                var substate = (_g = mutableState[_f = arg.queryCacheKey]) != null ? _g : mutableState[_f] = {};\r\n                substate[requestId] = (_i = (_h = arg.subscriptionOptions) != null ? _h : substate[requestId]) != null ? _i : {};\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return function (action, mwApi) {\r\n        var _a, _b;\r\n        if (!previousSubscriptions) {\r\n            previousSubscriptions = JSON.parse(JSON.stringify(internalState.currentSubscriptions));\r\n        }\r\n        if (api.util.resetApiState.match(action)) {\r\n            previousSubscriptions = internalState.currentSubscriptions = {};\r\n            return [true, false];\r\n        }\r\n        if (api.internalActions.internal_probeSubscription.match(action)) {\r\n            var _j = action.payload, queryCacheKey = _j.queryCacheKey, requestId = _j.requestId;\r\n            var hasSubscription = !!((_a = internalState.currentSubscriptions[queryCacheKey]) == null ? void 0 : _a[requestId]);\r\n            return [false, hasSubscription];\r\n        }\r\n        var didMutate = actuallyMutateSubscriptions(internalState.currentSubscriptions, action);\r\n        if (didMutate) {\r\n            if (!dispatchQueued) {\r\n                queueMicrotaskShim(function () {\r\n                    var newSubscriptions = JSON.parse(JSON.stringify(internalState.currentSubscriptions));\r\n                    var _j = produceWithPatches2(previousSubscriptions, function () { return newSubscriptions; }), patches = _j[1];\r\n                    mwApi.next(api.internalActions.subscriptionsUpdated(patches));\r\n                    previousSubscriptions = newSubscriptions;\r\n                    dispatchQueued = false;\r\n                });\r\n                dispatchQueued = true;\r\n            }\r\n            var isSubscriptionSliceAction = !!((_b = action.type) == null ? void 0 : _b.startsWith(subscriptionsPrefix));\r\n            var isAdditionalSubscriptionAction = queryThunk.rejected.match(action) && action.meta.condition && !!action.meta.arg.subscribe;\r\n            var actionShouldContinue = !isSubscriptionSliceAction && !isAdditionalSubscriptionAction;\r\n            return [actionShouldContinue, false];\r\n        }\r\n        return [true, false];\r\n    };\r\n};\r\n// src/query/core/buildMiddleware/index.ts\r\nfunction buildMiddleware(input) {\r\n    var reducerPath = input.reducerPath, queryThunk = input.queryThunk, api = input.api, context = input.context;\r\n    var apiUid = context.apiUid;\r\n    var actions = {\r\n        invalidateTags: createAction3(reducerPath + \"/invalidateTags\")\r\n    };\r\n    var isThisApiSliceAction = function (action) {\r\n        return !!action && typeof action.type === \"string\" && action.type.startsWith(reducerPath + \"/\");\r\n    };\r\n    var handlerBuilders = [\r\n        buildDevCheckHandler,\r\n        buildCacheCollectionHandler,\r\n        buildInvalidationByTagsHandler,\r\n        buildPollingHandler,\r\n        buildCacheLifecycleHandler,\r\n        buildQueryLifecycleHandler\r\n    ];\r\n    var middleware = function (mwApi) {\r\n        var initialized2 = false;\r\n        var internalState = {\r\n            currentSubscriptions: {}\r\n        };\r\n        var builderArgs = __spreadProps(__spreadValues({}, input), {\r\n            internalState: internalState,\r\n            refetchQuery: refetchQuery\r\n        });\r\n        var handlers = handlerBuilders.map(function (build) { return build(builderArgs); });\r\n        var batchedActionsHandler = buildBatchedActionsHandler(builderArgs);\r\n        var windowEventsHandler = buildWindowEventHandler(builderArgs);\r\n        return function (next) {\r\n            return function (action) {\r\n                if (!initialized2) {\r\n                    initialized2 = true;\r\n                    mwApi.dispatch(api.internalActions.middlewareRegistered(apiUid));\r\n                }\r\n                var mwApiWithNext = __spreadProps(__spreadValues({}, mwApi), { next: next });\r\n                var stateBefore = mwApi.getState();\r\n                var _j = batchedActionsHandler(action, mwApiWithNext, stateBefore), actionShouldContinue = _j[0], hasSubscription = _j[1];\r\n                var res;\r\n                if (actionShouldContinue) {\r\n                    res = next(action);\r\n                }\r\n                else {\r\n                    res = hasSubscription;\r\n                }\r\n                if (!!mwApi.getState()[reducerPath]) {\r\n                    windowEventsHandler(action, mwApiWithNext, stateBefore);\r\n                    if (isThisApiSliceAction(action) || context.hasRehydrationInfo(action)) {\r\n                        for (var _k = 0, handlers_1 = handlers; _k < handlers_1.length; _k++) {\r\n                            var handler = handlers_1[_k];\r\n                            handler(action, mwApiWithNext, stateBefore);\r\n                        }\r\n                    }\r\n                }\r\n                return res;\r\n            };\r\n        };\r\n    };\r\n    return { middleware: middleware, actions: actions };\r\n    function refetchQuery(querySubState, queryCacheKey, override) {\r\n        if (override === void 0) { override = {}; }\r\n        return queryThunk(__spreadValues({\r\n            type: \"query\",\r\n            endpointName: querySubState.endpointName,\r\n            originalArgs: querySubState.originalArgs,\r\n            subscribe: false,\r\n            forceRefetch: true,\r\n            queryCacheKey: queryCacheKey\r\n        }, override));\r\n    }\r\n}\r\n// src/query/tsHelpers.ts\r\nfunction assertCast(v) {\r\n}\r\nfunction safeAssign(target) {\r\n    var args = [];\r\n    for (var _j = 1; _j < arguments.length; _j++) {\r\n        args[_j - 1] = arguments[_j];\r\n    }\r\n    Object.assign.apply(Object, __spreadArray([target], args));\r\n}\r\n// src/query/core/module.ts\r\nimport { enablePatches } from \"immer\";\r\nvar coreModuleName = /* @__PURE__ */ Symbol();\r\nvar coreModule = function () { return ({\r\n    name: coreModuleName,\r\n    init: function (api, _j, context) {\r\n        var baseQuery = _j.baseQuery, tagTypes = _j.tagTypes, reducerPath = _j.reducerPath, serializeQueryArgs = _j.serializeQueryArgs, keepUnusedDataFor = _j.keepUnusedDataFor, refetchOnMountOrArgChange = _j.refetchOnMountOrArgChange, refetchOnFocus = _j.refetchOnFocus, refetchOnReconnect = _j.refetchOnReconnect;\r\n        enablePatches();\r\n        assertCast(serializeQueryArgs);\r\n        var assertTagType = function (tag) {\r\n            if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\r\n                if (!tagTypes.includes(tag.type)) {\r\n                    console.error(\"Tag type '\" + tag.type + \"' was used, but not specified in `tagTypes`!\");\r\n                }\r\n            }\r\n            return tag;\r\n        };\r\n        Object.assign(api, {\r\n            reducerPath: reducerPath,\r\n            endpoints: {},\r\n            internalActions: {\r\n                onOnline: onOnline,\r\n                onOffline: onOffline,\r\n                onFocus: onFocus,\r\n                onFocusLost: onFocusLost\r\n            },\r\n            util: {}\r\n        });\r\n        var _k = buildThunks({\r\n            baseQuery: baseQuery,\r\n            reducerPath: reducerPath,\r\n            context: context,\r\n            api: api,\r\n            serializeQueryArgs: serializeQueryArgs,\r\n            assertTagType: assertTagType\r\n        }), queryThunk = _k.queryThunk, mutationThunk = _k.mutationThunk, patchQueryData = _k.patchQueryData, updateQueryData = _k.updateQueryData, upsertQueryData = _k.upsertQueryData, prefetch = _k.prefetch, buildMatchThunkActions = _k.buildMatchThunkActions;\r\n        var _l = buildSlice({\r\n            context: context,\r\n            queryThunk: queryThunk,\r\n            mutationThunk: mutationThunk,\r\n            reducerPath: reducerPath,\r\n            assertTagType: assertTagType,\r\n            config: {\r\n                refetchOnFocus: refetchOnFocus,\r\n                refetchOnReconnect: refetchOnReconnect,\r\n                refetchOnMountOrArgChange: refetchOnMountOrArgChange,\r\n                keepUnusedDataFor: keepUnusedDataFor,\r\n                reducerPath: reducerPath\r\n            }\r\n        }), reducer = _l.reducer, sliceActions = _l.actions;\r\n        safeAssign(api.util, {\r\n            patchQueryData: patchQueryData,\r\n            updateQueryData: updateQueryData,\r\n            upsertQueryData: upsertQueryData,\r\n            prefetch: prefetch,\r\n            resetApiState: sliceActions.resetApiState\r\n        });\r\n        safeAssign(api.internalActions, sliceActions);\r\n        var _m = buildMiddleware({\r\n            reducerPath: reducerPath,\r\n            context: context,\r\n            queryThunk: queryThunk,\r\n            mutationThunk: mutationThunk,\r\n            api: api,\r\n            assertTagType: assertTagType\r\n        }), middleware = _m.middleware, middlewareActions = _m.actions;\r\n        safeAssign(api.util, middlewareActions);\r\n        safeAssign(api, { reducer: reducer, middleware: middleware });\r\n        var _o = buildSelectors({\r\n            serializeQueryArgs: serializeQueryArgs,\r\n            reducerPath: reducerPath\r\n        }), buildQuerySelector = _o.buildQuerySelector, buildMutationSelector = _o.buildMutationSelector, selectInvalidatedBy = _o.selectInvalidatedBy;\r\n        safeAssign(api.util, { selectInvalidatedBy: selectInvalidatedBy });\r\n        var _p = buildInitiate({\r\n            queryThunk: queryThunk,\r\n            mutationThunk: mutationThunk,\r\n            api: api,\r\n            serializeQueryArgs: serializeQueryArgs,\r\n            context: context\r\n        }), buildInitiateQuery = _p.buildInitiateQuery, buildInitiateMutation = _p.buildInitiateMutation, getRunningMutationThunk = _p.getRunningMutationThunk, getRunningMutationsThunk = _p.getRunningMutationsThunk, getRunningQueriesThunk = _p.getRunningQueriesThunk, getRunningQueryThunk = _p.getRunningQueryThunk, getRunningOperationPromises = _p.getRunningOperationPromises, removalWarning = _p.removalWarning;\r\n        safeAssign(api.util, {\r\n            getRunningOperationPromises: getRunningOperationPromises,\r\n            getRunningOperationPromise: removalWarning,\r\n            getRunningMutationThunk: getRunningMutationThunk,\r\n            getRunningMutationsThunk: getRunningMutationsThunk,\r\n            getRunningQueryThunk: getRunningQueryThunk,\r\n            getRunningQueriesThunk: getRunningQueriesThunk\r\n        });\r\n        return {\r\n            name: coreModuleName,\r\n            injectEndpoint: function (endpointName, definition) {\r\n                var _a, _b;\r\n                var anyApi = api;\r\n                (_b = (_a = anyApi.endpoints)[endpointName]) != null ? _b : _a[endpointName] = {};\r\n                if (isQueryDefinition(definition)) {\r\n                    safeAssign(anyApi.endpoints[endpointName], {\r\n                        name: endpointName,\r\n                        select: buildQuerySelector(endpointName, definition),\r\n                        initiate: buildInitiateQuery(endpointName, definition)\r\n                    }, buildMatchThunkActions(queryThunk, endpointName));\r\n                }\r\n                else if (isMutationDefinition(definition)) {\r\n                    safeAssign(anyApi.endpoints[endpointName], {\r\n                        name: endpointName,\r\n                        select: buildMutationSelector(),\r\n                        initiate: buildInitiateMutation(endpointName)\r\n                    }, buildMatchThunkActions(mutationThunk, endpointName));\r\n                }\r\n            }\r\n        };\r\n    }\r\n}); };\r\n// src/query/core/index.ts\r\nvar createApi = /* @__PURE__ */ buildCreateApi(coreModule());\r\nexport { QueryStatus, buildCreateApi, copyWithStructuralSharing, coreModule, coreModuleName, createApi, defaultSerializeQueryArgs, fakeBaseQuery, fetchBaseQuery, retry, setupListeners, skipSelector, skipToken };\r\n//# sourceMappingURL=rtk-query.esm.js.map", "import { coreModule, buildCreateApi } from '@reduxjs/toolkit/query'\r\nimport { reactHooksModule, reactHooksModuleName } from './module'\r\n\r\nexport * from '@reduxjs/toolkit/query'\r\nexport { ApiProvider } from './ApiProvider'\r\n\r\nconst createApi = /* @__PURE__ */ buildCreateApi(\r\n  coreModule(),\r\n  reactHooksModule()\r\n)\r\n\r\nexport type {\r\n  TypedUseQueryHookResult,\r\n  TypedUseQueryStateResult,\r\n  TypedUseQuerySubscriptionResult,\r\n  TypedUseMutationResult,\r\n} from './buildHooks'\r\nexport { createApi, reactHooksModule, reactHooksModuleName }\r\n", "import type { AnyAction, ThunkAction, ThunkDispatch } from '@reduxjs/toolkit'\r\nimport { createSelector } from '@reduxjs/toolkit'\r\nimport type { Selector } from '@reduxjs/toolkit'\r\nimport type { DependencyList } from 'react'\r\nimport {\r\n  useCallback,\r\n  useDebugValue,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport { QueryStatus, skipToken } from '@reduxjs/toolkit/query'\r\nimport type {\r\n  QuerySubState,\r\n  SubscriptionOptions,\r\n  QueryKeys,\r\n  RootState,\r\n} from '@reduxjs/toolkit/query'\r\nimport type {\r\n  EndpointDefinitions,\r\n  MutationDefinition,\r\n  QueryDefinition,\r\n  QueryArgFrom,\r\n  ResultTypeFrom,\r\n} from '@reduxjs/toolkit/query'\r\nimport type {\r\n  QueryResultSelectorResult,\r\n  MutationResultSelectorResult,\r\n  SkipToken,\r\n} from '@reduxjs/toolkit/query'\r\nimport type {\r\n  QueryActionCreatorResult,\r\n  MutationActionCreatorResult,\r\n} from '@reduxjs/toolkit/query'\r\nimport type { SerializeQueryArgs } from '@reduxjs/toolkit/query'\r\nimport { shallowEqual } from 'react-redux'\r\nimport type { Api, ApiContext } from '@reduxjs/toolkit/query'\r\nimport type {\r\n  TSHelpersId,\r\n  TSHelpersNoInfer,\r\n  TSHelpersOverride,\r\n} from '@reduxjs/toolkit/query'\r\nimport type {\r\n  ApiEndpointMutation,\r\n  ApiEndpointQuery,\r\n  CoreModule,\r\n  PrefetchOptions,\r\n} from '@reduxjs/toolkit/query'\r\nimport type { ReactHooksModuleOptions } from './module'\r\nimport { useStableQueryArgs } from './useSerializedStableValue'\r\nimport type { UninitializedValue } from './constants'\r\nimport { UNINITIALIZED_VALUE } from './constants'\r\nimport { useShallowStableValue } from './useShallowStableValue'\r\nimport type { BaseQueryFn } from '../baseQueryTypes'\r\nimport { defaultSerializeQueryArgs } from '../defaultSerializeQueryArgs'\r\n\r\n// Copy-pasted from React-Redux\r\nexport const useIsomorphicLayoutEffect =\r\n  typeof window !== 'undefined' &&\r\n  !!window.document &&\r\n  !!window.document.createElement\r\n    ? useLayoutEffect\r\n    : useEffect\r\n\r\nexport interface QueryHooks<\r\n  Definition extends QueryDefinition<any, any, any, any, any>\r\n> {\r\n  useQuery: UseQuery<Definition>\r\n  useLazyQuery: UseLazyQuery<Definition>\r\n  useQuerySubscription: UseQuerySubscription<Definition>\r\n  useLazyQuerySubscription: UseLazyQuerySubscription<Definition>\r\n  useQueryState: UseQueryState<Definition>\r\n}\r\n\r\nexport interface MutationHooks<\r\n  Definition extends MutationDefinition<any, any, any, any, any>\r\n> {\r\n  useMutation: UseMutation<Definition>\r\n}\r\n\r\n/**\r\n * A React hook that automatically triggers fetches of data from an endpoint, 'subscribes' the component to the cached data, and reads the request status and cached data from the Redux store. The component will re-render as the loading status changes and the data becomes available.\r\n *\r\n * The query arg is used as a cache key. Changing the query arg will tell the hook to re-fetch the data if it does not exist in the cache already, and the hook will return the data for that query arg once it's available.\r\n *\r\n * This hook combines the functionality of both [`useQueryState`](#usequerystate) and [`useQuerySubscription`](#usequerysubscription) together, and is intended to be used in the majority of situations.\r\n *\r\n * #### Features\r\n *\r\n * - Automatically triggers requests to retrieve data based on the hook argument and whether cached data exists by default\r\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\r\n * - Accepts polling/re-fetching options to trigger automatic re-fetches when the corresponding criteria is met\r\n * - Returns the latest request status and cached data from the Redux store\r\n * - Re-renders as the request status changes and data becomes available\r\n */\r\nexport type UseQuery<D extends QueryDefinition<any, any, any, any>> = <\r\n  R extends Record<string, any> = UseQueryStateDefaultResult<D>\r\n>(\r\n  arg: QueryArgFrom<D> | SkipToken,\r\n  options?: UseQuerySubscriptionOptions & UseQueryStateOptions<D, R>\r\n) => UseQueryHookResult<D, R>\r\n\r\nexport type UseQueryHookResult<\r\n  D extends QueryDefinition<any, any, any, any>,\r\n  R = UseQueryStateDefaultResult<D>\r\n> = UseQueryStateResult<D, R> & UseQuerySubscriptionResult<D>\r\n\r\n/**\r\n * Helper type to manually type the result\r\n * of the `useQuery` hook in userland code.\r\n */\r\nexport type TypedUseQueryHookResult<\r\n  ResultType,\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  R = UseQueryStateDefaultResult<\r\n    QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>\r\n  >\r\n> = TypedUseQueryStateResult<ResultType, QueryArg, BaseQuery, R> &\r\n  TypedUseQuerySubscriptionResult<ResultType, QueryArg, BaseQuery>\r\n\r\ninterface UseQuerySubscriptionOptions extends SubscriptionOptions {\r\n  /**\r\n   * Prevents a query from automatically running.\r\n   *\r\n   * @remarks\r\n   * When `skip` is true (or `skipToken` is passed in as `arg`):\r\n   *\r\n   * - **If the query has cached data:**\r\n   *   * The cached data **will not be used** on the initial load, and will ignore updates from any identical query until the `skip` condition is removed\r\n   *   * The query will have a status of `uninitialized`\r\n   *   * If `skip: false` is set after the initial load, the cached result will be used\r\n   * - **If the query does not have cached data:**\r\n   *   * The query will have a status of `uninitialized`\r\n   *   * The query will not exist in the state when viewed with the dev tools\r\n   *   * The query will not automatically fetch on mount\r\n   *   * The query will not automatically run when additional components with the same query are added that do run\r\n   *\r\n   * @example\r\n   * ```tsx\r\n   * // codeblock-meta no-transpile title=\"Skip example\"\r\n   * const Pokemon = ({ name, skip }: { name: string; skip: boolean }) => {\r\n   *   const { data, error, status } = useGetPokemonByNameQuery(name, {\r\n   *     skip,\r\n   *   });\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       {name} - {status}\r\n   *     </div>\r\n   *   );\r\n   * };\r\n   * ```\r\n   */\r\n  skip?: boolean\r\n  /**\r\n   * Defaults to `false`. This setting allows you to control whether if a cached result is already available, RTK Query will only serve a cached result, or if it should `refetch` when set to `true` or if an adequate amount of time has passed since the last successful query result.\r\n   * - `false` - Will not cause a query to be performed _unless_ it does not exist yet.\r\n   * - `true` - Will always refetch when a new subscriber to a query is added. Behaves the same as calling the `refetch` callback or passing `forceRefetch: true` in the action creator.\r\n   * - `number` - **Value is in seconds**. If a number is provided and there is an existing query in the cache, it will compare the current time vs the last fulfilled timestamp, and only refetch if enough time has elapsed.\r\n   *\r\n   * If you specify this option alongside `skip: true`, this **will not be evaluated** until `skip` is false.\r\n   */\r\n  refetchOnMountOrArgChange?: boolean | number\r\n}\r\n\r\n/**\r\n * A React hook that automatically triggers fetches of data from an endpoint, and 'subscribes' the component to the cached data.\r\n *\r\n * The query arg is used as a cache key. Changing the query arg will tell the hook to re-fetch the data if it does not exist in the cache already.\r\n *\r\n * Note that this hook does not return a request status or cached data. For that use-case, see [`useQuery`](#usequery) or [`useQueryState`](#usequerystate).\r\n *\r\n * #### Features\r\n *\r\n * - Automatically triggers requests to retrieve data based on the hook argument and whether cached data exists by default\r\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\r\n * - Accepts polling/re-fetching options to trigger automatic re-fetches when the corresponding criteria is met\r\n */\r\nexport type UseQuerySubscription<\r\n  D extends QueryDefinition<any, any, any, any>\r\n> = (\r\n  arg: QueryArgFrom<D> | SkipToken,\r\n  options?: UseQuerySubscriptionOptions\r\n) => UseQuerySubscriptionResult<D>\r\n\r\nexport type UseQuerySubscriptionResult<\r\n  D extends QueryDefinition<any, any, any, any>\r\n> = Pick<QueryActionCreatorResult<D>, 'refetch'>\r\n\r\n/**\r\n * Helper type to manually type the result\r\n * of the `useQuerySubscription` hook in userland code.\r\n */\r\nexport type TypedUseQuerySubscriptionResult<\r\n  ResultType,\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn\r\n> = UseQuerySubscriptionResult<\r\n  QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>\r\n>\r\n\r\nexport type UseLazyQueryLastPromiseInfo<\r\n  D extends QueryDefinition<any, any, any, any>\r\n> = {\r\n  lastArg: QueryArgFrom<D>\r\n}\r\n\r\n/**\r\n * A React hook similar to [`useQuery`](#usequery), but with manual control over when the data fetching occurs.\r\n *\r\n * This hook includes the functionality of [`useLazyQuerySubscription`](#uselazyquerysubscription).\r\n *\r\n * #### Features\r\n *\r\n * - Manual control over firing a request to retrieve data\r\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\r\n * - Returns the latest request status and cached data from the Redux store\r\n * - Re-renders as the request status changes and data becomes available\r\n * - Accepts polling/re-fetching options to trigger automatic re-fetches when the corresponding criteria is met and the fetch has been manually called at least once\r\n *\r\n * #### Note\r\n *\r\n * When the trigger function returned from a LazyQuery is called, it always initiates a new request to the server even if there is cached data. Set `preferCacheValue`(the second argument to the function) as `true` if you want it to immediately return a cached value if one exists.\r\n */\r\nexport type UseLazyQuery<D extends QueryDefinition<any, any, any, any>> = <\r\n  R extends Record<string, any> = UseQueryStateDefaultResult<D>\r\n>(\r\n  options?: SubscriptionOptions & Omit<UseQueryStateOptions<D, R>, 'skip'>\r\n) => [\r\n  LazyQueryTrigger<D>,\r\n  UseQueryStateResult<D, R>,\r\n  UseLazyQueryLastPromiseInfo<D>\r\n]\r\n\r\nexport type LazyQueryTrigger<D extends QueryDefinition<any, any, any, any>> = {\r\n  /**\r\n   * Triggers a lazy query.\r\n   *\r\n   * By default, this will start a new request even if there is already a value in the cache.\r\n   * If you want to use the cache value and only start a request if there is no cache value, set the second argument to `true`.\r\n   *\r\n   * @remarks\r\n   * If you need to access the error or success payload immediately after a lazy query, you can chain .unwrap().\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // codeblock-meta title=\"Using .unwrap with async await\"\r\n   * try {\r\n   *   const payload = await getUserById(1).unwrap();\r\n   *   console.log('fulfilled', payload)\r\n   * } catch (error) {\r\n   *   console.error('rejected', error);\r\n   * }\r\n   * ```\r\n   */\r\n  (\r\n    arg: QueryArgFrom<D>,\r\n    preferCacheValue?: boolean\r\n  ): QueryActionCreatorResult<D>\r\n}\r\n\r\n/**\r\n * A React hook similar to [`useQuerySubscription`](#usequerysubscription), but with manual control over when the data fetching occurs.\r\n *\r\n * Note that this hook does not return a request status or cached data. For that use-case, see [`useLazyQuery`](#uselazyquery).\r\n *\r\n * #### Features\r\n *\r\n * - Manual control over firing a request to retrieve data\r\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\r\n * - Accepts polling/re-fetching options to trigger automatic re-fetches when the corresponding criteria is met and the fetch has been manually called at least once\r\n */\r\nexport type UseLazyQuerySubscription<\r\n  D extends QueryDefinition<any, any, any, any>\r\n> = (\r\n  options?: SubscriptionOptions\r\n) => readonly [LazyQueryTrigger<D>, QueryArgFrom<D> | UninitializedValue]\r\n\r\nexport type QueryStateSelector<\r\n  R extends Record<string, any>,\r\n  D extends QueryDefinition<any, any, any, any>\r\n> = (state: UseQueryStateDefaultResult<D>) => R\r\n\r\n/**\r\n * A React hook that reads the request status and cached data from the Redux store. The component will re-render as the loading status changes and the data becomes available.\r\n *\r\n * Note that this hook does not trigger fetching new data. For that use-case, see [`useQuery`](#usequery) or [`useQuerySubscription`](#usequerysubscription).\r\n *\r\n * #### Features\r\n *\r\n * - Returns the latest request status and cached data from the Redux store\r\n * - Re-renders as the request status changes and data becomes available\r\n */\r\nexport type UseQueryState<D extends QueryDefinition<any, any, any, any>> = <\r\n  R extends Record<string, any> = UseQueryStateDefaultResult<D>\r\n>(\r\n  arg: QueryArgFrom<D> | SkipToken,\r\n  options?: UseQueryStateOptions<D, R>\r\n) => UseQueryStateResult<D, R>\r\n\r\nexport type UseQueryStateOptions<\r\n  D extends QueryDefinition<any, any, any, any>,\r\n  R extends Record<string, any>\r\n> = {\r\n  /**\r\n   * Prevents a query from automatically running.\r\n   *\r\n   * @remarks\r\n   * When skip is true:\r\n   *\r\n   * - **If the query has cached data:**\r\n   *   * The cached data **will not be used** on the initial load, and will ignore updates from any identical query until the `skip` condition is removed\r\n   *   * The query will have a status of `uninitialized`\r\n   *   * If `skip: false` is set after skipping the initial load, the cached result will be used\r\n   * - **If the query does not have cached data:**\r\n   *   * The query will have a status of `uninitialized`\r\n   *   * The query will not exist in the state when viewed with the dev tools\r\n   *   * The query will not automatically fetch on mount\r\n   *   * The query will not automatically run when additional components with the same query are added that do run\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // codeblock-meta title=\"Skip example\"\r\n   * const Pokemon = ({ name, skip }: { name: string; skip: boolean }) => {\r\n   *   const { data, error, status } = useGetPokemonByNameQuery(name, {\r\n   *     skip,\r\n   *   });\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       {name} - {status}\r\n   *     </div>\r\n   *   );\r\n   * };\r\n   * ```\r\n   */\r\n  skip?: boolean\r\n  /**\r\n   * `selectFromResult` allows you to get a specific segment from a query result in a performant manner.\r\n   * When using this feature, the component will not rerender unless the underlying data of the selected item has changed.\r\n   * If the selected item is one element in a larger collection, it will disregard changes to elements in the same collection.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // codeblock-meta title=\"Using selectFromResult to extract a single result\"\r\n   * function PostsList() {\r\n   *   const { data: posts } = api.useGetPostsQuery();\r\n   *\r\n   *   return (\r\n   *     <ul>\r\n   *       {posts?.data?.map((post) => (\r\n   *         <PostById key={post.id} id={post.id} />\r\n   *       ))}\r\n   *     </ul>\r\n   *   );\r\n   * }\r\n   *\r\n   * function PostById({ id }: { id: number }) {\r\n   *   // Will select the post with the given id, and will only rerender if the given posts data changes\r\n   *   const { post } = api.useGetPostsQuery(undefined, {\r\n   *     selectFromResult: ({ data }) => ({ post: data?.find((post) => post.id === id) }),\r\n   *   });\r\n   *\r\n   *   return <li>{post?.name}</li>;\r\n   * }\r\n   * ```\r\n   */\r\n  selectFromResult?: QueryStateSelector<R, D>\r\n}\r\n\r\nexport type UseQueryStateResult<\r\n  _ extends QueryDefinition<any, any, any, any>,\r\n  R\r\n> = TSHelpersNoInfer<R>\r\n\r\n/**\r\n * Helper type to manually type the result\r\n * of the `useQueryState` hook in userland code.\r\n */\r\nexport type TypedUseQueryStateResult<\r\n  ResultType,\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  R = UseQueryStateDefaultResult<\r\n    QueryDefinition<QueryArg, BaseQuery, string, ResultType, string>\r\n  >\r\n> = TSHelpersNoInfer<R>\r\n\r\ntype UseQueryStateBaseResult<D extends QueryDefinition<any, any, any, any>> =\r\n  QuerySubState<D> & {\r\n    /**\r\n     * Where `data` tries to hold data as much as possible, also re-using\r\n     * data from the last arguments passed into the hook, this property\r\n     * will always contain the received data from the query, for the current query arguments.\r\n     */\r\n    currentData?: ResultTypeFrom<D>\r\n    /**\r\n     * Query has not started yet.\r\n     */\r\n    isUninitialized: false\r\n    /**\r\n     * Query is currently loading for the first time. No data yet.\r\n     */\r\n    isLoading: false\r\n    /**\r\n     * Query is currently fetching, but might have data from an earlier request.\r\n     */\r\n    isFetching: false\r\n    /**\r\n     * Query has data from a successful load.\r\n     */\r\n    isSuccess: false\r\n    /**\r\n     * Query is currently in \"error\" state.\r\n     */\r\n    isError: false\r\n  }\r\n\r\ntype UseQueryStateDefaultResult<D extends QueryDefinition<any, any, any, any>> =\r\n  TSHelpersId<\r\n    | TSHelpersOverride<\r\n        Extract<\r\n          UseQueryStateBaseResult<D>,\r\n          { status: QueryStatus.uninitialized }\r\n        >,\r\n        { isUninitialized: true }\r\n      >\r\n    | TSHelpersOverride<\r\n        UseQueryStateBaseResult<D>,\r\n        | { isLoading: true; isFetching: boolean; data: undefined }\r\n        | ({\r\n            isSuccess: true\r\n            isFetching: true\r\n            error: undefined\r\n          } & Required<\r\n            Pick<UseQueryStateBaseResult<D>, 'data' | 'fulfilledTimeStamp'>\r\n          >)\r\n        | ({\r\n            isSuccess: true\r\n            isFetching: false\r\n            error: undefined\r\n          } & Required<\r\n            Pick<\r\n              UseQueryStateBaseResult<D>,\r\n              'data' | 'fulfilledTimeStamp' | 'currentData'\r\n            >\r\n          >)\r\n        | ({ isError: true } & Required<\r\n            Pick<UseQueryStateBaseResult<D>, 'error'>\r\n          >)\r\n      >\r\n  > & {\r\n    /**\r\n     * @deprecated will be removed in the next version\r\n     * please use the `isLoading`, `isFetching`, `isSuccess`, `isError`\r\n     * and `isUninitialized` flags instead\r\n     */\r\n    status: QueryStatus\r\n  }\r\n\r\nexport type MutationStateSelector<\r\n  R extends Record<string, any>,\r\n  D extends MutationDefinition<any, any, any, any>\r\n> = (state: MutationResultSelectorResult<D>) => R\r\n\r\nexport type UseMutationStateOptions<\r\n  D extends MutationDefinition<any, any, any, any>,\r\n  R extends Record<string, any>\r\n> = {\r\n  selectFromResult?: MutationStateSelector<R, D>\r\n  fixedCacheKey?: string\r\n}\r\n\r\nexport type UseMutationStateResult<\r\n  D extends MutationDefinition<any, any, any, any>,\r\n  R\r\n> = TSHelpersNoInfer<R> & {\r\n  originalArgs?: QueryArgFrom<D>\r\n  /**\r\n   * Resets the hook state to it's initial `uninitialized` state.\r\n   * This will also remove the last result from the cache.\r\n   */\r\n  reset: () => void\r\n}\r\n\r\n/**\r\n * Helper type to manually type the result\r\n * of the `useMutation` hook in userland code.\r\n */\r\nexport type TypedUseMutationResult<\r\n  ResultType,\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  R = MutationResultSelectorResult<\r\n    MutationDefinition<QueryArg, BaseQuery, string, ResultType, string>\r\n  >\r\n> = UseMutationStateResult<\r\n  MutationDefinition<QueryArg, BaseQuery, string, ResultType, string>,\r\n  R\r\n>\r\n\r\n/**\r\n * A React hook that lets you trigger an update request for a given endpoint, and subscribes the component to read the request status from the Redux store. The component will re-render as the loading status changes.\r\n *\r\n * #### Features\r\n *\r\n * - Manual control over firing a request to alter data on the server or possibly invalidate the cache\r\n * - 'Subscribes' the component to keep cached data in the store, and 'unsubscribes' when the component unmounts\r\n * - Returns the latest request status and cached data from the Redux store\r\n * - Re-renders as the request status changes and data becomes available\r\n */\r\nexport type UseMutation<D extends MutationDefinition<any, any, any, any>> = <\r\n  R extends Record<string, any> = MutationResultSelectorResult<D>\r\n>(\r\n  options?: UseMutationStateOptions<D, R>\r\n) => readonly [MutationTrigger<D>, UseMutationStateResult<D, R>]\r\n\r\nexport type MutationTrigger<D extends MutationDefinition<any, any, any, any>> =\r\n  {\r\n    /**\r\n     * Triggers the mutation and returns a Promise.\r\n     * @remarks\r\n     * If you need to access the error or success payload immediately after a mutation, you can chain .unwrap().\r\n     *\r\n     * @example\r\n     * ```ts\r\n     * // codeblock-meta title=\"Using .unwrap with async await\"\r\n     * try {\r\n     *   const payload = await addPost({ id: 1, name: 'Example' }).unwrap();\r\n     *   console.log('fulfilled', payload)\r\n     * } catch (error) {\r\n     *   console.error('rejected', error);\r\n     * }\r\n     * ```\r\n     */\r\n    (arg: QueryArgFrom<D>): MutationActionCreatorResult<D>\r\n  }\r\n\r\nconst defaultQueryStateSelector: QueryStateSelector<any, any> = (x) => x\r\nconst defaultMutationStateSelector: MutationStateSelector<any, any> = (x) => x\r\n\r\n/**\r\n * Wrapper around `defaultQueryStateSelector` to be used in `useQuery`.\r\n * We want the initial render to already come back with\r\n * `{ isUninitialized: false, isFetching: true, isLoading: true }`\r\n * to prevent that the library user has to do an additional check for `isUninitialized`/\r\n */\r\nconst noPendingQueryStateSelector: QueryStateSelector<any, any> = (\r\n  selected\r\n) => {\r\n  if (selected.isUninitialized) {\r\n    return {\r\n      ...selected,\r\n      isUninitialized: false,\r\n      isFetching: true,\r\n      isLoading: selected.data !== undefined ? false : true,\r\n      status: QueryStatus.pending,\r\n    } as any\r\n  }\r\n  return selected\r\n}\r\n\r\ntype GenericPrefetchThunk = (\r\n  endpointName: any,\r\n  arg: any,\r\n  options: PrefetchOptions\r\n) => ThunkAction<void, any, any, AnyAction>\r\n\r\n/**\r\n *\r\n * @param opts.api - An API with defined endpoints to create hooks for\r\n * @param opts.moduleOptions.batch - The version of the `batchedUpdates` function to be used\r\n * @param opts.moduleOptions.useDispatch - The version of the `useDispatch` hook to be used\r\n * @param opts.moduleOptions.useSelector - The version of the `useSelector` hook to be used\r\n * @returns An object containing functions to generate hooks based on an endpoint\r\n */\r\nexport function buildHooks<Definitions extends EndpointDefinitions>({\r\n  api,\r\n  moduleOptions: {\r\n    batch,\r\n    useDispatch,\r\n    useSelector,\r\n    useStore,\r\n    unstable__sideEffectsInRender,\r\n  },\r\n  serializeQueryArgs,\r\n  context,\r\n}: {\r\n  api: Api<any, Definitions, any, any, CoreModule>\r\n  moduleOptions: Required<ReactHooksModuleOptions>\r\n  serializeQueryArgs: SerializeQueryArgs<any>\r\n  context: ApiContext<Definitions>\r\n}) {\r\n  const usePossiblyImmediateEffect: (\r\n    effect: () => void | undefined,\r\n    deps?: DependencyList\r\n  ) => void = unstable__sideEffectsInRender ? (cb) => cb() : useEffect\r\n\r\n  return { buildQueryHooks, buildMutationHook, usePrefetch }\r\n\r\n  function queryStatePreSelector(\r\n    currentState: QueryResultSelectorResult<any>,\r\n    lastResult: UseQueryStateDefaultResult<any> | undefined,\r\n    queryArgs: any\r\n  ): UseQueryStateDefaultResult<any> {\r\n    // if we had a last result and the current result is uninitialized,\r\n    // we might have called `api.util.resetApiState`\r\n    // in this case, reset the hook\r\n    if (lastResult?.endpointName && currentState.isUninitialized) {\r\n      const { endpointName } = lastResult\r\n      const endpointDefinition = context.endpointDefinitions[endpointName]\r\n      if (\r\n        serializeQueryArgs({\r\n          queryArgs: lastResult.originalArgs,\r\n          endpointDefinition,\r\n          endpointName,\r\n        }) ===\r\n        serializeQueryArgs({\r\n          queryArgs,\r\n          endpointDefinition,\r\n          endpointName,\r\n        })\r\n      )\r\n        lastResult = undefined\r\n    }\r\n\r\n    // data is the last known good request result we have tracked - or if none has been tracked yet the last good result for the current args\r\n    let data = currentState.isSuccess ? currentState.data : lastResult?.data\r\n    if (data === undefined) data = currentState.data\r\n\r\n    const hasData = data !== undefined\r\n\r\n    // isFetching = true any time a request is in flight\r\n    const isFetching = currentState.isLoading\r\n    // isLoading = true only when loading while no data is present yet (initial load with no data in the cache)\r\n    const isLoading = !hasData && isFetching\r\n    // isSuccess = true when data is present\r\n    const isSuccess = currentState.isSuccess || (isFetching && hasData)\r\n\r\n    return {\r\n      ...currentState,\r\n      data,\r\n      currentData: currentState.data,\r\n      isFetching,\r\n      isLoading,\r\n      isSuccess,\r\n    } as UseQueryStateDefaultResult<any>\r\n  }\r\n\r\n  function usePrefetch<EndpointName extends QueryKeys<Definitions>>(\r\n    endpointName: EndpointName,\r\n    defaultOptions?: PrefetchOptions\r\n  ) {\r\n    const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>()\r\n    const stableDefaultOptions = useShallowStableValue(defaultOptions)\r\n\r\n    return useCallback(\r\n      (arg: any, options?: PrefetchOptions) =>\r\n        dispatch(\r\n          (api.util.prefetch as GenericPrefetchThunk)(endpointName, arg, {\r\n            ...stableDefaultOptions,\r\n            ...options,\r\n          })\r\n        ),\r\n      [endpointName, dispatch, stableDefaultOptions]\r\n    )\r\n  }\r\n\r\n  function buildQueryHooks(name: string): QueryHooks<any> {\r\n    const useQuerySubscription: UseQuerySubscription<any> = (\r\n      arg: any,\r\n      {\r\n        refetchOnReconnect,\r\n        refetchOnFocus,\r\n        refetchOnMountOrArgChange,\r\n        skip = false,\r\n        pollingInterval = 0,\r\n      } = {}\r\n    ) => {\r\n      const { initiate } = api.endpoints[name] as ApiEndpointQuery<\r\n        QueryDefinition<any, any, any, any, any>,\r\n        Definitions\r\n      >\r\n      const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>()\r\n      const stableArg = useStableQueryArgs(\r\n        skip ? skipToken : arg,\r\n        // Even if the user provided a per-endpoint `serializeQueryArgs` with\r\n        // a consistent return value, _here_ we want to use the default behavior\r\n        // so we can tell if _anything_ actually changed. Otherwise, we can end up\r\n        // with a case where the query args did change but the serialization doesn't,\r\n        // and then we never try to initiate a refetch.\r\n        defaultSerializeQueryArgs,\r\n        context.endpointDefinitions[name],\r\n        name\r\n      )\r\n      const stableSubscriptionOptions = useShallowStableValue({\r\n        refetchOnReconnect,\r\n        refetchOnFocus,\r\n        pollingInterval,\r\n      })\r\n\r\n      const lastRenderHadSubscription = useRef(false)\r\n\r\n      const promiseRef = useRef<QueryActionCreatorResult<any>>()\r\n\r\n      let { queryCacheKey, requestId } = promiseRef.current || {}\r\n\r\n      // HACK Because the latest state is in the middleware, we actually\r\n      // dispatch an action that will be intercepted and returned.\r\n      let currentRenderHasSubscription = false\r\n      if (queryCacheKey && requestId) {\r\n        // This _should_ return a boolean, even if the types don't line up\r\n        const returnedValue = dispatch(\r\n          api.internalActions.internal_probeSubscription({\r\n            queryCacheKey,\r\n            requestId,\r\n          })\r\n        )\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          if (typeof returnedValue !== 'boolean') {\r\n            throw new Error(\r\n              `Warning: Middleware for RTK-Query API at reducerPath \"${api.reducerPath}\" has not been added to the store.\r\n    You must add the middleware for RTK-Query to function correctly!`\r\n            )\r\n          }\r\n        }\r\n\r\n        currentRenderHasSubscription = !!returnedValue\r\n      }\r\n\r\n      const subscriptionRemoved =\r\n        !currentRenderHasSubscription && lastRenderHadSubscription.current\r\n\r\n      usePossiblyImmediateEffect(() => {\r\n        lastRenderHadSubscription.current = currentRenderHasSubscription\r\n      })\r\n\r\n      usePossiblyImmediateEffect((): void | undefined => {\r\n        if (subscriptionRemoved) {\r\n          promiseRef.current = undefined\r\n        }\r\n      }, [subscriptionRemoved])\r\n\r\n      usePossiblyImmediateEffect((): void | undefined => {\r\n        const lastPromise = promiseRef.current\r\n        if (\r\n          typeof process !== 'undefined' &&\r\n          process.env.NODE_ENV === 'removeMeOnCompilation'\r\n        ) {\r\n          // this is only present to enforce the rule of hooks to keep `isSubscribed` in the dependency array\r\n          console.log(subscriptionRemoved)\r\n        }\r\n\r\n        if (stableArg === skipToken) {\r\n          lastPromise?.unsubscribe()\r\n          promiseRef.current = undefined\r\n          return\r\n        }\r\n\r\n        const lastSubscriptionOptions = promiseRef.current?.subscriptionOptions\r\n\r\n        if (!lastPromise || lastPromise.arg !== stableArg) {\r\n          lastPromise?.unsubscribe()\r\n          const promise = dispatch(\r\n            initiate(stableArg, {\r\n              subscriptionOptions: stableSubscriptionOptions,\r\n              forceRefetch: refetchOnMountOrArgChange,\r\n            })\r\n          )\r\n\r\n          promiseRef.current = promise\r\n        } else if (stableSubscriptionOptions !== lastSubscriptionOptions) {\r\n          lastPromise.updateSubscriptionOptions(stableSubscriptionOptions)\r\n        }\r\n      }, [\r\n        dispatch,\r\n        initiate,\r\n        refetchOnMountOrArgChange,\r\n        stableArg,\r\n        stableSubscriptionOptions,\r\n        subscriptionRemoved,\r\n      ])\r\n\r\n      useEffect(() => {\r\n        return () => {\r\n          promiseRef.current?.unsubscribe()\r\n          promiseRef.current = undefined\r\n        }\r\n      }, [])\r\n\r\n      return useMemo(\r\n        () => ({\r\n          /**\r\n           * A method to manually refetch data for the query\r\n           */\r\n          refetch: () => {\r\n            if (!promiseRef.current)\r\n              throw new Error(\r\n                'Cannot refetch a query that has not been started yet.'\r\n              )\r\n            return promiseRef.current?.refetch()\r\n          },\r\n        }),\r\n        []\r\n      )\r\n    }\r\n\r\n    const useLazyQuerySubscription: UseLazyQuerySubscription<any> = ({\r\n      refetchOnReconnect,\r\n      refetchOnFocus,\r\n      pollingInterval = 0,\r\n    } = {}) => {\r\n      const { initiate } = api.endpoints[name] as ApiEndpointQuery<\r\n        QueryDefinition<any, any, any, any, any>,\r\n        Definitions\r\n      >\r\n      const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>()\r\n\r\n      const [arg, setArg] = useState<any>(UNINITIALIZED_VALUE)\r\n      const promiseRef = useRef<QueryActionCreatorResult<any> | undefined>()\r\n\r\n      const stableSubscriptionOptions = useShallowStableValue({\r\n        refetchOnReconnect,\r\n        refetchOnFocus,\r\n        pollingInterval,\r\n      })\r\n\r\n      usePossiblyImmediateEffect(() => {\r\n        const lastSubscriptionOptions = promiseRef.current?.subscriptionOptions\r\n\r\n        if (stableSubscriptionOptions !== lastSubscriptionOptions) {\r\n          promiseRef.current?.updateSubscriptionOptions(\r\n            stableSubscriptionOptions\r\n          )\r\n        }\r\n      }, [stableSubscriptionOptions])\r\n\r\n      const subscriptionOptionsRef = useRef(stableSubscriptionOptions)\r\n      usePossiblyImmediateEffect(() => {\r\n        subscriptionOptionsRef.current = stableSubscriptionOptions\r\n      }, [stableSubscriptionOptions])\r\n\r\n      const trigger = useCallback(\r\n        function (arg: any, preferCacheValue = false) {\r\n          let promise: QueryActionCreatorResult<any>\r\n\r\n          batch(() => {\r\n            promiseRef.current?.unsubscribe()\r\n\r\n            promiseRef.current = promise = dispatch(\r\n              initiate(arg, {\r\n                subscriptionOptions: subscriptionOptionsRef.current,\r\n                forceRefetch: !preferCacheValue,\r\n              })\r\n            )\r\n\r\n            setArg(arg)\r\n          })\r\n\r\n          return promise!\r\n        },\r\n        [dispatch, initiate]\r\n      )\r\n\r\n      /* cleanup on unmount */\r\n      useEffect(() => {\r\n        return () => {\r\n          promiseRef?.current?.unsubscribe()\r\n        }\r\n      }, [])\r\n\r\n      /* if \"cleanup on unmount\" was triggered from a fast refresh, we want to reinstate the query */\r\n      useEffect(() => {\r\n        if (arg !== UNINITIALIZED_VALUE && !promiseRef.current) {\r\n          trigger(arg, true)\r\n        }\r\n      }, [arg, trigger])\r\n\r\n      return useMemo(() => [trigger, arg] as const, [trigger, arg])\r\n    }\r\n\r\n    const useQueryState: UseQueryState<any> = (\r\n      arg: any,\r\n      { skip = false, selectFromResult } = {}\r\n    ) => {\r\n      const { select } = api.endpoints[name] as ApiEndpointQuery<\r\n        QueryDefinition<any, any, any, any, any>,\r\n        Definitions\r\n      >\r\n      const stableArg = useStableQueryArgs(\r\n        skip ? skipToken : arg,\r\n        serializeQueryArgs,\r\n        context.endpointDefinitions[name],\r\n        name\r\n      )\r\n\r\n      type ApiRootState = Parameters<ReturnType<typeof select>>[0]\r\n\r\n      const lastValue = useRef<any>()\r\n\r\n      const selectDefaultResult: Selector<ApiRootState, any, [any]> = useMemo(\r\n        () =>\r\n          createSelector(\r\n            [\r\n              select(stableArg),\r\n              (_: ApiRootState, lastResult: any) => lastResult,\r\n              (_: ApiRootState) => stableArg,\r\n            ],\r\n            queryStatePreSelector\r\n          ),\r\n        [select, stableArg]\r\n      )\r\n\r\n      const querySelector: Selector<ApiRootState, any, [any]> = useMemo(\r\n        () =>\r\n          selectFromResult\r\n            ? createSelector([selectDefaultResult], selectFromResult)\r\n            : selectDefaultResult,\r\n        [selectDefaultResult, selectFromResult]\r\n      )\r\n\r\n      const currentState = useSelector(\r\n        (state: RootState<Definitions, any, any>) =>\r\n          querySelector(state, lastValue.current),\r\n        shallowEqual\r\n      )\r\n\r\n      const store = useStore<RootState<Definitions, any, any>>()\r\n      const newLastValue = selectDefaultResult(\r\n        store.getState(),\r\n        lastValue.current\r\n      )\r\n      useIsomorphicLayoutEffect(() => {\r\n        lastValue.current = newLastValue\r\n      }, [newLastValue])\r\n\r\n      return currentState\r\n    }\r\n\r\n    return {\r\n      useQueryState,\r\n      useQuerySubscription,\r\n      useLazyQuerySubscription,\r\n      useLazyQuery(options) {\r\n        const [trigger, arg] = useLazyQuerySubscription(options)\r\n        const queryStateResults = useQueryState(arg, {\r\n          ...options,\r\n          skip: arg === UNINITIALIZED_VALUE,\r\n        })\r\n\r\n        const info = useMemo(() => ({ lastArg: arg }), [arg])\r\n        return useMemo(\r\n          () => [trigger, queryStateResults, info],\r\n          [trigger, queryStateResults, info]\r\n        )\r\n      },\r\n      useQuery(arg, options) {\r\n        const querySubscriptionResults = useQuerySubscription(arg, options)\r\n        const queryStateResults = useQueryState(arg, {\r\n          selectFromResult:\r\n            arg === skipToken || options?.skip\r\n              ? undefined\r\n              : noPendingQueryStateSelector,\r\n          ...options,\r\n        })\r\n\r\n        const { data, status, isLoading, isSuccess, isError, error } =\r\n          queryStateResults\r\n        useDebugValue({ data, status, isLoading, isSuccess, isError, error })\r\n\r\n        return useMemo(\r\n          () => ({ ...queryStateResults, ...querySubscriptionResults }),\r\n          [queryStateResults, querySubscriptionResults]\r\n        )\r\n      },\r\n    }\r\n  }\r\n\r\n  function buildMutationHook(name: string): UseMutation<any> {\r\n    return ({\r\n      selectFromResult = defaultMutationStateSelector,\r\n      fixedCacheKey,\r\n    } = {}) => {\r\n      const { select, initiate } = api.endpoints[name] as ApiEndpointMutation<\r\n        MutationDefinition<any, any, any, any, any>,\r\n        Definitions\r\n      >\r\n      const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>()\r\n      const [promise, setPromise] = useState<MutationActionCreatorResult<any>>()\r\n\r\n      useEffect(\r\n        () => () => {\r\n          if (!promise?.arg.fixedCacheKey) {\r\n            promise?.reset()\r\n          }\r\n        },\r\n        [promise]\r\n      )\r\n\r\n      const triggerMutation = useCallback(\r\n        function (arg: Parameters<typeof initiate>['0']) {\r\n          const promise = dispatch(initiate(arg, { fixedCacheKey }))\r\n          setPromise(promise)\r\n          return promise\r\n        },\r\n        [dispatch, initiate, fixedCacheKey]\r\n      )\r\n\r\n      const { requestId } = promise || {}\r\n      const mutationSelector = useMemo(\r\n        () =>\r\n          createSelector(\r\n            [select({ fixedCacheKey, requestId: promise?.requestId })],\r\n            selectFromResult\r\n          ),\r\n        [select, promise, selectFromResult, fixedCacheKey]\r\n      )\r\n\r\n      const currentState = useSelector(mutationSelector, shallowEqual)\r\n      const originalArgs =\r\n        fixedCacheKey == null ? promise?.arg.originalArgs : undefined\r\n      const reset = useCallback(() => {\r\n        batch(() => {\r\n          if (promise) {\r\n            setPromise(undefined)\r\n          }\r\n          if (fixedCacheKey) {\r\n            dispatch(\r\n              api.internalActions.removeMutationResult({\r\n                requestId,\r\n                fixedCacheKey,\r\n              })\r\n            )\r\n          }\r\n        })\r\n      }, [dispatch, fixedCacheKey, promise, requestId])\r\n\r\n      const {\r\n        endpointName,\r\n        data,\r\n        status,\r\n        isLoading,\r\n        isSuccess,\r\n        isError,\r\n        error,\r\n      } = currentState\r\n      useDebugValue({\r\n        endpointName,\r\n        data,\r\n        status,\r\n        isLoading,\r\n        isSuccess,\r\n        isError,\r\n        error,\r\n      })\r\n\r\n      const finalState = useMemo(\r\n        () => ({ ...currentState, originalArgs, reset }),\r\n        [currentState, originalArgs, reset]\r\n      )\r\n\r\n      return useMemo(\r\n        () => [triggerMutation, finalState] as const,\r\n        [triggerMutation, finalState]\r\n      )\r\n    }\r\n  }\r\n}\r\n", "import { useEffect, useRef, useMemo } from 'react'\r\nimport type { SerializeQueryArgs } from '@reduxjs/toolkit/query'\r\nimport type { EndpointDefinition } from '@reduxjs/toolkit/query'\r\n\r\nexport function useStableQueryArgs<T>(\r\n  queryArgs: T,\r\n  serialize: SerializeQueryArgs<any>,\r\n  endpointDefinition: EndpointDefinition<any, any, any, any>,\r\n  endpointName: string\r\n) {\r\n  const incoming = useMemo(\r\n    () => ({\r\n      queryArgs,\r\n      serialized:\r\n        typeof queryArgs == 'object'\r\n          ? serialize({ queryArgs, endpointDefinition, endpointName })\r\n          : queryArgs,\r\n    }),\r\n    [queryArgs, serialize, endpointDefinition, endpointName]\r\n  )\r\n  const cache = useRef(incoming)\r\n  useEffect(() => {\r\n    if (cache.current.serialized !== incoming.serialized) {\r\n      cache.current = incoming\r\n    }\r\n  }, [incoming])\r\n\r\n  return cache.current.serialized === incoming.serialized\r\n    ? cache.current.queryArgs\r\n    : queryArgs\r\n}\r\n", "export const UNINITIALIZED_VALUE = Symbol()\r\nexport type UninitializedValue = typeof UNINITIALIZED_VALUE\r\n", "import { useEffect, useRef } from 'react'\r\nimport { shallowEqual } from 'react-redux'\r\n\r\nexport function useShallowStableValue<T>(value: T) {\r\n  const cache = useRef(value)\r\n  useEffect(() => {\r\n    if (!shallowEqual(cache.current, value)) {\r\n      cache.current = value\r\n    }\r\n  }, [value])\r\n\r\n  return shallowEqual(cache.current, value) ? cache.current : value\r\n}\r\n", "import type { QueryCacheKey } from './core/apiState'\r\nimport type { EndpointDefinition } from './endpointDefinitions'\r\nimport { isPlainObject } from '@reduxjs/toolkit'\r\n\r\nconst cache: WeakMap<any, string> | undefined = WeakMap\r\n  ? new WeakMap()\r\n  : undefined\r\n\r\nexport const defaultSerializeQueryArgs: SerializeQueryArgs<any> = ({\r\n  endpointName,\r\n  queryArgs,\r\n}) => {\r\n  let serialized = ''\r\n\r\n  const cached = cache?.get(queryArgs)\r\n\r\n  if (typeof cached === 'string') {\r\n    serialized = cached\r\n  } else {\r\n    const stringified = JSON.stringify(queryArgs, (key, value) =>\r\n      isPlainObject(value)\r\n        ? Object.keys(value)\r\n            .sort()\r\n            .reduce<any>((acc, key) => {\r\n              acc[key] = (value as any)[key]\r\n              return acc\r\n            }, {})\r\n        : value\r\n    )\r\n    if (isPlainObject(queryArgs)) {\r\n      cache?.set(queryArgs, stringified)\r\n    }\r\n    serialized = stringified\r\n  }\r\n  // Sort the object keys before stringifying, to prevent useQuery({ a: 1, b: 2 }) having a different cache key than useQuery({ b: 2, a: 1 })\r\n  return `${endpointName}(${serialized})`\r\n}\r\n\r\nexport type SerializeQueryArgs<QueryArgs, ReturnType = string> = (_: {\r\n  queryArgs: QueryArgs\r\n  endpointDefinition: EndpointDefinition<any, any, any, any>\r\n  endpointName: string\r\n}) => ReturnType\r\n\r\nexport type InternalSerializeQueryArgs = (_: {\r\n  queryArgs: any\r\n  endpointDefinition: EndpointDefinition<any, any, any, any>\r\n  endpointName: string\r\n}) => QueryCacheKey\r\n", "import type { AnyAction, ThunkDispatch } from '@reduxjs/toolkit'\r\nimport type { SerializeQueryArgs } from './defaultSerializeQueryArgs'\r\nimport type { QuerySubState, RootState } from './core/apiState'\r\nimport type {\r\n  BaseQueryExtraOptions,\r\n  BaseQueryFn,\r\n  BaseQueryResult,\r\n  BaseQueryArg,\r\n  BaseQueryApi,\r\n  QueryReturnValue,\r\n  BaseQueryError,\r\n  BaseQueryMeta,\r\n} from './baseQueryTypes'\r\nimport type {\r\n  HasRequiredProps,\r\n  MaybePromise,\r\n  OmitFromUnion,\r\n  CastAny,\r\n  NonUndefined,\r\n  UnwrapPromise,\r\n} from './tsHelpers'\r\nimport type { NEVER } from './fakeBaseQuery'\r\nimport type { Api } from '@reduxjs/toolkit/query'\r\n\r\nconst resultType = /* @__PURE__ */ Symbol()\r\nconst baseQuery = /* @__PURE__ */ Symbol()\r\n\r\ninterface EndpointDefinitionWithQuery<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ResultType\r\n> {\r\n  /**\r\n   * `query` can be a function that returns either a `string` or an `object` which is passed to your `baseQuery`. If you are using [fetchBaseQuery](./fetchBaseQuery), this can return either a `string` or an `object` of properties in `FetchArgs`. If you use your own custom [`baseQuery`](../../rtk-query/usage/customizing-queries), you can customize this behavior to your liking.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"query example\"\r\n   *\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   * type PostsResponse = Post[]\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   tagTypes: ['Post'],\r\n   *   endpoints: (build) => ({\r\n   *     getPosts: build.query<PostsResponse, void>({\r\n   *       // highlight-start\r\n   *       query: () => 'posts',\r\n   *       // highlight-end\r\n   *     }),\r\n   *     addPost: build.mutation<Post, Partial<Post>>({\r\n   *      // highlight-start\r\n   *      query: (body) => ({\r\n   *        url: `posts`,\r\n   *        method: 'POST',\r\n   *        body,\r\n   *      }),\r\n   *      // highlight-end\r\n   *      invalidatesTags: [{ type: 'Post', id: 'LIST' }],\r\n   *    }),\r\n   *   })\r\n   * })\r\n   * ```\r\n   */\r\n  query(arg: QueryArg): BaseQueryArg<BaseQuery>\r\n  queryFn?: never\r\n  /**\r\n   * A function to manipulate the data returned by a query or mutation.\r\n   */\r\n  transformResponse?(\r\n    baseQueryReturnValue: BaseQueryResult<BaseQuery>,\r\n    meta: BaseQueryMeta<BaseQuery>,\r\n    arg: QueryArg\r\n  ): ResultType | Promise<ResultType>\r\n  /**\r\n   * A function to manipulate the data returned by a failed query or mutation.\r\n   */\r\n  transformErrorResponse?(\r\n    baseQueryReturnValue: BaseQueryError<BaseQuery>,\r\n    meta: BaseQueryMeta<BaseQuery>,\r\n    arg: QueryArg\r\n  ): unknown\r\n  /**\r\n   * Defaults to `true`.\r\n   *\r\n   * Most apps should leave this setting on. The only time it can be a performance issue\r\n   * is if an API returns extremely large amounts of data (e.g. 10,000 rows per request) and\r\n   * you're unable to paginate it.\r\n   *\r\n   * For details of how this works, please see the below. When it is set to `false`,\r\n   * every request will cause subscribed components to rerender, even when the data has not changed.\r\n   *\r\n   * @see https://redux-toolkit.js.org/api/other-exports#copywithstructuralsharing\r\n   */\r\n  structuralSharing?: boolean\r\n}\r\n\r\ninterface EndpointDefinitionWithQueryFn<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ResultType\r\n> {\r\n  /**\r\n   * Can be used in place of `query` as an inline function that bypasses `baseQuery` completely for the endpoint.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * // codeblock-meta title=\"Basic queryFn example\"\r\n   *\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   * type PostsResponse = Post[]\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   endpoints: (build) => ({\r\n   *     getPosts: build.query<PostsResponse, void>({\r\n   *       query: () => 'posts',\r\n   *     }),\r\n   *     flipCoin: build.query<'heads' | 'tails', void>({\r\n   *       // highlight-start\r\n   *       queryFn(arg, queryApi, extraOptions, baseQuery) {\r\n   *         const randomVal = Math.random()\r\n   *         if (randomVal < 0.45) {\r\n   *           return { data: 'heads' }\r\n   *         }\r\n   *         if (randomVal < 0.9) {\r\n   *           return { data: 'tails' }\r\n   *         }\r\n   *         return { error: { status: 500, statusText: 'Internal Server Error', data: \"Coin landed on it's edge!\" } }\r\n   *       }\r\n   *       // highlight-end\r\n   *     })\r\n   *   })\r\n   * })\r\n   * ```\r\n   */\r\n  queryFn(\r\n    arg: QueryArg,\r\n    api: BaseQueryApi,\r\n    extraOptions: BaseQueryExtraOptions<BaseQuery>,\r\n    baseQuery: (arg: Parameters<BaseQuery>[0]) => ReturnType<BaseQuery>\r\n  ): MaybePromise<QueryReturnValue<ResultType, BaseQueryError<BaseQuery>>>\r\n  query?: never\r\n  transformResponse?: never\r\n  transformErrorResponse?: never\r\n  /**\r\n   * Defaults to `true`.\r\n   *\r\n   * Most apps should leave this setting on. The only time it can be a performance issue\r\n   * is if an API returns extremely large amounts of data (e.g. 10,000 rows per request) and\r\n   * you're unable to paginate it.\r\n   *\r\n   * For details of how this works, please see the below. When it is set to `false`,\r\n   * every request will cause subscribed components to rerender, even when the data has not changed.\r\n   *\r\n   * @see https://redux-toolkit.js.org/api/other-exports#copywithstructuralsharing\r\n   */\r\n  structuralSharing?: boolean\r\n}\r\n\r\nexport interface BaseEndpointTypes<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ResultType\r\n> {\r\n  QueryArg: QueryArg\r\n  BaseQuery: BaseQuery\r\n  ResultType: ResultType\r\n}\r\n\r\nexport type BaseEndpointDefinition<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ResultType\r\n> = (\r\n  | ([CastAny<BaseQueryResult<BaseQuery>, {}>] extends [NEVER]\r\n      ? never\r\n      : EndpointDefinitionWithQuery<QueryArg, BaseQuery, ResultType>)\r\n  | EndpointDefinitionWithQueryFn<QueryArg, BaseQuery, ResultType>\r\n) & {\r\n  /* phantom type */\r\n  [resultType]?: ResultType\r\n  /* phantom type */\r\n  [baseQuery]?: BaseQuery\r\n} & HasRequiredProps<\r\n    BaseQueryExtraOptions<BaseQuery>,\r\n    { extraOptions: BaseQueryExtraOptions<BaseQuery> },\r\n    { extraOptions?: BaseQueryExtraOptions<BaseQuery> }\r\n  >\r\n\r\nexport enum DefinitionType {\r\n  query = 'query',\r\n  mutation = 'mutation',\r\n}\r\n\r\nexport type GetResultDescriptionFn<\r\n  TagTypes extends string,\r\n  ResultType,\r\n  QueryArg,\r\n  ErrorType,\r\n  MetaType\r\n> = (\r\n  result: ResultType | undefined,\r\n  error: ErrorType | undefined,\r\n  arg: QueryArg,\r\n  meta: MetaType\r\n) => ReadonlyArray<TagDescription<TagTypes>>\r\n\r\nexport type FullTagDescription<TagType> = {\r\n  type: TagType\r\n  id?: number | string\r\n}\r\nexport type TagDescription<TagType> = TagType | FullTagDescription<TagType>\r\nexport type ResultDescription<\r\n  TagTypes extends string,\r\n  ResultType,\r\n  QueryArg,\r\n  ErrorType,\r\n  MetaType\r\n> =\r\n  | ReadonlyArray<TagDescription<TagTypes>>\r\n  | GetResultDescriptionFn<TagTypes, ResultType, QueryArg, ErrorType, MetaType>\r\n\r\n/** @deprecated please use `onQueryStarted` instead */\r\nexport interface QueryApi<ReducerPath extends string, Context extends {}> {\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  dispatch: ThunkDispatch<any, any, AnyAction>\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  getState(): RootState<any, any, ReducerPath>\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  extra: unknown\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  requestId: string\r\n  /** @deprecated please use `onQueryStarted` instead */\r\n  context: Context\r\n}\r\n\r\nexport interface QueryTypes<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> extends BaseEndpointTypes<QueryArg, BaseQuery, ResultType> {\r\n  /**\r\n   * The endpoint definition type. To be used with some internal generic types.\r\n   * @example\r\n   * ```ts\r\n   * const useMyWrappedHook: UseQuery<typeof api.endpoints.query.Types.QueryDefinition> = ...\r\n   * ```\r\n   */\r\n  QueryDefinition: QueryDefinition<\r\n    QueryArg,\r\n    BaseQuery,\r\n    TagTypes,\r\n    ResultType,\r\n    ReducerPath\r\n  >\r\n  TagTypes: TagTypes\r\n  ReducerPath: ReducerPath\r\n}\r\n\r\nexport interface QueryExtraOptions<\r\n  TagTypes extends string,\r\n  ResultType,\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ReducerPath extends string = string\r\n> {\r\n  type: DefinitionType.query\r\n  /**\r\n   * Used by `query` endpoints. Determines which 'tag' is attached to the cached data returned by the query.\r\n   * Expects an array of tag type strings, an array of objects of tag types with ids, or a function that returns such an array.\r\n   * 1.  `['Post']` - equivalent to `2`\r\n   * 2.  `[{ type: 'Post' }]` - equivalent to `1`\r\n   * 3.  `[{ type: 'Post', id: 1 }]`\r\n   * 4.  `(result, error, arg) => ['Post']` - equivalent to `5`\r\n   * 5.  `(result, error, arg) => [{ type: 'Post' }]` - equivalent to `4`\r\n   * 6.  `(result, error, arg) => [{ type: 'Post', id: 1 }]`\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"providesTags example\"\r\n   *\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   * type PostsResponse = Post[]\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   tagTypes: ['Posts'],\r\n   *   endpoints: (build) => ({\r\n   *     getPosts: build.query<PostsResponse, void>({\r\n   *       query: () => 'posts',\r\n   *       // highlight-start\r\n   *       providesTags: (result) =>\r\n   *         result\r\n   *           ? [\r\n   *               ...result.map(({ id }) => ({ type: 'Posts' as const, id })),\r\n   *               { type: 'Posts', id: 'LIST' },\r\n   *             ]\r\n   *           : [{ type: 'Posts', id: 'LIST' }],\r\n   *       // highlight-end\r\n   *     })\r\n   *   })\r\n   * })\r\n   * ```\r\n   */\r\n  providesTags?: ResultDescription<\r\n    TagTypes,\r\n    ResultType,\r\n    QueryArg,\r\n    BaseQueryError<BaseQuery>,\r\n    BaseQueryMeta<BaseQuery>\r\n  >\r\n  /**\r\n   * Not to be used. A query should not invalidate tags in the cache.\r\n   */\r\n  invalidatesTags?: never\r\n\r\n  /**\r\n   * Can be provided to return a custom cache key value based on the query arguments.\r\n   *\r\n   * This is primarily intended for cases where a non-serializable value is passed as part of the query arg object and should be excluded from the cache key.  It may also be used for cases where an endpoint should only have a single cache entry, such as an infinite loading / pagination implementation.\r\n   *\r\n   * Unlike the `createApi` version which can _only_ return a string, this per-endpoint option can also return an an object, number, or boolean.  If it returns a string, that value will be used as the cache key directly.  If it returns an object / number / boolean, that value will be passed to the built-in `defaultSerializeQueryArgs`.  This simplifies the use case of stripping out args you don't want included in the cache key.\r\n   *\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"serializeQueryArgs : exclude value\"\r\n   *\r\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   *\r\n   * interface MyApiClient {\r\n   *   fetchPost: (id: string) => Promise<Post>\r\n   * }\r\n   *\r\n   * createApi({\r\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *  endpoints: (build) => ({\r\n   *    // Example: an endpoint with an API client passed in as an argument,\r\n   *    // but only the item ID should be used as the cache key\r\n   *    getPost: build.query<Post, { id: string; client: MyApiClient }>({\r\n   *      queryFn: async ({ id, client }) => {\r\n   *        const post = await client.fetchPost(id)\r\n   *        return { data: post }\r\n   *      },\r\n   *      // highlight-start\r\n   *      serializeQueryArgs: ({ queryArgs, endpointDefinition, endpointName }) => {\r\n   *        const { id } = queryArgs\r\n   *        // This can return a string, an object, a number, or a boolean.\r\n   *        // If it returns an object, number or boolean, that value\r\n   *        // will be serialized automatically via `defaultSerializeQueryArgs`\r\n   *        return { id } // omit `client` from the cache key\r\n   *\r\n   *        // Alternately, you can use `defaultSerializeQueryArgs` yourself:\r\n   *        // return defaultSerializeQueryArgs({\r\n   *        //   endpointName,\r\n   *        //   queryArgs: { id },\r\n   *        //   endpointDefinition\r\n   *        // })\r\n   *        // Or  create and return a string yourself:\r\n   *        // return `getPost(${id})`\r\n   *      },\r\n   *      // highlight-end\r\n   *    }),\r\n   *  }),\r\n   *})\r\n   * ```\r\n   */\r\n  serializeQueryArgs?: SerializeQueryArgs<\r\n    QueryArg,\r\n    string | number | boolean | Record<any, any>\r\n  >\r\n\r\n  /**\r\n   * Can be provided to merge an incoming response value into the current cache data.\r\n   * If supplied, no automatic structural sharing will be applied - it's up to\r\n   * you to update the cache appropriately.\r\n   *\r\n   * Since RTKQ normally replaces cache entries with the new response, you will usually\r\n   * need to use this with the `serializeQueryArgs` or `forceRefetch` options to keep\r\n   * an existing cache entry so that it can be updated.\r\n   *\r\n   * Since this is wrapped with Immer, you may either mutate the `currentCacheValue` directly,\r\n   * or return a new value, but _not_ both at once.\r\n   *\r\n   * Will only be called if the existing `currentCacheData` is _not_ `undefined` - on first response,\r\n   * the cache entry will just save the response data directly.\r\n   *\r\n   * Useful if you don't want a new request to completely override the current cache value,\r\n   * maybe because you have manually updated it from another source and don't want those\r\n   * updates to get lost.\r\n   *\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"merge: pagination\"\r\n   *\r\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   *\r\n   * createApi({\r\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *  endpoints: (build) => ({\r\n   *    listItems: build.query<string[], number>({\r\n   *      query: (pageNumber) => `/listItems?page=${pageNumber}`,\r\n   *     // Only have one cache entry because the arg always maps to one string\r\n   *     serializeQueryArgs: ({ endpointName }) => {\r\n   *       return endpointName\r\n   *      },\r\n   *      // Always merge incoming data to the cache entry\r\n   *      merge: (currentCache, newItems) => {\r\n   *        currentCache.push(...newItems)\r\n   *      },\r\n   *      // Refetch when the page arg changes\r\n   *      forceRefetch({ currentArg, previousArg }) {\r\n   *        return currentArg !== previousArg\r\n   *      },\r\n   *    }),\r\n   *  }),\r\n   *})\r\n   * ```\r\n   */\r\n  merge?(\r\n    currentCacheData: ResultType,\r\n    responseData: ResultType,\r\n    otherArgs: {\r\n      arg: QueryArg\r\n      baseQueryMeta: BaseQueryMeta<BaseQuery>\r\n      requestId: string\r\n      fulfilledTimeStamp: number\r\n    }\r\n  ): ResultType | void\r\n\r\n  /**\r\n   * Check to see if the endpoint should force a refetch in cases where it normally wouldn't.\r\n   * This is primarily useful for \"infinite scroll\" / pagination use cases where\r\n   * RTKQ is keeping a single cache entry that is added to over time, in combination\r\n   * with `serializeQueryArgs` returning a fixed cache key and a `merge` callback\r\n   * set to add incoming data to the cache entry each time.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"forceRefresh: pagination\"\r\n   *\r\n   * import { createApi, fetchBaseQuery, defaultSerializeQueryArgs } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   *\r\n   * createApi({\r\n   *  baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *  endpoints: (build) => ({\r\n   *    listItems: build.query<string[], number>({\r\n   *      query: (pageNumber) => `/listItems?page=${pageNumber}`,\r\n   *     // Only have one cache entry because the arg always maps to one string\r\n   *     serializeQueryArgs: ({ endpointName }) => {\r\n   *       return endpointName\r\n   *      },\r\n   *      // Always merge incoming data to the cache entry\r\n   *      merge: (currentCache, newItems) => {\r\n   *        currentCache.push(...newItems)\r\n   *      },\r\n   *      // Refetch when the page arg changes\r\n   *      forceRefetch({ currentArg, previousArg }) {\r\n   *        return currentArg !== previousArg\r\n   *      },\r\n   *    }),\r\n   *  }),\r\n   *})\r\n   * ```\r\n   */\r\n  forceRefetch?(params: {\r\n    currentArg: QueryArg | undefined\r\n    previousArg: QueryArg | undefined\r\n    state: RootState<any, any, string>\r\n    endpointState?: QuerySubState<any>\r\n  }): boolean\r\n\r\n  /**\r\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\r\n   */\r\n  Types?: QueryTypes<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n}\r\n\r\nexport type QueryDefinition<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> = BaseEndpointDefinition<QueryArg, BaseQuery, ResultType> &\r\n  QueryExtraOptions<TagTypes, ResultType, QueryArg, BaseQuery, ReducerPath>\r\n\r\nexport interface MutationTypes<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> extends BaseEndpointTypes<QueryArg, BaseQuery, ResultType> {\r\n  /**\r\n   * The endpoint definition type. To be used with some internal generic types.\r\n   * @example\r\n   * ```ts\r\n   * const useMyWrappedHook: UseMutation<typeof api.endpoints.query.Types.MutationDefinition> = ...\r\n   * ```\r\n   */\r\n  MutationDefinition: MutationDefinition<\r\n    QueryArg,\r\n    BaseQuery,\r\n    TagTypes,\r\n    ResultType,\r\n    ReducerPath\r\n  >\r\n  TagTypes: TagTypes\r\n  ReducerPath: ReducerPath\r\n}\r\n\r\nexport interface MutationExtraOptions<\r\n  TagTypes extends string,\r\n  ResultType,\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  ReducerPath extends string = string\r\n> {\r\n  type: DefinitionType.mutation\r\n  /**\r\n   * Used by `mutation` endpoints. Determines which cached data should be either re-fetched or removed from the cache.\r\n   * Expects the same shapes as `providesTags`.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * // codeblock-meta title=\"invalidatesTags example\"\r\n   * import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n   * interface Post {\r\n   *   id: number\r\n   *   name: string\r\n   * }\r\n   * type PostsResponse = Post[]\r\n   *\r\n   * const api = createApi({\r\n   *   baseQuery: fetchBaseQuery({ baseUrl: '/' }),\r\n   *   tagTypes: ['Posts'],\r\n   *   endpoints: (build) => ({\r\n   *     getPosts: build.query<PostsResponse, void>({\r\n   *       query: () => 'posts',\r\n   *       providesTags: (result) =>\r\n   *         result\r\n   *           ? [\r\n   *               ...result.map(({ id }) => ({ type: 'Posts' as const, id })),\r\n   *               { type: 'Posts', id: 'LIST' },\r\n   *             ]\r\n   *           : [{ type: 'Posts', id: 'LIST' }],\r\n   *     }),\r\n   *     addPost: build.mutation<Post, Partial<Post>>({\r\n   *       query(body) {\r\n   *         return {\r\n   *           url: `posts`,\r\n   *           method: 'POST',\r\n   *           body,\r\n   *         }\r\n   *       },\r\n   *       // highlight-start\r\n   *       invalidatesTags: [{ type: 'Posts', id: 'LIST' }],\r\n   *       // highlight-end\r\n   *     }),\r\n   *   })\r\n   * })\r\n   * ```\r\n   */\r\n  invalidatesTags?: ResultDescription<\r\n    TagTypes,\r\n    ResultType,\r\n    QueryArg,\r\n    BaseQueryError<BaseQuery>,\r\n    BaseQueryMeta<BaseQuery>\r\n  >\r\n  /**\r\n   * Not to be used. A mutation should not provide tags to the cache.\r\n   */\r\n  providesTags?: never\r\n\r\n  /**\r\n   * All of these are `undefined` at runtime, purely to be used in TypeScript declarations!\r\n   */\r\n  Types?: MutationTypes<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n}\r\n\r\nexport type MutationDefinition<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> = BaseEndpointDefinition<QueryArg, BaseQuery, ResultType> &\r\n  MutationExtraOptions<TagTypes, ResultType, QueryArg, BaseQuery, ReducerPath>\r\n\r\nexport type EndpointDefinition<\r\n  QueryArg,\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ResultType,\r\n  ReducerPath extends string = string\r\n> =\r\n  | QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n  | MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n\r\nexport type EndpointDefinitions = Record<\r\n  string,\r\n  EndpointDefinition<any, any, any, any>\r\n>\r\n\r\nexport function isQueryDefinition(\r\n  e: EndpointDefinition<any, any, any, any>\r\n): e is QueryDefinition<any, any, any, any> {\r\n  return e.type === DefinitionType.query\r\n}\r\n\r\nexport function isMutationDefinition(\r\n  e: EndpointDefinition<any, any, any, any>\r\n): e is MutationDefinition<any, any, any, any> {\r\n  return e.type === DefinitionType.mutation\r\n}\r\n\r\nexport type EndpointBuilder<\r\n  BaseQuery extends BaseQueryFn,\r\n  TagTypes extends string,\r\n  ReducerPath extends string\r\n> = {\r\n  /**\r\n   * An endpoint definition that retrieves data, and may provide tags to the cache.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // codeblock-meta title=\"Example of all query endpoint options\"\r\n   * const api = createApi({\r\n   *  baseQuery,\r\n   *  endpoints: (build) => ({\r\n   *    getPost: build.query({\r\n   *      query: (id) => ({ url: `post/${id}` }),\r\n   *      // Pick out data and prevent nested properties in a hook or selector\r\n   *      transformResponse: (response) => response.data,\r\n   *      // Pick out error and prevent nested properties in a hook or selector\r\n   *      transformErrorResponse: (response) => response.error,\r\n   *      // `result` is the server response\r\n   *      providesTags: (result, error, id) => [{ type: 'Post', id }],\r\n   *      // trigger side effects or optimistic updates\r\n   *      onQueryStarted(id, { dispatch, getState, extra, requestId, queryFulfilled, getCacheEntry, updateCachedData }) {},\r\n   *      // handle subscriptions etc\r\n   *      onCacheEntryAdded(id, { dispatch, getState, extra, requestId, cacheEntryRemoved, cacheDataLoaded, getCacheEntry, updateCachedData }) {},\r\n   *    }),\r\n   *  }),\r\n   *});\r\n   *```\r\n   */\r\n  query<ResultType, QueryArg>(\r\n    definition: OmitFromUnion<\r\n      QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>,\r\n      'type'\r\n    >\r\n  ): QueryDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n  /**\r\n   * An endpoint definition that alters data on the server or will possibly invalidate the cache.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * // codeblock-meta title=\"Example of all mutation endpoint options\"\r\n   * const api = createApi({\r\n   *   baseQuery,\r\n   *   endpoints: (build) => ({\r\n   *     updatePost: build.mutation({\r\n   *       query: ({ id, ...patch }) => ({ url: `post/${id}`, method: 'PATCH', body: patch }),\r\n   *       // Pick out data and prevent nested properties in a hook or selector\r\n   *       transformResponse: (response) => response.data,\r\n   *       // Pick out error and prevent nested properties in a hook or selector\r\n   *       transformErrorResponse: (response) => response.error,\r\n   *       // `result` is the server response\r\n   *       invalidatesTags: (result, error, id) => [{ type: 'Post', id }],\r\n   *      // trigger side effects or optimistic updates\r\n   *      onQueryStarted(id, { dispatch, getState, extra, requestId, queryFulfilled, getCacheEntry }) {},\r\n   *      // handle subscriptions etc\r\n   *      onCacheEntryAdded(id, { dispatch, getState, extra, requestId, cacheEntryRemoved, cacheDataLoaded, getCacheEntry }) {},\r\n   *     }),\r\n   *   }),\r\n   * });\r\n   * ```\r\n   */\r\n  mutation<ResultType, QueryArg>(\r\n    definition: OmitFromUnion<\r\n      MutationDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        TagTypes,\r\n        ResultType,\r\n        ReducerPath\r\n      >,\r\n      'type'\r\n    >\r\n  ): MutationDefinition<QueryArg, BaseQuery, TagTypes, ResultType, ReducerPath>\r\n}\r\n\r\nexport type AssertTagTypes = <T extends FullTagDescription<string>>(t: T) => T\r\n\r\nexport function calculateProvidedBy<ResultType, QueryArg, ErrorType, MetaType>(\r\n  description:\r\n    | ResultDescription<string, ResultType, QueryArg, ErrorType, MetaType>\r\n    | undefined,\r\n  result: ResultType | undefined,\r\n  error: ErrorType | undefined,\r\n  queryArg: QueryArg,\r\n  meta: MetaType | undefined,\r\n  assertTagTypes: AssertTagTypes\r\n): readonly FullTagDescription<string>[] {\r\n  if (isFunction(description)) {\r\n    return description(\r\n      result as ResultType,\r\n      error as undefined,\r\n      queryArg,\r\n      meta as MetaType\r\n    )\r\n      .map(expandTagDescription)\r\n      .map(assertTagTypes)\r\n  }\r\n  if (Array.isArray(description)) {\r\n    return description.map(expandTagDescription).map(assertTagTypes)\r\n  }\r\n  return []\r\n}\r\n\r\nfunction isFunction<T>(t: T): t is Extract<T, Function> {\r\n  return typeof t === 'function'\r\n}\r\n\r\nexport function expandTagDescription(\r\n  description: TagDescription<string>\r\n): FullTagDescription<string> {\r\n  return typeof description === 'string' ? { type: description } : description\r\n}\r\n\r\nexport type QueryArgFrom<D extends BaseEndpointDefinition<any, any, any>> =\r\n  D extends BaseEndpointDefinition<infer QA, any, any> ? QA : unknown\r\nexport type ResultTypeFrom<D extends BaseEndpointDefinition<any, any, any>> =\r\n  D extends BaseEndpointDefinition<any, any, infer RT> ? RT : unknown\r\n\r\nexport type ReducerPathFrom<\r\n  D extends EndpointDefinition<any, any, any, any, any>\r\n> = D extends EndpointDefinition<any, any, any, any, infer RP> ? RP : unknown\r\n\r\nexport type TagTypesFrom<D extends EndpointDefinition<any, any, any, any>> =\r\n  D extends EndpointDefinition<any, any, infer RP, any> ? RP : unknown\r\n\r\nexport type TagTypesFromApi<T> = T extends Api<any, any, any, infer TagTypes>\r\n  ? TagTypes\r\n  : never\r\n\r\nexport type DefinitionsFromApi<T> = T extends Api<\r\n  any,\r\n  infer Definitions,\r\n  any,\r\n  any\r\n>\r\n  ? Definitions\r\n  : never\r\n\r\nexport type TransformedResponse<\r\n  NewDefinitions extends EndpointDefinitions,\r\n  K,\r\n  ResultType\r\n> = K extends keyof NewDefinitions\r\n  ? NewDefinitions[K]['transformResponse'] extends undefined\r\n    ? ResultType\r\n    : UnwrapPromise<\r\n        ReturnType<NonUndefined<NewDefinitions[K]['transformResponse']>>\r\n      >\r\n  : ResultType\r\n\r\nexport type OverrideResultType<Definition, NewResultType> =\r\n  Definition extends QueryDefinition<\r\n    infer QueryArg,\r\n    infer BaseQuery,\r\n    infer TagTypes,\r\n    any,\r\n    infer ReducerPath\r\n  >\r\n    ? QueryDefinition<QueryArg, BaseQuery, TagTypes, NewResultType, ReducerPath>\r\n    : Definition extends MutationDefinition<\r\n        infer QueryArg,\r\n        infer BaseQuery,\r\n        infer TagTypes,\r\n        any,\r\n        infer ReducerPath\r\n      >\r\n    ? MutationDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        TagTypes,\r\n        NewResultType,\r\n        ReducerPath\r\n      >\r\n    : never\r\n\r\nexport type UpdateDefinitions<\r\n  Definitions extends EndpointDefinitions,\r\n  NewTagTypes extends string,\r\n  NewDefinitions extends EndpointDefinitions\r\n> = {\r\n  [K in keyof Definitions]: Definitions[K] extends QueryDefinition<\r\n    infer QueryArg,\r\n    infer BaseQuery,\r\n    any,\r\n    infer ResultType,\r\n    infer ReducerPath\r\n  >\r\n    ? QueryDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        NewTagTypes,\r\n        TransformedResponse<NewDefinitions, K, ResultType>,\r\n        ReducerPath\r\n      >\r\n    : Definitions[K] extends MutationDefinition<\r\n        infer QueryArg,\r\n        infer BaseQuery,\r\n        any,\r\n        infer ResultType,\r\n        infer ReducerPath\r\n      >\r\n    ? MutationDefinition<\r\n        QueryArg,\r\n        BaseQuery,\r\n        NewTagTypes,\r\n        TransformedResponse<NewDefinitions, K, ResultType>,\r\n        ReducerPath\r\n      >\r\n    : never\r\n}\r\n", "export function capitalize(str: string) {\r\n  return str.replace(str[0], str[0].toUpperCase())\r\n}\r\n", "export type Id<T> = { [K in keyof T]: T[K] } & {}\r\nexport type WithRequiredProp<T, K extends keyof T> = Omit<T, K> &\r\n  Required<Pick<T, K>>\r\nexport type Override<T1, T2> = T2 extends any ? Omit<T1, keyof T2> & T2 : never\r\nexport function assertCast<T>(v: any): asserts v is T {}\r\n\r\nexport function safeAssign<T extends object>(\r\n  target: T,\r\n  ...args: Array<Partial<NoInfer<T>>>\r\n) {\r\n  Object.assign(target, ...args)\r\n}\r\n\r\n/**\r\n * Convert a Union type `(A|B)` to an intersection type `(A&B)`\r\n */\r\nexport type UnionToIntersection<U> = (\r\n  U extends any ? (k: U) => void : never\r\n) extends (k: infer I) => void\r\n  ? I\r\n  : never\r\n\r\nexport type NonOptionalKeys<T> = {\r\n  [K in keyof T]-?: undefined extends T[K] ? never : K\r\n}[keyof T]\r\n\r\nexport type HasRequiredProps<T, True, False> = NonOptionalKeys<T> extends never\r\n  ? False\r\n  : True\r\n\r\nexport type OptionalIfAllPropsOptional<T> = HasRequiredProps<T, T, T | never>\r\n\r\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\r\n\r\nexport type NonUndefined<T> = T extends undefined ? never : T\r\n\r\nexport type UnwrapPromise<T> = T extends PromiseLike<infer V> ? V : T\r\n\r\nexport type MaybePromise<T> = T | PromiseLike<T>\r\n\r\nexport type OmitFromUnion<T, K extends keyof T> = T extends any\r\n  ? Omit<T, K>\r\n  : never\r\n\r\nexport type IsAny<T, True, False = never> = true | false extends (\r\n  T extends never ? true : false\r\n)\r\n  ? True\r\n  : False\r\n\r\nexport type CastAny<T, CastTo> = IsAny<T, CastTo, T>\r\n", "import type { MutationHooks, QueryHooks } from './buildHooks'\r\nimport { buildHooks } from './buildHooks'\r\nimport { isQueryDefinition, isMutationDefinition } from '../endpointDefinitions'\r\nimport type {\r\n  EndpointDefinitions,\r\n  QueryDefinition,\r\n  MutationDefinition,\r\n  QueryArgFrom,\r\n} from '@reduxjs/toolkit/query'\r\nimport type { Api, Module } from '../apiTypes'\r\nimport { capitalize } from '../utils'\r\nimport { safeAssign } from '../tsHelpers'\r\nimport type { BaseQueryFn } from '@reduxjs/toolkit/query'\r\n\r\nimport type { HooksWithUniqueNames } from './namedHooks'\r\n\r\nimport {\r\n  useDispatch as rrUseDispatch,\r\n  useSelector as rrUseSelector,\r\n  useStore as rrUseStore,\r\n  batch as rrBatch,\r\n} from 'react-redux'\r\nimport type { QueryKeys } from '../core/apiState'\r\nimport type { PrefetchOptions } from '../core/module'\r\n\r\nexport const reactHooksModuleName = /* @__PURE__ */ Symbol()\r\nexport type ReactHooksModule = typeof reactHooksModuleName\r\n\r\ndeclare module '@reduxjs/toolkit/query' {\r\n  export interface ApiModules<\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    BaseQuery extends BaseQueryFn,\r\n    Definitions extends EndpointDefinitions,\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    ReducerPath extends string,\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    TagTypes extends string\r\n  > {\r\n    [reactHooksModuleName]: {\r\n      /**\r\n       *  Endpoints based on the input endpoints provided to `createApi`, containing `select`, `hooks` and `action matchers`.\r\n       */\r\n      endpoints: {\r\n        [K in keyof Definitions]: Definitions[K] extends QueryDefinition<\r\n          any,\r\n          any,\r\n          any,\r\n          any,\r\n          any\r\n        >\r\n          ? QueryHooks<Definitions[K]>\r\n          : Definitions[K] extends MutationDefinition<any, any, any, any, any>\r\n          ? MutationHooks<Definitions[K]>\r\n          : never\r\n      }\r\n      /**\r\n       * A hook that accepts a string endpoint name, and provides a callback that when called, pre-fetches the data for that endpoint.\r\n       */\r\n      usePrefetch<EndpointName extends QueryKeys<Definitions>>(\r\n        endpointName: EndpointName,\r\n        options?: PrefetchOptions\r\n      ): (\r\n        arg: QueryArgFrom<Definitions[EndpointName]>,\r\n        options?: PrefetchOptions\r\n      ) => void\r\n    } & HooksWithUniqueNames<Definitions>\r\n  }\r\n}\r\n\r\ntype RR = typeof import('react-redux')\r\n\r\nexport interface ReactHooksModuleOptions {\r\n  /**\r\n   * The version of the `batchedUpdates` function to be used\r\n   */\r\n  batch?: RR['batch']\r\n  /**\r\n   * The version of the `useDispatch` hook to be used\r\n   */\r\n  useDispatch?: RR['useDispatch']\r\n  /**\r\n   * The version of the `useSelector` hook to be used\r\n   */\r\n  useSelector?: RR['useSelector']\r\n  /**\r\n   * The version of the `useStore` hook to be used\r\n   */\r\n  useStore?: RR['useStore']\r\n  /**\r\n   * Enables performing asynchronous tasks immediately within a render.\r\n   *\r\n   * @example\r\n   *\r\n   * ```ts\r\n   * import {\r\n   *   buildCreateApi,\r\n   *   coreModule,\r\n   *   reactHooksModule\r\n   * } from '@reduxjs/toolkit/query/react'\r\n   *\r\n   * const createApi = buildCreateApi(\r\n   *   coreModule(),\r\n   *   reactHooksModule({ unstable__sideEffectsInRender: true })\r\n   * )\r\n   * ```\r\n   */\r\n  unstable__sideEffectsInRender?: boolean\r\n}\r\n\r\n/**\r\n * Creates a module that generates react hooks from endpoints, for use with `buildCreateApi`.\r\n *\r\n *  @example\r\n * ```ts\r\n * const MyContext = React.createContext<ReactReduxContextValue>(null as any);\r\n * const customCreateApi = buildCreateApi(\r\n *   coreModule(),\r\n *   reactHooksModule({ useDispatch: createDispatchHook(MyContext) })\r\n * );\r\n * ```\r\n *\r\n * @returns A module for use with `buildCreateApi`\r\n */\r\nexport const reactHooksModule = ({\r\n  batch = rrBatch,\r\n  useDispatch = rrUseDispatch,\r\n  useSelector = rrUseSelector,\r\n  useStore = rrUseStore,\r\n  unstable__sideEffectsInRender = false,\r\n}: ReactHooksModuleOptions = {}): Module<ReactHooksModule> => ({\r\n  name: reactHooksModuleName,\r\n  init(api, { serializeQueryArgs }, context) {\r\n    const anyApi = api as any as Api<\r\n      any,\r\n      Record<string, any>,\r\n      string,\r\n      string,\r\n      ReactHooksModule\r\n    >\r\n    const { buildQueryHooks, buildMutationHook, usePrefetch } = buildHooks({\r\n      api,\r\n      moduleOptions: {\r\n        batch,\r\n        useDispatch,\r\n        useSelector,\r\n        useStore,\r\n        unstable__sideEffectsInRender,\r\n      },\r\n      serializeQueryArgs,\r\n      context,\r\n    })\r\n    safeAssign(anyApi, { usePrefetch })\r\n    safeAssign(context, { batch })\r\n\r\n    return {\r\n      injectEndpoint(endpointName, definition) {\r\n        if (isQueryDefinition(definition)) {\r\n          const {\r\n            useQuery,\r\n            useLazyQuery,\r\n            useLazyQuerySubscription,\r\n            useQueryState,\r\n            useQuerySubscription,\r\n          } = buildQueryHooks(endpointName)\r\n          safeAssign(anyApi.endpoints[endpointName], {\r\n            useQuery,\r\n            useLazyQuery,\r\n            useLazyQuerySubscription,\r\n            useQueryState,\r\n            useQuerySubscription,\r\n          })\r\n          ;(api as any)[`use${capitalize(endpointName)}Query`] = useQuery\r\n          ;(api as any)[`useLazy${capitalize(endpointName)}Query`] =\r\n            useLazyQuery\r\n        } else if (isMutationDefinition(definition)) {\r\n          const useMutation = buildMutationHook(endpointName)\r\n          safeAssign(anyApi.endpoints[endpointName], {\r\n            useMutation,\r\n          })\r\n          ;(api as any)[`use${capitalize(endpointName)}Mutation`] = useMutation\r\n        }\r\n      },\r\n    }\r\n  },\r\n})\r\n", "import { configureStore } from '@reduxjs/toolkit'\r\nimport type { Context } from 'react'\r\nimport { useEffect } from 'react'\r\nimport React from 'react'\r\nimport type { ReactReduxContextValue } from 'react-redux'\r\nimport { Provider } from 'react-redux'\r\nimport { setupListeners } from '@reduxjs/toolkit/query'\r\nimport type { Api } from '@reduxjs/toolkit/query'\r\n\r\n/**\r\n * Can be used as a `Provider` if you **do not already have a Redux store**.\r\n *\r\n * @example\r\n * ```tsx\r\n * // codeblock-meta no-transpile title=\"Basic usage - wrap your App with ApiProvider\"\r\n * import * as React from 'react';\r\n * import { ApiProvider } from '@reduxjs/toolkit/query/react';\r\n * import { Pokemon } from './features/Pokemon';\r\n *\r\n * function App() {\r\n *   return (\r\n *     <ApiProvider api={api}>\r\n *       <Pokemon />\r\n *     </ApiProvider>\r\n *   );\r\n * }\r\n * ```\r\n *\r\n * @remarks\r\n * Using this together with an existing redux store, both will\r\n * conflict with each other - please use the traditional redux setup\r\n * in that case.\r\n */\r\nexport function ApiProvider<A extends Api<any, {}, any, any>>(props: {\r\n  children: any\r\n  api: A\r\n  setupListeners?: Parameters<typeof setupListeners>[1] | false\r\n  context?: Context<ReactReduxContextValue>\r\n}) {\r\n  const [store] = React.useState(() =>\r\n    configureStore({\r\n      reducer: {\r\n        [props.api.reducerPath]: props.api.reducer,\r\n      },\r\n      middleware: (gDM) => gDM().concat(props.api.middleware),\r\n    })\r\n  )\r\n  // Adds the event listeners for online/offline/focus/etc\r\n  useEffect(\r\n    (): undefined | (() => void) =>\r\n      props.setupListeners === false\r\n        ? undefined\r\n        : setupListeners(store.dispatch, props.setupListeners),\r\n    [props.setupListeners, store.dispatch]\r\n  )\r\n\r\n  return (\r\n    <Provider store={store} context={props.context}>\r\n      {props.children}\r\n    </Provider>\r\n  )\r\n}\r\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nvar __defProp = Object.defineProperty;\r\nvar __defProps = Object.defineProperties;\r\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\r\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp = function (obj, key, value) { return key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value: value }) : obj[key] = value; };\r\nvar __spreadValues = function (a, b) {\r\n    for (var prop in b || (b = {}))\r\n        if (__hasOwnProp.call(b, prop))\r\n            __defNormalProp(a, prop, b[prop]);\r\n    if (__getOwnPropSymbols)\r\n        for (var _i = 0, _c = __getOwnPropSymbols(b); _i < _c.length; _i++) {\r\n            var prop = _c[_i];\r\n            if (__propIsEnum.call(b, prop))\r\n                __defNormalProp(a, prop, b[prop]);\r\n        }\r\n    return a;\r\n};\r\nvar __spreadProps = function (a, b) { return __defProps(a, __getOwnPropDescs(b)); };\r\n// src/query/react/index.ts\r\nimport { coreModule, buildCreateApi } from \"@reduxjs/toolkit/query\";\r\n// src/query/react/buildHooks.ts\r\nimport { createSelector } from \"@reduxjs/toolkit\";\r\nimport { useCallback, useDebugValue, useEffect as useEffect3, useLayoutEffect, useMemo as useMemo2, useRef as useRef3, useState } from \"react\";\r\nimport { QueryStatus, skipToken } from \"@reduxjs/toolkit/query\";\r\nimport { shallowEqual as shallowEqual2 } from \"react-redux\";\r\n// src/query/react/useSerializedStableValue.ts\r\nimport { useEffect, useRef, useMemo } from \"react\";\r\nfunction useStableQueryArgs(queryArgs, serialize, endpointDefinition, endpointName) {\r\n    var incoming = useMemo(function () { return ({\r\n        queryArgs: queryArgs,\r\n        serialized: typeof queryArgs == \"object\" ? serialize({ queryArgs: queryArgs, endpointDefinition: endpointDefinition, endpointName: endpointName }) : queryArgs\r\n    }); }, [queryArgs, serialize, endpointDefinition, endpointName]);\r\n    var cache2 = useRef(incoming);\r\n    useEffect(function () {\r\n        if (cache2.current.serialized !== incoming.serialized) {\r\n            cache2.current = incoming;\r\n        }\r\n    }, [incoming]);\r\n    return cache2.current.serialized === incoming.serialized ? cache2.current.queryArgs : queryArgs;\r\n}\r\n// src/query/react/constants.ts\r\nvar UNINITIALIZED_VALUE = Symbol();\r\n// src/query/react/useShallowStableValue.ts\r\nimport { useEffect as useEffect2, useRef as useRef2 } from \"react\";\r\nimport { shallowEqual } from \"react-redux\";\r\nfunction useShallowStableValue(value) {\r\n    var cache2 = useRef2(value);\r\n    useEffect2(function () {\r\n        if (!shallowEqual(cache2.current, value)) {\r\n            cache2.current = value;\r\n        }\r\n    }, [value]);\r\n    return shallowEqual(cache2.current, value) ? cache2.current : value;\r\n}\r\n// src/query/defaultSerializeQueryArgs.ts\r\nimport { isPlainObject } from \"@reduxjs/toolkit\";\r\nvar cache = WeakMap ? new WeakMap() : void 0;\r\nvar defaultSerializeQueryArgs = function (_c) {\r\n    var endpointName = _c.endpointName, queryArgs = _c.queryArgs;\r\n    var serialized = \"\";\r\n    var cached = cache == null ? void 0 : cache.get(queryArgs);\r\n    if (typeof cached === \"string\") {\r\n        serialized = cached;\r\n    }\r\n    else {\r\n        var stringified = JSON.stringify(queryArgs, function (key, value) { return isPlainObject(value) ? Object.keys(value).sort().reduce(function (acc, key2) {\r\n            acc[key2] = value[key2];\r\n            return acc;\r\n        }, {}) : value; });\r\n        if (isPlainObject(queryArgs)) {\r\n            cache == null ? void 0 : cache.set(queryArgs, stringified);\r\n        }\r\n        serialized = stringified;\r\n    }\r\n    return endpointName + \"(\" + serialized + \")\";\r\n};\r\n// src/query/react/buildHooks.ts\r\nvar useIsomorphicLayoutEffect = typeof window !== \"undefined\" && !!window.document && !!window.document.createElement ? useLayoutEffect : useEffect3;\r\nvar defaultMutationStateSelector = function (x) { return x; };\r\nvar noPendingQueryStateSelector = function (selected) {\r\n    if (selected.isUninitialized) {\r\n        return __spreadProps(__spreadValues({}, selected), {\r\n            isUninitialized: false,\r\n            isFetching: true,\r\n            isLoading: selected.data !== void 0 ? false : true,\r\n            status: QueryStatus.pending\r\n        });\r\n    }\r\n    return selected;\r\n};\r\nfunction buildHooks(_c) {\r\n    var api = _c.api, _d = _c.moduleOptions, batch = _d.batch, useDispatch = _d.useDispatch, useSelector = _d.useSelector, useStore = _d.useStore, unstable__sideEffectsInRender = _d.unstable__sideEffectsInRender, serializeQueryArgs = _c.serializeQueryArgs, context = _c.context;\r\n    var usePossiblyImmediateEffect = unstable__sideEffectsInRender ? function (cb) { return cb(); } : useEffect3;\r\n    return { buildQueryHooks: buildQueryHooks, buildMutationHook: buildMutationHook, usePrefetch: usePrefetch };\r\n    function queryStatePreSelector(currentState, lastResult, queryArgs) {\r\n        if ((lastResult == null ? void 0 : lastResult.endpointName) && currentState.isUninitialized) {\r\n            var endpointName = lastResult.endpointName;\r\n            var endpointDefinition = context.endpointDefinitions[endpointName];\r\n            if (serializeQueryArgs({\r\n                queryArgs: lastResult.originalArgs,\r\n                endpointDefinition: endpointDefinition,\r\n                endpointName: endpointName\r\n            }) === serializeQueryArgs({\r\n                queryArgs: queryArgs,\r\n                endpointDefinition: endpointDefinition,\r\n                endpointName: endpointName\r\n            }))\r\n                lastResult = void 0;\r\n        }\r\n        var data = currentState.isSuccess ? currentState.data : lastResult == null ? void 0 : lastResult.data;\r\n        if (data === void 0)\r\n            data = currentState.data;\r\n        var hasData = data !== void 0;\r\n        var isFetching = currentState.isLoading;\r\n        var isLoading = !hasData && isFetching;\r\n        var isSuccess = currentState.isSuccess || isFetching && hasData;\r\n        return __spreadProps(__spreadValues({}, currentState), {\r\n            data: data,\r\n            currentData: currentState.data,\r\n            isFetching: isFetching,\r\n            isLoading: isLoading,\r\n            isSuccess: isSuccess\r\n        });\r\n    }\r\n    function usePrefetch(endpointName, defaultOptions) {\r\n        var dispatch = useDispatch();\r\n        var stableDefaultOptions = useShallowStableValue(defaultOptions);\r\n        return useCallback(function (arg, options) { return dispatch(api.util.prefetch(endpointName, arg, __spreadValues(__spreadValues({}, stableDefaultOptions), options))); }, [endpointName, dispatch, stableDefaultOptions]);\r\n    }\r\n    function buildQueryHooks(name) {\r\n        var useQuerySubscription = function (arg, _c) {\r\n            var _d = _c === void 0 ? {} : _c, refetchOnReconnect = _d.refetchOnReconnect, refetchOnFocus = _d.refetchOnFocus, refetchOnMountOrArgChange = _d.refetchOnMountOrArgChange, _e = _d.skip, skip = _e === void 0 ? false : _e, _f = _d.pollingInterval, pollingInterval = _f === void 0 ? 0 : _f;\r\n            var initiate = api.endpoints[name].initiate;\r\n            var dispatch = useDispatch();\r\n            var stableArg = useStableQueryArgs(skip ? skipToken : arg, defaultSerializeQueryArgs, context.endpointDefinitions[name], name);\r\n            var stableSubscriptionOptions = useShallowStableValue({\r\n                refetchOnReconnect: refetchOnReconnect,\r\n                refetchOnFocus: refetchOnFocus,\r\n                pollingInterval: pollingInterval\r\n            });\r\n            var lastRenderHadSubscription = useRef3(false);\r\n            var promiseRef = useRef3();\r\n            var _g = promiseRef.current || {}, queryCacheKey = _g.queryCacheKey, requestId = _g.requestId;\r\n            var currentRenderHasSubscription = false;\r\n            if (queryCacheKey && requestId) {\r\n                var returnedValue = dispatch(api.internalActions.internal_probeSubscription({\r\n                    queryCacheKey: queryCacheKey,\r\n                    requestId: requestId\r\n                }));\r\n                if (process.env.NODE_ENV !== \"production\") {\r\n                    if (typeof returnedValue !== \"boolean\") {\r\n                        throw new Error(\"Warning: Middleware for RTK-Query API at reducerPath \\\"\" + api.reducerPath + \"\\\" has not been added to the store.\\n    You must add the middleware for RTK-Query to function correctly!\");\r\n                    }\r\n                }\r\n                currentRenderHasSubscription = !!returnedValue;\r\n            }\r\n            var subscriptionRemoved = !currentRenderHasSubscription && lastRenderHadSubscription.current;\r\n            usePossiblyImmediateEffect(function () {\r\n                lastRenderHadSubscription.current = currentRenderHasSubscription;\r\n            });\r\n            usePossiblyImmediateEffect(function () {\r\n                if (subscriptionRemoved) {\r\n                    promiseRef.current = void 0;\r\n                }\r\n            }, [subscriptionRemoved]);\r\n            usePossiblyImmediateEffect(function () {\r\n                var _a;\r\n                var lastPromise = promiseRef.current;\r\n                if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"removeMeOnCompilation\") {\r\n                    console.log(subscriptionRemoved);\r\n                }\r\n                if (stableArg === skipToken) {\r\n                    lastPromise == null ? void 0 : lastPromise.unsubscribe();\r\n                    promiseRef.current = void 0;\r\n                    return;\r\n                }\r\n                var lastSubscriptionOptions = (_a = promiseRef.current) == null ? void 0 : _a.subscriptionOptions;\r\n                if (!lastPromise || lastPromise.arg !== stableArg) {\r\n                    lastPromise == null ? void 0 : lastPromise.unsubscribe();\r\n                    var promise = dispatch(initiate(stableArg, {\r\n                        subscriptionOptions: stableSubscriptionOptions,\r\n                        forceRefetch: refetchOnMountOrArgChange\r\n                    }));\r\n                    promiseRef.current = promise;\r\n                }\r\n                else if (stableSubscriptionOptions !== lastSubscriptionOptions) {\r\n                    lastPromise.updateSubscriptionOptions(stableSubscriptionOptions);\r\n                }\r\n            }, [\r\n                dispatch,\r\n                initiate,\r\n                refetchOnMountOrArgChange,\r\n                stableArg,\r\n                stableSubscriptionOptions,\r\n                subscriptionRemoved\r\n            ]);\r\n            useEffect3(function () {\r\n                return function () {\r\n                    var _a;\r\n                    (_a = promiseRef.current) == null ? void 0 : _a.unsubscribe();\r\n                    promiseRef.current = void 0;\r\n                };\r\n            }, []);\r\n            return useMemo2(function () { return ({\r\n                refetch: function () {\r\n                    var _a;\r\n                    if (!promiseRef.current)\r\n                        throw new Error(\"Cannot refetch a query that has not been started yet.\");\r\n                    return (_a = promiseRef.current) == null ? void 0 : _a.refetch();\r\n                }\r\n            }); }, []);\r\n        };\r\n        var useLazyQuerySubscription = function (_c) {\r\n            var _d = _c === void 0 ? {} : _c, refetchOnReconnect = _d.refetchOnReconnect, refetchOnFocus = _d.refetchOnFocus, _e = _d.pollingInterval, pollingInterval = _e === void 0 ? 0 : _e;\r\n            var initiate = api.endpoints[name].initiate;\r\n            var dispatch = useDispatch();\r\n            var _f = useState(UNINITIALIZED_VALUE), arg = _f[0], setArg = _f[1];\r\n            var promiseRef = useRef3();\r\n            var stableSubscriptionOptions = useShallowStableValue({\r\n                refetchOnReconnect: refetchOnReconnect,\r\n                refetchOnFocus: refetchOnFocus,\r\n                pollingInterval: pollingInterval\r\n            });\r\n            usePossiblyImmediateEffect(function () {\r\n                var _a, _b;\r\n                var lastSubscriptionOptions = (_a = promiseRef.current) == null ? void 0 : _a.subscriptionOptions;\r\n                if (stableSubscriptionOptions !== lastSubscriptionOptions) {\r\n                    (_b = promiseRef.current) == null ? void 0 : _b.updateSubscriptionOptions(stableSubscriptionOptions);\r\n                }\r\n            }, [stableSubscriptionOptions]);\r\n            var subscriptionOptionsRef = useRef3(stableSubscriptionOptions);\r\n            usePossiblyImmediateEffect(function () {\r\n                subscriptionOptionsRef.current = stableSubscriptionOptions;\r\n            }, [stableSubscriptionOptions]);\r\n            var trigger = useCallback(function (arg2, preferCacheValue) {\r\n                if (preferCacheValue === void 0) { preferCacheValue = false; }\r\n                var promise;\r\n                batch(function () {\r\n                    var _a;\r\n                    (_a = promiseRef.current) == null ? void 0 : _a.unsubscribe();\r\n                    promiseRef.current = promise = dispatch(initiate(arg2, {\r\n                        subscriptionOptions: subscriptionOptionsRef.current,\r\n                        forceRefetch: !preferCacheValue\r\n                    }));\r\n                    setArg(arg2);\r\n                });\r\n                return promise;\r\n            }, [dispatch, initiate]);\r\n            useEffect3(function () {\r\n                return function () {\r\n                    var _a;\r\n                    (_a = promiseRef == null ? void 0 : promiseRef.current) == null ? void 0 : _a.unsubscribe();\r\n                };\r\n            }, []);\r\n            useEffect3(function () {\r\n                if (arg !== UNINITIALIZED_VALUE && !promiseRef.current) {\r\n                    trigger(arg, true);\r\n                }\r\n            }, [arg, trigger]);\r\n            return useMemo2(function () { return [trigger, arg]; }, [trigger, arg]);\r\n        };\r\n        var useQueryState = function (arg, _c) {\r\n            var _d = _c === void 0 ? {} : _c, _e = _d.skip, skip = _e === void 0 ? false : _e, selectFromResult = _d.selectFromResult;\r\n            var select = api.endpoints[name].select;\r\n            var stableArg = useStableQueryArgs(skip ? skipToken : arg, serializeQueryArgs, context.endpointDefinitions[name], name);\r\n            var lastValue = useRef3();\r\n            var selectDefaultResult = useMemo2(function () { return createSelector([\r\n                select(stableArg),\r\n                function (_, lastResult) { return lastResult; },\r\n                function (_) { return stableArg; }\r\n            ], queryStatePreSelector); }, [select, stableArg]);\r\n            var querySelector = useMemo2(function () { return selectFromResult ? createSelector([selectDefaultResult], selectFromResult) : selectDefaultResult; }, [selectDefaultResult, selectFromResult]);\r\n            var currentState = useSelector(function (state) { return querySelector(state, lastValue.current); }, shallowEqual2);\r\n            var store = useStore();\r\n            var newLastValue = selectDefaultResult(store.getState(), lastValue.current);\r\n            useIsomorphicLayoutEffect(function () {\r\n                lastValue.current = newLastValue;\r\n            }, [newLastValue]);\r\n            return currentState;\r\n        };\r\n        return {\r\n            useQueryState: useQueryState,\r\n            useQuerySubscription: useQuerySubscription,\r\n            useLazyQuerySubscription: useLazyQuerySubscription,\r\n            useLazyQuery: function (options) {\r\n                var _c = useLazyQuerySubscription(options), trigger = _c[0], arg = _c[1];\r\n                var queryStateResults = useQueryState(arg, __spreadProps(__spreadValues({}, options), {\r\n                    skip: arg === UNINITIALIZED_VALUE\r\n                }));\r\n                var info = useMemo2(function () { return ({ lastArg: arg }); }, [arg]);\r\n                return useMemo2(function () { return [trigger, queryStateResults, info]; }, [trigger, queryStateResults, info]);\r\n            },\r\n            useQuery: function (arg, options) {\r\n                var querySubscriptionResults = useQuerySubscription(arg, options);\r\n                var queryStateResults = useQueryState(arg, __spreadValues({\r\n                    selectFromResult: arg === skipToken || (options == null ? void 0 : options.skip) ? void 0 : noPendingQueryStateSelector\r\n                }, options));\r\n                var data = queryStateResults.data, status = queryStateResults.status, isLoading = queryStateResults.isLoading, isSuccess = queryStateResults.isSuccess, isError = queryStateResults.isError, error = queryStateResults.error;\r\n                useDebugValue({ data: data, status: status, isLoading: isLoading, isSuccess: isSuccess, isError: isError, error: error });\r\n                return useMemo2(function () { return __spreadValues(__spreadValues({}, queryStateResults), querySubscriptionResults); }, [queryStateResults, querySubscriptionResults]);\r\n            }\r\n        };\r\n    }\r\n    function buildMutationHook(name) {\r\n        return function (_c) {\r\n            var _d = _c === void 0 ? {} : _c, _e = _d.selectFromResult, selectFromResult = _e === void 0 ? defaultMutationStateSelector : _e, fixedCacheKey = _d.fixedCacheKey;\r\n            var _f = api.endpoints[name], select = _f.select, initiate = _f.initiate;\r\n            var dispatch = useDispatch();\r\n            var _g = useState(), promise = _g[0], setPromise = _g[1];\r\n            useEffect3(function () { return function () {\r\n                if (!(promise == null ? void 0 : promise.arg.fixedCacheKey)) {\r\n                    promise == null ? void 0 : promise.reset();\r\n                }\r\n            }; }, [promise]);\r\n            var triggerMutation = useCallback(function (arg) {\r\n                var promise2 = dispatch(initiate(arg, { fixedCacheKey: fixedCacheKey }));\r\n                setPromise(promise2);\r\n                return promise2;\r\n            }, [dispatch, initiate, fixedCacheKey]);\r\n            var requestId = (promise || {}).requestId;\r\n            var mutationSelector = useMemo2(function () { return createSelector([select({ fixedCacheKey: fixedCacheKey, requestId: promise == null ? void 0 : promise.requestId })], selectFromResult); }, [select, promise, selectFromResult, fixedCacheKey]);\r\n            var currentState = useSelector(mutationSelector, shallowEqual2);\r\n            var originalArgs = fixedCacheKey == null ? promise == null ? void 0 : promise.arg.originalArgs : void 0;\r\n            var reset = useCallback(function () {\r\n                batch(function () {\r\n                    if (promise) {\r\n                        setPromise(void 0);\r\n                    }\r\n                    if (fixedCacheKey) {\r\n                        dispatch(api.internalActions.removeMutationResult({\r\n                            requestId: requestId,\r\n                            fixedCacheKey: fixedCacheKey\r\n                        }));\r\n                    }\r\n                });\r\n            }, [dispatch, fixedCacheKey, promise, requestId]);\r\n            var endpointName = currentState.endpointName, data = currentState.data, status = currentState.status, isLoading = currentState.isLoading, isSuccess = currentState.isSuccess, isError = currentState.isError, error = currentState.error;\r\n            useDebugValue({\r\n                endpointName: endpointName,\r\n                data: data,\r\n                status: status,\r\n                isLoading: isLoading,\r\n                isSuccess: isSuccess,\r\n                isError: isError,\r\n                error: error\r\n            });\r\n            var finalState = useMemo2(function () { return __spreadProps(__spreadValues({}, currentState), { originalArgs: originalArgs, reset: reset }); }, [currentState, originalArgs, reset]);\r\n            return useMemo2(function () { return [triggerMutation, finalState]; }, [triggerMutation, finalState]);\r\n        };\r\n    }\r\n}\r\n// src/query/endpointDefinitions.ts\r\nvar DefinitionType;\r\n(function (DefinitionType2) {\r\n    DefinitionType2[\"query\"] = \"query\";\r\n    DefinitionType2[\"mutation\"] = \"mutation\";\r\n})(DefinitionType || (DefinitionType = {}));\r\nfunction isQueryDefinition(e) {\r\n    return e.type === DefinitionType.query;\r\n}\r\nfunction isMutationDefinition(e) {\r\n    return e.type === DefinitionType.mutation;\r\n}\r\n// src/query/utils/capitalize.ts\r\nfunction capitalize(str) {\r\n    return str.replace(str[0], str[0].toUpperCase());\r\n}\r\n// src/query/tsHelpers.ts\r\nfunction safeAssign(target) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    Object.assign.apply(Object, __spreadArray([target], args));\r\n}\r\n// src/query/react/module.ts\r\nimport { useDispatch as rrUseDispatch, useSelector as rrUseSelector, useStore as rrUseStore, batch as rrBatch } from \"react-redux\";\r\nvar reactHooksModuleName = /* @__PURE__ */ Symbol();\r\nvar reactHooksModule = function (_c) {\r\n    var _d = _c === void 0 ? {} : _c, _e = _d.batch, batch = _e === void 0 ? rrBatch : _e, _f = _d.useDispatch, useDispatch = _f === void 0 ? rrUseDispatch : _f, _g = _d.useSelector, useSelector = _g === void 0 ? rrUseSelector : _g, _h = _d.useStore, useStore = _h === void 0 ? rrUseStore : _h, _j = _d.unstable__sideEffectsInRender, unstable__sideEffectsInRender = _j === void 0 ? false : _j;\r\n    return ({\r\n        name: reactHooksModuleName,\r\n        init: function (api, _c, context) {\r\n            var serializeQueryArgs = _c.serializeQueryArgs;\r\n            var anyApi = api;\r\n            var _d = buildHooks({\r\n                api: api,\r\n                moduleOptions: {\r\n                    batch: batch,\r\n                    useDispatch: useDispatch,\r\n                    useSelector: useSelector,\r\n                    useStore: useStore,\r\n                    unstable__sideEffectsInRender: unstable__sideEffectsInRender\r\n                },\r\n                serializeQueryArgs: serializeQueryArgs,\r\n                context: context\r\n            }), buildQueryHooks = _d.buildQueryHooks, buildMutationHook = _d.buildMutationHook, usePrefetch = _d.usePrefetch;\r\n            safeAssign(anyApi, { usePrefetch: usePrefetch });\r\n            safeAssign(context, { batch: batch });\r\n            return {\r\n                injectEndpoint: function (endpointName, definition) {\r\n                    if (isQueryDefinition(definition)) {\r\n                        var _c = buildQueryHooks(endpointName), useQuery = _c.useQuery, useLazyQuery = _c.useLazyQuery, useLazyQuerySubscription = _c.useLazyQuerySubscription, useQueryState = _c.useQueryState, useQuerySubscription = _c.useQuerySubscription;\r\n                        safeAssign(anyApi.endpoints[endpointName], {\r\n                            useQuery: useQuery,\r\n                            useLazyQuery: useLazyQuery,\r\n                            useLazyQuerySubscription: useLazyQuerySubscription,\r\n                            useQueryState: useQueryState,\r\n                            useQuerySubscription: useQuerySubscription\r\n                        });\r\n                        api[\"use\" + capitalize(endpointName) + \"Query\"] = useQuery;\r\n                        api[\"useLazy\" + capitalize(endpointName) + \"Query\"] = useLazyQuery;\r\n                    }\r\n                    else if (isMutationDefinition(definition)) {\r\n                        var useMutation = buildMutationHook(endpointName);\r\n                        safeAssign(anyApi.endpoints[endpointName], {\r\n                            useMutation: useMutation\r\n                        });\r\n                        api[\"use\" + capitalize(endpointName) + \"Mutation\"] = useMutation;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    });\r\n};\r\n// src/query/react/index.ts\r\nexport * from \"@reduxjs/toolkit/query\";\r\n// src/query/react/ApiProvider.tsx\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { useEffect as useEffect4 } from \"react\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nfunction ApiProvider(props) {\r\n    var store = React.useState(function () {\r\n        var _c;\r\n        return configureStore({\r\n            reducer: (_c = {},\r\n                _c[props.api.reducerPath] = props.api.reducer,\r\n                _c),\r\n            middleware: function (gDM) { return gDM().concat(props.api.middleware); }\r\n        });\r\n    })[0];\r\n    useEffect4(function () { return props.setupListeners === false ? void 0 : setupListeners(store.dispatch, props.setupListeners); }, [props.setupListeners, store.dispatch]);\r\n    return /* @__PURE__ */ React.createElement(Provider, {\r\n        store: store,\r\n        context: props.context\r\n    }, props.children);\r\n}\r\n// src/query/react/index.ts\r\nvar createApi = /* @__PURE__ */ buildCreateApi(coreModule(), reactHooksModule());\r\nexport { ApiProvider, createApi, reactHooksModule, reactHooksModuleName };\r\n//# sourceMappingURL=rtk-query-react.esm.js.map", "import { createApi } from '@reduxjs/toolkit/query/react';\n\nimport { fetchBaseQuery } from '../utils/baseQuery';\n\n/**\n * @public\n * @description This is the redux toolkit api for the admin panel, users\n * should use a combination of `enhanceEndpoints` to add their TagTypes\n * to utilise in their `injectEndpoints` construction for automatic cache\n * re-validation. We specifically do not store any tagTypes by default leaving\n * the API surface as small as possible. None of the data-fetching looks for the\n * StrapiApp are stored here either.\n */\nconst adminApi = createApi({\n  reducerPath: 'adminApi',\n  baseQuery: fetchBaseQuery(),\n  tagTypes: ['GuidedTourMeta', 'HomepageKeyStatistics'],\n  endpoints: () => ({}),\n});\n\nexport { adminApi };\n"],
  "mappings": "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",
  "names": ["isPlainObject", "e", "isNaN", "e", "e", "concatty", "slicy", "Empty", "e", "undefined", "e", "doEval", "stringToPath", "getBaseIntrinsic", "compactQueue", "arrayToObject", "merge", "e", "encode", "compact", "isRegExp", "isBuffer", "combine", "maybeMap", "isNonNullishPrimitive", "stringify", "value", "normalizeStringifyOptions", "normalizeParseOptions", "isFunction", "func", "pairs", "rearg", "name", "options", "WeakMap", "isPlainObject", "isPlainObject", "require_get", "Symbol", "flatten", "flatten", "require_util", "index", "require_flow", "getCookieValue", "name", "result", "cookieArray", "document", "cookie", "split", "forEach", "key", "value", "map", "item", "trim", "decodeURIComponent", "setCookie", "days", "expires", "encodeURIComponent", "deleteCookie", "STORAGE_KEYS", "TOKEN", "STATUS", "THEME_LOCAL_STORAGE_KEY", "LANGUAGE_LOCAL_STORAGE_KEY", "getStoredToken", "fromLocalStorage", "localStorage", "getItem", "JSON", "parse", "fromCookie", "getCookieValue", "adminSlice", "createSlice", "name", "initialState", "language", "locale", "localeNames", "en", "permissions", "theme", "availableThemes", "currentTheme", "token", "reducers", "setAppTheme", "state", "action", "payload", "window", "setItem", "setAvailableThemes", "setLocale", "document", "documentElement", "setAttribute", "setToken", "login", "persist", "setCookie", "stringify", "logout", "deleteCookie", "removeItem", "reducer", "actions", "STORAGE_KEYS", "TOKEN", "USER", "FetchError", "Error", "constructor", "message", "response", "name", "code", "data", "error", "status", "captureStackTrace", "isFetchError", "getToken", "fromLocalStorage", "localStorage", "getItem", "JSON", "parse", "fromCookie", "getCookieValue", "getFetchClient", "defaultOptions", "backendURL", "window", "strapi", "defaultHeader", "Accept", "Authorization", "isFormDataRequest", "body", "FormData", "addPrependingSlash", "url", "charAt", "hasProtocol", "RegExp", "test", "normalizeUrl", "responseInterceptor", "validateStatus", "result", "json", "ok", "SyntaxError", "paramsSerializer", "params", "serializedParams", "qs", "stringify", "encode", "addBaseUrl", "makeCreateRequestUrl", "options", "pipe", "fetchClient", "get", "headers", "Headers", "createRequestUrl", "fetch", "signal", "method", "post", "delete", "put", "del", "refreshPromise", "isAuthPath", "url", "test", "simpleQuery", "query", "api", "signal", "dispatch", "executeQuery", "queryToExecute", "get", "post", "del", "put", "getFetchClient", "result", "method", "data", "config", "err", "isFetchError", "status", "refreshAccessToken", "res", "token", "Error", "persist", "Boolean", "localStorage", "getItem", "loginAction", "finally", "retry", "refreshError", "logoutAction", "response", "undefined", "error", "name", "message", "details", "stack", "fetchBaseQuery", "isBaseQueryError", "isPlainObject", "HandledError", "e", "_j", "DefinitionType2", "e", "t", "_j", "_k", "reducer", "_j", "_j", "_k", "e", "reducer", "import_react", "import_react", "cache2", "useRef2", "useEffect2", "cache", "defaultSerializeQueryArgs", "useEffect3", "__spreadProps", "__spreadValues", "useDispatch", "useSelector", "useStore", "_c", "_d", "useRef3", "promise", "useMemo2", "promise2", "DefinitionType", "DefinitionType2", "isQueryDefinition", "e", "isMutationDefinition", "safeAssign", "__spreadArray", "createApi", "adminApi", "createApi", "reducerPath", "baseQuery", "fetchBaseQuery", "tagTypes", "endpoints"]
}
