{
  "version": 3,
  "sources": ["../../../@strapi/review-workflows/admin/src/utils/users.ts", "../../../@strapi/review-workflows/admin/src/routes/content-manager/model/components/TableColumns.tsx"],
  "sourcesContent": ["import type { SanitizedAdminUser } from '@strapi/admin/strapi-admin';\n\n/**\n * Retrieves the display name of an admin panel user\n */\nconst getDisplayName = ({\n  firstname,\n  lastname,\n  username,\n  email,\n}: Partial<\n  Pick<SanitizedAdminUser, 'firstname' | 'lastname' | 'username' | 'email'>\n> = {}): string => {\n  if (username) {\n    return username;\n  }\n\n  // firstname is not required if the user is created with a username\n  if (firstname) {\n    return `${firstname} ${lastname ?? ''}`.trim();\n  }\n\n  return email ?? '';\n};\n\nexport { getDisplayName };\n", "import { SanitizedAdminUser } from '@strapi/admin/strapi-admin';\nimport { Box, Flex, Typography } from '@strapi/design-system';\n\nimport { STAGE_COLOR_DEFAULT } from '../../../../constants';\nimport { getStageColorByHex } from '../../../../utils/colors';\nimport { getDisplayName } from '../../../../utils/users';\n\ninterface StageColumnProps {\n  documentId?: string;\n  id?: number;\n  strapi_stage?: {\n    color?: string;\n    name: string;\n  };\n}\n\nconst StageColumn = (props: StageColumnProps) => {\n  const { color = STAGE_COLOR_DEFAULT, name } = props.strapi_stage ?? {};\n  const { themeColorName } = getStageColorByHex(color) ?? {};\n\n  return (\n    <Flex alignItems=\"center\" gap={2} maxWidth=\"30rem\">\n      <Box\n        height={2}\n        background={color}\n        borderColor={themeColorName === 'neutral0' ? 'neutral150' : undefined}\n        hasRadius\n        shrink={0}\n        width={2}\n      />\n\n      <Typography fontWeight=\"regular\" textColor=\"neutral700\" ellipsis>\n        {name}\n      </Typography>\n    </Flex>\n  );\n};\n\ninterface AssigneeColumnProps {\n  documentId?: string;\n  id?: number;\n  strapi_assignee?: Pick<\n    SanitizedAdminUser,\n    'firstname' | 'lastname' | 'username' | 'email'\n  > | null;\n}\n\nconst AssigneeColumn = (props: AssigneeColumnProps) => {\n  const { strapi_assignee: user } = props;\n  return <Typography textColor=\"neutral800\">{user ? getDisplayName(user) : '-'}</Typography>;\n};\n\nexport { StageColumn, AssigneeColumn };\nexport type { StageColumnProps, AssigneeColumnProps };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAKMA,IAAAA,iBAAiB,CAAC,EACtBC,WACAC,UACAC,UACAC,MAAK,IAGH,CAAA,MAAE;AACJ,MAAID,UAAU;AACZ,WAAOA;EACT;AAGA,MAAIF,WAAW;AACb,WAAO,GAAGA,SAAU,IAAGC,YAAY,EAAA,GAAKG,KAAI;EAC9C;AAEA,SAAOD,SAAS;AAClB;;;ACPA,IAAME,cAAc,CAACC,UAAAA;AACnB,QAAM,EAAEC,QAAQC,qBAAqBC,KAAI,IAAKH,MAAMI,gBAAgB,CAAA;AACpE,QAAM,EAAEC,eAAc,IAAKC,mBAAmBL,KAAAA,KAAU,CAAA;AAExD,aACEM,yBAACC,MAAAA;IAAKC,YAAW;IAASC,KAAK;IAAGC,UAAS;;UACzCC,wBAACC,KAAAA;QACCC,QAAQ;QACRC,YAAYd;QACZe,aAAaX,mBAAmB,aAAa,eAAeY;QAC5DC,WAAS;QACTC,QAAQ;QACRC,OAAO;;UAGTR,wBAACS,YAAAA;QAAWC,YAAW;QAAUC,WAAU;QAAaC,UAAQ;QAC7DrB,UAAAA;;;;AAIT;AAWA,IAAMsB,iBAAiB,CAACzB,UAAAA;AACtB,QAAM,EAAE0B,iBAAiBC,KAAI,IAAK3B;AAClC,aAAOY,wBAACS,YAAAA;IAAWE,WAAU;IAAcI,UAAAA,OAAOC,eAAeD,IAAQ,IAAA;;AAC3E;",
  "names": ["getDisplayName", "firstname", "lastname", "username", "email", "trim", "StageColumn", "props", "color", "STAGE_COLOR_DEFAULT", "name", "strapi_stage", "themeColorName", "getStageColorByHex", "_jsxs", "Flex", "alignItems", "gap", "maxWidth", "_jsx", "Box", "height", "background", "borderColor", "undefined", "hasRadius", "shrink", "width", "Typography", "fontWeight", "textColor", "ellipsis", "AssigneeColumn", "strapi_assignee", "user", "getDisplayName"]
}
