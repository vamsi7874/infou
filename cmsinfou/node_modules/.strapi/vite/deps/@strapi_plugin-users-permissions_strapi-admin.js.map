{
  "version": 3,
  "sources": ["../../../@strapi/plugin-users-permissions/admin/src/utils/prefixPluginTranslations.js", "../../../@strapi/plugin-users-permissions/admin/src/index.js"],
  "sourcesContent": ["const prefixPluginTranslations = (trad, pluginId) => {\n  if (!pluginId) {\n    throw new TypeError(\"pluginId can't be empty\");\n  }\n\n  return Object.keys(trad).reduce((acc, current) => {\n    acc[`${pluginId}.${current}`] = trad[current];\n\n    return acc;\n  }, {});\n};\n\nexport { prefixPluginTranslations };\n", "import { strapi as pkgStrapi } from '../../package.json';\n\nimport { PERMISSIONS } from './constants';\nimport getTrad from './utils/getTrad';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\nconst name = pkgStrapi.name;\n\nexport default {\n  register(app) {\n    // Create the plugin's settings section\n    app.createSettingSection(\n      {\n        id: 'users-permissions',\n        intlLabel: {\n          id: getTrad('Settings.section-label'),\n          defaultMessage: 'Users & Permissions plugin',\n        },\n      },\n      [\n        {\n          intlLabel: {\n            id: 'global.roles',\n            defaultMessage: 'Roles',\n          },\n          id: 'roles',\n          to: `users-permissions/roles`,\n          Component: () => import('./pages/Roles'),\n          permissions: PERMISSIONS.accessRoles,\n        },\n        {\n          intlLabel: {\n            id: getTrad('HeaderNav.link.providers'),\n            defaultMessage: 'Providers',\n          },\n          id: 'providers',\n          to: `users-permissions/providers`,\n          Component: () => import('./pages/Providers'),\n          permissions: PERMISSIONS.readProviders,\n        },\n        {\n          intlLabel: {\n            id: getTrad('HeaderNav.link.emailTemplates'),\n            defaultMessage: 'Email templates',\n          },\n          id: 'email-templates',\n          to: `users-permissions/email-templates`,\n          Component: () =>\n            import('./pages/EmailTemplates').then((mod) => ({\n              default: mod.ProtectedEmailTemplatesPage,\n            })),\n          permissions: PERMISSIONS.readEmailTemplates,\n        },\n        {\n          intlLabel: {\n            id: getTrad('HeaderNav.link.advancedSettings'),\n            defaultMessage: 'Advanced Settings',\n          },\n          id: 'advanced-settings',\n          to: `users-permissions/advanced-settings`,\n          Component: () =>\n            import('./pages/AdvancedSettings').then((mod) => ({\n              default: mod.ProtectedAdvancedSettingsPage,\n            })),\n          permissions: PERMISSIONS.readAdvancedSettings,\n        },\n      ]\n    );\n\n    app.registerPlugin({\n      id: 'users-permissions',\n      name,\n    });\n  },\n  bootstrap() {},\n  async registerTrads({ locales }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, 'users-permissions'),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n"],
  "mappings": ";;;;;;;;AAAMA,IAAAA,2BAA2B,CAACC,MAAMC,aAAAA;AAKtC,SAAOC,OAAOC,KAAKH,IAAAA,EAAMI,OAAO,CAACC,KAAKC,YAAAA;AACpCD,QAAI,GAAGJ,QAAAA,IAAYK,OAAQ,EAAC,IAAIN,KAAKM,OAAQ;AAE7C,WAAOD;EACT,GAAG,CAAA,CAAC;AACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA,IAAME,OAAOC,OAAUD;AAEvB,IAAA,QAAe;EACbE,SAASC,KAAG;AAEVA,QAAIC,qBACF;MACEC,IAAI;MACJC,WAAW;QACTD,IAAIE,QAAQ,wBAAA;QACZC,gBAAgB;MAClB;OAEF;MACE;QACEF,WAAW;UACTD,IAAI;UACJG,gBAAgB;QAClB;QACAH,IAAI;QACJI,IAAI;QACJC,WAAW,MAAM,OAAO,qBAAA;QACxBC,aAAaC,YAAYC;MAC3B;MACA;QACEP,WAAW;UACTD,IAAIE,QAAQ,0BAAA;UACZC,gBAAgB;QAClB;QACAH,IAAI;QACJI,IAAI;QACJC,WAAW,MAAM,OAAO,yBAAA;QACxBC,aAAaC,YAAYE;MAC3B;MACA;QACER,WAAW;UACTD,IAAIE,QAAQ,+BAAA;UACZC,gBAAgB;QAClB;QACAH,IAAI;QACJI,IAAI;QACJC,WAAW,MACT,OAAO,8BAAA,EAA0BK,KAAK,CAACC,SAAS;UAC9CC,SAASD,IAAIE;UACf;QACFP,aAAaC,YAAYO;MAC3B;MACA;QACEb,WAAW;UACTD,IAAIE,QAAQ,iCAAA;UACZC,gBAAgB;QAClB;QACAH,IAAI;QACJI,IAAI;QACJC,WAAW,MACT,OAAO,gCAAA,EAA4BK,KAAK,CAACC,SAAS;UAChDC,SAASD,IAAII;UACf;QACFT,aAAaC,YAAYS;MAC3B;IACD,CAAA;AAGHlB,QAAImB,eAAe;MACjBjB,IAAI;MACJL;IACF,CAAA;EACF;EACAuB,YAAa;EAAA;EACb,MAAMC,cAAc,EAAEC,QAAO,GAAE;AAC7B,UAAMC,gBAAgB,MAAMC,QAAQC,IAClCH,QAAQI,IAAI,CAACC,WAAAA;AACX,aAAO,kCAAO,kBAAkBA,MAAO,OAAM,EAC1Cf,KAAK,CAAC,EAAEE,SAASc,KAAI,MAAE;AACtB,eAAO;UACLA,MAAMC,yBAAyBD,MAAM,mBAAA;UACrCD;QACF;MACF,CAAA,EACCG,MAAM,MAAA;AACL,eAAO;UACLF,MAAM,CAAA;UACND;QACF;MACF,CAAA;IACJ,CAAA,CAAA;AAGF,WAAOH,QAAQO,QAAQR,aAAAA;EACzB;AACF;",
  "names": ["prefixPluginTranslations", "trad", "pluginId", "Object", "keys", "reduce", "acc", "current", "name", "pkgStrapi", "register", "app", "createSettingSection", "id", "intlLabel", "getTrad", "defaultMessage", "to", "Component", "permissions", "PERMISSIONS", "accessRoles", "readProviders", "then", "mod", "default", "ProtectedEmailTemplatesPage", "readEmailTemplates", "ProtectedAdvancedSettingsPage", "readAdvancedSettings", "registerPlugin", "bootstrap", "registerTrads", "locales", "importedTrads", "Promise", "all", "map", "locale", "data", "prefixPluginTranslations", "catch", "resolve"]
}
