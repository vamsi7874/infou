{"version":3,"file":"admin.js","sources":["../../../../../server/src/strategies/admin.ts"],"sourcesContent":["import type { Context } from 'koa';\nimport type { Modules } from '@strapi/types';\nimport { getService } from '../utils';\n\nconst getSessionManager = (): Modules.SessionManager.SessionManagerService | null => {\n  const manager = strapi.sessionManager as Modules.SessionManager.SessionManagerService | undefined;\n\n  return manager ?? null;\n};\n\n/** @type {import('.').AuthenticateFunction} */\nexport const authenticate = async (ctx: Context) => {\n  const { authorization } = ctx.request.header;\n\n  if (!authorization) {\n    return { authenticated: false };\n  }\n\n  const parts = authorization.split(/\\s+/);\n\n  if (parts[0].toLowerCase() !== 'bearer' || parts.length !== 2) {\n    return { authenticated: false };\n  }\n\n  const token = parts[1];\n\n  // Validate access tokens via session manager and require an active session\n  const manager = getSessionManager();\n  if (!manager) {\n    return { authenticated: false };\n  }\n\n  const result = manager('admin').validateAccessToken(token);\n  if (!result.isValid) {\n    return { authenticated: false };\n  }\n\n  const isActive = await manager('admin').isSessionActive(result.payload.sessionId);\n  if (!isActive) {\n    return { authenticated: false };\n  }\n\n  const rawUserId = result.payload.userId;\n  const numericUserId = Number(rawUserId);\n  const userId =\n    Number.isFinite(numericUserId) && String(numericUserId) === rawUserId\n      ? numericUserId\n      : rawUserId;\n\n  const user = await strapi.db\n    .query('admin::user')\n    .findOne({ where: { id: userId }, populate: ['roles'] });\n\n  if (!user || !(user.isActive === true)) {\n    return { authenticated: false };\n  }\n\n  const userAbility = await getService('permission').engine.generateUserAbility(user);\n\n  // TODO: use the ability from ctx.state.auth instead of\n  // ctx.state.userAbility, and remove the assign below\n  ctx.state.userAbility = userAbility;\n  ctx.state.user = user;\n\n  return {\n    authenticated: true,\n    credentials: user,\n    ability: userAbility,\n  };\n};\n\nexport const name = 'admin';\n\n/** @type {import('.').AuthStrategy} */\nexport default {\n  name,\n  authenticate,\n};\n"],"names":["getSessionManager","manager","strapi","sessionManager","authenticate","ctx","authorization","request","header","authenticated","parts","split","toLowerCase","length","token","result","validateAccessToken","isValid","isActive","isSessionActive","payload","sessionId","rawUserId","userId","numericUserId","Number","isFinite","String","user","db","query","findOne","where","id","populate","userAbility","getService","engine","generateUserAbility","state","credentials","ability","name"],"mappings":";;;;;;AAIA,MAAMA,iBAAoB,GAAA,IAAA;IACxB,MAAMC,OAAAA,GAAUC,OAAOC,cAAc;AAErC,IAAA,OAAOF,OAAW,IAAA,IAAA;AACpB,CAAA;AAEA,gDACaG,MAAAA,YAAAA,GAAe,OAAOC,GAAAA,GAAAA;AACjC,IAAA,MAAM,EAAEC,aAAa,EAAE,GAAGD,GAAIE,CAAAA,OAAO,CAACC,MAAM;AAE5C,IAAA,IAAI,CAACF,aAAe,EAAA;QAClB,OAAO;YAAEG,aAAe,EAAA;AAAM,SAAA;AAChC;IAEA,MAAMC,KAAAA,GAAQJ,aAAcK,CAAAA,KAAK,CAAC,KAAA,CAAA;IAElC,IAAID,KAAK,CAAC,CAAA,CAAE,CAACE,WAAW,OAAO,QAAYF,IAAAA,KAAAA,CAAMG,MAAM,KAAK,CAAG,EAAA;QAC7D,OAAO;YAAEJ,aAAe,EAAA;AAAM,SAAA;AAChC;IAEA,MAAMK,KAAAA,GAAQJ,KAAK,CAAC,CAAE,CAAA;;AAGtB,IAAA,MAAMT,OAAUD,GAAAA,iBAAAA,EAAAA;AAChB,IAAA,IAAI,CAACC,OAAS,EAAA;QACZ,OAAO;YAAEQ,aAAe,EAAA;AAAM,SAAA;AAChC;AAEA,IAAA,MAAMM,MAASd,GAAAA,OAAAA,CAAQ,OAASe,CAAAA,CAAAA,mBAAmB,CAACF,KAAAA,CAAAA;IACpD,IAAI,CAACC,MAAOE,CAAAA,OAAO,EAAE;QACnB,OAAO;YAAER,aAAe,EAAA;AAAM,SAAA;AAChC;IAEA,MAAMS,QAAAA,GAAW,MAAMjB,OAAQ,CAAA,OAAA,CAAA,CAASkB,eAAe,CAACJ,MAAAA,CAAOK,OAAO,CAACC,SAAS,CAAA;AAChF,IAAA,IAAI,CAACH,QAAU,EAAA;QACb,OAAO;YAAET,aAAe,EAAA;AAAM,SAAA;AAChC;AAEA,IAAA,MAAMa,SAAYP,GAAAA,MAAAA,CAAOK,OAAO,CAACG,MAAM;AACvC,IAAA,MAAMC,gBAAgBC,MAAOH,CAAAA,SAAAA,CAAAA;IAC7B,MAAMC,MAAAA,GACJE,OAAOC,QAAQ,CAACF,kBAAkBG,MAAOH,CAAAA,aAAAA,CAAAA,KAAmBF,YACxDE,aACAF,GAAAA,SAAAA;IAEN,MAAMM,IAAAA,GAAO,MAAM1B,MAAO2B,CAAAA,EAAE,CACzBC,KAAK,CAAC,aACNC,CAAAA,CAAAA,OAAO,CAAC;QAAEC,KAAO,EAAA;YAAEC,EAAIV,EAAAA;AAAO,SAAA;QAAGW,QAAU,EAAA;AAAC,YAAA;AAAQ;AAAC,KAAA,CAAA;IAExD,IAAI,CAACN,QAAQ,EAAEA,KAAKV,QAAQ,KAAK,IAAG,CAAI,EAAA;QACtC,OAAO;YAAET,aAAe,EAAA;AAAM,SAAA;AAChC;AAEA,IAAA,MAAM0B,cAAc,MAAMC,gBAAAA,CAAW,cAAcC,MAAM,CAACC,mBAAmB,CAACV,IAAAA,CAAAA;;;IAI9EvB,GAAIkC,CAAAA,KAAK,CAACJ,WAAW,GAAGA,WAAAA;IACxB9B,GAAIkC,CAAAA,KAAK,CAACX,IAAI,GAAGA,IAAAA;IAEjB,OAAO;QACLnB,aAAe,EAAA,IAAA;QACf+B,WAAaZ,EAAAA,IAAAA;QACba,OAASN,EAAAA;AACX,KAAA;AACF;AAEO,MAAMO,OAAO;AAEpB,wCACA,wBAAe;AACbA,IAAAA,IAAAA;AACAtC,IAAAA;AACF,CAAE;;;;;;"}