{"version":3,"file":"ApiTokensSteps.mjs","sources":["../../../../../../../admin/src/components/GuidedTour/Steps/ApiTokensSteps.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Box, Link } from '@strapi/design-system';\n\nimport { type CompletedActions } from '../Context';\nimport { type StepContentProps } from '../Tours';\nimport { GUIDED_TOUR_REQUIRED_ACTIONS } from '../utils/constants';\n\nimport { GotItAction, StepCount } from './Step';\n\n/* -------------------------------------------------------------------------------------------------\n * Step Components\n * -----------------------------------------------------------------------------------------------*/\n\nconst Introduction = ({ Step }: StepContentProps) => (\n  <Step.Root side=\"top\" sideOffset={32} withArrow={false}>\n    <Step.Title\n      id=\"tours.apiTokens.Introduction.title\"\n      defaultMessage=\"Last but not least, API tokens\"\n    />\n    <Step.Content\n      id=\"tours.apiTokens.Introduction.content\"\n      defaultMessage=\"Control API access with highly customizable permissions.\"\n    />\n    <Step.Actions showSkip />\n  </Step.Root>\n);\n\nconst ManageAPIToken = ({ Step }: StepContentProps) => (\n  <Step.Root side=\"bottom\" align=\"end\">\n    <Step.Title id=\"tours.apiTokens.ManageAPIToken.title\" defaultMessage=\"Manage an API token\" />\n    <Step.Content\n      id=\"tours.apiTokens.ManageAPIToken.content\"\n      defaultMessage='Click the \"Pencil\" icon to view and update an existing API token.'\n    />\n    <Step.Actions />\n  </Step.Root>\n);\n\nconst ViewAPIToken = ({ Step, dispatch }: StepContentProps) => (\n  <Step.Root side=\"bottom\" align=\"end\">\n    <Step.Title id=\"tours.apiTokens.ViewAPIToken.title\" defaultMessage=\"View API token\" />\n    <Step.Content\n      id=\"tours.apiTokens.ViewAPIToken.content\"\n      defaultMessage='Click the \"View token\" button to see your API token.'\n    />\n    <Step.Actions>\n      <StepCount tourName=\"apiTokens\" />\n      <GotItAction onClick={() => dispatch({ type: 'next_step', payload: 'apiTokens' })} />\n    </Step.Actions>\n  </Step.Root>\n);\n\nconst CopyAPIToken = ({ Step, dispatch }: StepContentProps) => (\n  <Step.Root side=\"bottom\" align=\"start\" sideOffset={-5}>\n    <Step.Title id=\"tours.apiTokens.CopyAPIToken.title\" defaultMessage=\"Copy your new API token\" />\n    <Step.Content\n      id=\"tours.apiTokens.CopyAPIToken.content\"\n      defaultMessage=\"Copy your API token\"\n      values={{\n        spacer: <Box paddingTop={2} />,\n        a: (msg: React.ReactNode) => (\n          <Link isExternal href=\"https://docs.strapi.io/cms/features/api-tokens#usage\">\n            {msg}\n          </Link>\n        ),\n      }}\n    />\n    <Step.Actions>\n      <StepCount tourName=\"apiTokens\" />\n      <GotItAction onClick={() => dispatch({ type: 'next_step', payload: 'apiTokens' })} />\n    </Step.Actions>\n  </Step.Root>\n);\n\nconst Finish = ({ Step }: StepContentProps) => (\n  <Step.Root side=\"right\" align=\"start\">\n    <Step.Title\n      id=\"tours.apiTokens.FinalStep.title\"\n      defaultMessage=\"Congratulations, it's time to deploy your application!\"\n    />\n    <Step.Content\n      id=\"tours.apiTokens.FinalStep.content\"\n      defaultMessage=\"Your application is ready to be deployed and its content to be shared with the world!\"\n    />\n    <Step.Actions showPrevious={false} showStepCount={false} to=\"/\" />\n  </Step.Root>\n);\n\n/* -------------------------------------------------------------------------------------------------\n * Steps\n * -----------------------------------------------------------------------------------------------*/\n\nexport const apiTokensSteps = [\n  {\n    name: 'Introduction',\n    content: Introduction,\n  },\n  {\n    name: 'ManageAPIToken',\n    content: ManageAPIToken,\n  },\n  {\n    name: 'ViewAPIToken',\n    content: ViewAPIToken,\n  },\n  {\n    name: 'CopyAPIToken',\n    content: CopyAPIToken,\n  },\n  {\n    name: 'Finish',\n    content: Finish,\n    excludeFromStepCount: true,\n    when: (completedActions: CompletedActions) =>\n      completedActions.includes(GUIDED_TOUR_REQUIRED_ACTIONS.apiTokens.copyToken),\n  },\n] as const;\n"],"names":["Introduction","Step","_jsxs","Root","side","sideOffset","withArrow","_jsx","Title","id","defaultMessage","Content","Actions","showSkip","ManageAPIToken","align","ViewAPIToken","dispatch","StepCount","tourName","GotItAction","onClick","type","payload","CopyAPIToken","values","spacer","Box","paddingTop","a","msg","Link","isExternal","href","Finish","showPrevious","showStepCount","to","apiTokensSteps","name","content","excludeFromStepCount","when","completedActions","includes","GUIDED_TOUR_REQUIRED_ACTIONS","apiTokens","copyToken"],"mappings":"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"}