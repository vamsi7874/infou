{"version":3,"file":"Widgets.mjs","sources":["../../../../../admin/src/components/Widgets.tsx"],"sourcesContent":["import { useAuth, useTracking } from '@strapi/admin/strapi-admin';\nimport { Avatar, Badge, Box, Flex, Typography } from '@strapi/design-system';\nimport { Earth, Images, User, Key, Files, Layout, Graph, Webhooks } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useGetCountDocumentsQuery, useGetKeyStatisticsQuery } from '../services/homepage';\nimport { getDisplayName, getInitials } from '../utils/users';\n\nimport { Widget } from './WidgetHelpers';\n\n/* -------------------------------------------------------------------------------------------------\n * ProfileWidget\n * -----------------------------------------------------------------------------------------------*/\n\nconst DisplayNameTypography = styled(Typography)`\n  font-size: 2.4rem;\n`;\n\nconst ProfileWidget = () => {\n  const user = useAuth('User', (state) => state.user);\n  const userDisplayName = getDisplayName(user);\n  const initials = getInitials(user);\n\n  return (\n    <Flex direction=\"column\" gap={3} height=\"100%\" justifyContent=\"center\">\n      <Avatar.Item delayMs={0} fallback={initials} />\n      {userDisplayName && (\n        <DisplayNameTypography fontWeight=\"bold\" textTransform=\"none\" textAlign=\"center\">\n          {userDisplayName}\n        </DisplayNameTypography>\n      )}\n      {user?.email && (\n        <Typography variant=\"omega\" textColor=\"neutral600\">\n          {user?.email}\n        </Typography>\n      )}\n      {user?.roles?.length && (\n        <Flex marginTop={2} gap={1} wrap=\"wrap\">\n          {user?.roles?.map((role) => <Badge key={role.id}>{role.name}</Badge>)}\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Key Statistics\n * -----------------------------------------------------------------------------------------------*/\nconst Grid = styled(Box)`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0;\n  border: 1px solid ${({ theme }) => theme.colors.neutral200};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  overflow: hidden;\n`;\n\nconst GridCell = styled(Box)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.neutral200};\n  border-right: 1px solid ${({ theme }) => theme.colors.neutral200};\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n\n  &:nth-child(2n) {\n    border-right: none;\n  }\n  &:nth-last-child(-n + 2) {\n    border-bottom: none;\n  }\n`;\n\nconst formatNumber = ({ locale, number }: { locale: string; number: number }) => {\n  return new Intl.NumberFormat(locale, {\n    notation: 'compact',\n    maximumFractionDigits: 1,\n  }).format(number);\n};\n\nconst LinkCell = styled(Link)`\n  text-decoration: none;\n  padding: ${({ theme }) => theme.spaces[3]};\n`;\n\nconst KeyStatisticsWidget = () => {\n  const { trackUsage } = useTracking();\n  const { formatMessage, locale } = useIntl();\n  const { data: countDocuments, isLoading: isLoadingCountDocuments } = useGetCountDocumentsQuery();\n  const { data: countKeyStatistics, isLoading: isLoadingKeyStatistics } =\n    useGetKeyStatisticsQuery();\n\n  if (isLoadingKeyStatistics || isLoadingCountDocuments) {\n    return <Widget.Loading />;\n  }\n\n  if (!countKeyStatistics || !countDocuments) {\n    return <Widget.Error />;\n  }\n\n  const keyStatisticsList = {\n    entries: {\n      label: {\n        id: 'widget.key-statistics.list.entries',\n        defaultMessage: 'Entries',\n      },\n      icon: {\n        component: <Files />,\n        background: 'primary100',\n        color: 'primary600',\n      },\n      link: '/content-manager',\n    },\n    assets: {\n      label: {\n        id: 'widget.key-statistics.list.assets',\n        defaultMessage: 'Assets',\n      },\n      icon: {\n        component: <Images />,\n        background: 'warning100',\n        color: 'warning600',\n      },\n      link: '/plugins/upload',\n    },\n    contentTypes: {\n      label: {\n        id: 'widget.key-statistics.list.contentTypes',\n        defaultMessage: 'Content-Types',\n      },\n      icon: {\n        component: <Layout />,\n        background: 'secondary100',\n        color: 'secondary600',\n      },\n      link: '/plugins/content-type-builder',\n    },\n    components: {\n      label: {\n        id: 'widget.key-statistics.list.components',\n        defaultMessage: 'Components',\n      },\n      icon: {\n        component: <Graph />,\n        background: 'alternative100',\n        color: 'alternative600',\n      },\n      link: '/plugins/content-type-builder',\n    },\n    locales: {\n      label: {\n        id: 'widget.key-statistics.list.locales',\n        defaultMessage: 'Locales',\n      },\n      icon: {\n        component: <Earth />,\n        background: 'success100',\n        color: 'success600',\n      },\n      link: '/settings/internationalization',\n    },\n    admins: {\n      label: {\n        id: 'widget.key-statistics.list.admins',\n        defaultMessage: 'Admins',\n      },\n      icon: {\n        component: <User />,\n        background: 'danger100',\n        color: 'danger600',\n      },\n      link: '/settings/users?pageSize=10&page=1&sort=firstname',\n    },\n    webhooks: {\n      label: {\n        id: 'widget.key-statistics.list.webhooks',\n        defaultMessage: 'Webhooks',\n      },\n      icon: {\n        component: <Webhooks />,\n        background: 'alternative100',\n        color: 'alternative600',\n      },\n      link: '/settings/webhooks',\n    },\n    apiTokens: {\n      label: {\n        id: 'widget.key-statistics.list.apiTokens',\n        defaultMessage: 'API Tokens',\n      },\n      icon: {\n        component: <Key />,\n        background: 'neutral100',\n        color: 'neutral600',\n      },\n      link: '/settings/api-tokens?sort=name:ASC',\n    },\n  };\n\n  const { draft, published, modified } = countDocuments ?? {\n    draft: 0,\n    published: 0,\n    modified: 0,\n  };\n\n  const totalCountEntries = draft + published + modified;\n\n  return (\n    <Grid>\n      {Object.entries(keyStatisticsList).map(([key, item]) => {\n        const value = countKeyStatistics?.[key as keyof typeof countKeyStatistics];\n        return (\n          value !== null && (\n            <GridCell\n              as={LinkCell}\n              to={item.link}\n              key={`key-statistics-${key}`}\n              data-testid={`stat-${key}`}\n              onClick={() => trackUsage('didOpenKeyStatisticsWidgetLink', { itemKey: key })}\n            >\n              <Flex alignItems=\"center\" gap={2}>\n                <Flex\n                  padding={2}\n                  borderRadius={1}\n                  background={item.icon.background}\n                  color={item.icon.color}\n                >\n                  {item.icon.component}\n                </Flex>\n                <Flex direction=\"column\" alignItems=\"flex-start\">\n                  <Typography variant=\"pi\" fontWeight=\"bold\" textColor=\"neutral500\">\n                    {formatMessage(item.label)}\n                  </Typography>\n                  <Typography variant=\"omega\" fontWeight=\"bold\" textColor=\"neutral800\">\n                    {formatNumber({\n                      locale,\n                      number: key === 'entries' ? totalCountEntries : value,\n                    })}\n                  </Typography>\n                </Flex>\n              </Flex>\n            </GridCell>\n          )\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport { ProfileWidget, KeyStatisticsWidget };\n"],"names":["DisplayNameTypography","styled","Typography","ProfileWidget","user","useAuth","state","userDisplayName","getDisplayName","initials","getInitials","_jsxs","Flex","direction","gap","height","justifyContent","_jsx","Avatar","Item","delayMs","fallback","fontWeight","textTransform","textAlign","email","variant","textColor","roles","length","marginTop","wrap","map","role","Badge","name","id","Grid","Box","theme","colors","neutral200","borderRadius","GridCell","formatNumber","locale","number","Intl","NumberFormat","notation","maximumFractionDigits","format","LinkCell","Link","spaces","KeyStatisticsWidget","trackUsage","useTracking","formatMessage","useIntl","data","countDocuments","isLoading","isLoadingCountDocuments","useGetCountDocumentsQuery","countKeyStatistics","isLoadingKeyStatistics","useGetKeyStatisticsQuery","Widget","Loading","Error","keyStatisticsList","entries","label","defaultMessage","icon","component","Files","background","color","link","assets","Images","contentTypes","Layout","components","Graph","locales","Earth","admins","User","webhooks","Webhooks","apiTokens","Key","draft","published","modified","totalCountEntries","Object","key","item","value","as","to","data-testid","onClick","itemKey","alignItems","padding"],"mappings":"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"}