{"version":3,"file":"Widgets.js","sources":["../../../../../../admin/src/core/apis/Widgets.ts"],"sourcesContent":["/* eslint-disable check-file/filename-naming-convention */\n\nimport invariant from 'invariant';\nimport { To } from 'react-router-dom';\n\nimport { Permission } from '../../../../shared/contracts/shared';\n\nimport type { Internal, Utils } from '@strapi/types';\nimport type { MessageDescriptor } from 'react-intl';\n\ntype WidgetUID = Utils.String.Suffix<\n  | Internal.Namespace.WithSeparator<Internal.Namespace.Plugin>\n  | Internal.Namespace.WithSeparator<Internal.Namespace.Global>,\n  string\n>;\n\ntype WidgetArgs = {\n  icon?: typeof import('@strapi/icons').PuzzlePiece;\n  title: MessageDescriptor;\n  link?: {\n    label: MessageDescriptor;\n    href: To;\n  };\n  component: () => Promise<React.ComponentType>;\n  pluginId?: string;\n  id: string;\n  permissions?: Array<Pick<Permission, 'action'> & Partial<Omit<Permission, 'action'>>>;\n  roles?: string[];\n};\n\ntype WidgetWithUID = Omit<WidgetArgs, 'id' | 'pluginId'> & { uid: WidgetUID };\n\ntype DescriptionReducer = (prev: WidgetArgs[]) => WidgetArgs[];\n\nclass Widgets {\n  widgets: WidgetArgs[];\n\n  constructor() {\n    this.widgets = [];\n  }\n\n  private generateUid = (widget: WidgetArgs): WidgetUID => {\n    return widget.pluginId ? `plugin::${widget.pluginId}.${widget.id}` : `global::${widget.id}`;\n  };\n\n  private checkWidgets = (widgets: WidgetArgs[]): void => {\n    widgets.forEach((widget) => {\n      invariant(widget.id, 'An id must be provided');\n      invariant(widget.component, 'A component must be provided');\n      invariant(widget.title, 'A title must be provided');\n      invariant(widget.icon, 'An icon must be provided');\n    });\n  };\n\n  register(widgets: WidgetArgs | WidgetArgs[] | DescriptionReducer) {\n    if (Array.isArray(widgets)) {\n      this.checkWidgets(widgets);\n      this.widgets = [...this.widgets, ...widgets];\n    } else if (typeof widgets === 'function') {\n      const newWidgets = widgets(this.widgets);\n      this.checkWidgets(newWidgets);\n      this.widgets = newWidgets;\n    } else if (typeof widgets === 'object') {\n      this.checkWidgets([widgets]);\n      this.widgets.push(widgets);\n    } else {\n      throw new Error('Expected widgets to be an array or a reducer function');\n    }\n  }\n\n  getAll = (): WidgetWithUID[] => {\n    return this.widgets.map((widget) => {\n      const { id, pluginId, ...widgetBase } = widget;\n      return {\n        ...widgetBase,\n        uid: this.generateUid(widget),\n      };\n    });\n  };\n}\n\nexport { Widgets };\nexport type { WidgetArgs, WidgetWithUID };\n"],"names":["Widgets","register","widgets","Array","isArray","checkWidgets","newWidgets","push","Error","constructor","generateUid","widget","pluginId","id","forEach","invariant","component","title","icon","getAll","map","widgetBase","uid"],"mappings":";;;;AAkCA,MAAMA,OAAAA,CAAAA;AAoBJC,IAAAA,QAAAA,CAASC,OAAuD,EAAE;QAChE,IAAIC,KAAAA,CAAMC,OAAO,CAACF,OAAU,CAAA,EAAA;YAC1B,IAAI,CAACG,YAAY,CAACH,OAAAA,CAAAA;YAClB,IAAI,CAACA,OAAO,GAAG;AAAI,gBAAA,GAAA,IAAI,CAACA,OAAO;AAAKA,gBAAAA,GAAAA;AAAQ,aAAA;SACvC,MAAA,IAAI,OAAOA,OAAAA,KAAY,UAAY,EAAA;AACxC,YAAA,MAAMI,UAAaJ,GAAAA,OAAAA,CAAQ,IAAI,CAACA,OAAO,CAAA;YACvC,IAAI,CAACG,YAAY,CAACC,UAAAA,CAAAA;YAClB,IAAI,CAACJ,OAAO,GAAGI,UAAAA;SACV,MAAA,IAAI,OAAOJ,OAAAA,KAAY,QAAU,EAAA;YACtC,IAAI,CAACG,YAAY,CAAC;AAACH,gBAAAA;AAAQ,aAAA,CAAA;AAC3B,YAAA,IAAI,CAACA,OAAO,CAACK,IAAI,CAACL,OAAAA,CAAAA;SACb,MAAA;AACL,YAAA,MAAM,IAAIM,KAAM,CAAA,uDAAA,CAAA;AAClB;AACF;IA/BAC,WAAc,EAAA;AAINC,QAAAA,IAAAA,CAAAA,WAAAA,GAAc,CAACC,MAAAA,GAAAA;YACrB,OAAOA,MAAAA,CAAOC,QAAQ,GAAG,CAAC,QAAQ,EAAED,MAAAA,CAAOC,QAAQ,CAAC,CAAC,EAAED,OAAOE,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAEF,MAAAA,CAAOE,EAAE,CAAC,CAAC;AAC7F,SAAA;AAEQR,QAAAA,IAAAA,CAAAA,YAAAA,GAAe,CAACH,OAAAA,GAAAA;YACtBA,OAAQY,CAAAA,OAAO,CAAC,CAACH,MAAAA,GAAAA;gBACfI,SAAUJ,CAAAA,MAAAA,CAAOE,EAAE,EAAE,wBAAA,CAAA;gBACrBE,SAAUJ,CAAAA,MAAAA,CAAOK,SAAS,EAAE,8BAAA,CAAA;gBAC5BD,SAAUJ,CAAAA,MAAAA,CAAOM,KAAK,EAAE,0BAAA,CAAA;gBACxBF,SAAUJ,CAAAA,MAAAA,CAAOO,IAAI,EAAE,0BAAA,CAAA;AACzB,aAAA,CAAA;AACF,SAAA;aAkBAC,MAAS,GAAA,IAAA;AACP,YAAA,OAAO,IAAI,CAACjB,OAAO,CAACkB,GAAG,CAAC,CAACT,MAAAA,GAAAA;AACvB,gBAAA,MAAM,EAAEE,EAAE,EAAED,QAAQ,EAAE,GAAGS,YAAY,GAAGV,MAAAA;gBACxC,OAAO;AACL,oBAAA,GAAGU,UAAU;oBACbC,GAAK,EAAA,IAAI,CAACZ,WAAW,CAACC,MAAAA;AACxB,iBAAA;AACF,aAAA,CAAA;AACF,SAAA;QAxCE,IAAI,CAACT,OAAO,GAAG,EAAE;AACnB;AAwCF;;;;"}