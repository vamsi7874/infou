{"version":3,"file":"ContentManagerSteps.mjs","sources":["../../../../../../../admin/src/components/GuidedTour/Steps/ContentManagerSteps.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\n\nimport { CompletedActions, useGuidedTour } from '../Context';\nimport { tours, type StepContentProps } from '../Tours';\nimport { GUIDED_TOUR_REQUIRED_ACTIONS } from '../utils/constants';\n\nimport { DefaultActions, DefaultActionsProps, GotItAction, StepCount } from './Step';\n\nconst ContentManagerActions = ({\n  isActionRequired = false,\n  ...props\n}: Omit<DefaultActionsProps, 'tourName'> & {\n  isActionRequired?: boolean;\n}) => {\n  const { collectionType } = useParams();\n\n  const state = useGuidedTour('ContentManagerActions', (s) => s.state);\n  const dispatch = useGuidedTour('ContentManagerActions', (s) => s.dispatch);\n\n  const isSingleType = collectionType === 'single-types';\n\n  const currentStepOffset = state.tours.contentManager.currentStep + 1;\n  const displayedCurrentStep = (() => {\n    if (isSingleType && currentStepOffset > collectionTypeSpecificSteps.length) {\n      return currentStepOffset - collectionTypeSpecificSteps.length;\n    }\n\n    return currentStepOffset;\n  })();\n\n  // For single types we subtract all contentTypeSpecificSteps\n  const displayedTourLength = isSingleType\n    ? tours.contentManager._meta.displayedStepCount - collectionTypeSpecificSteps.length\n    : tours.contentManager._meta.displayedStepCount;\n\n  const handleNextStep = () => {\n    if (isSingleType && state.tours.contentManager.currentStep === 0) {\n      // The tours diverge after the first step, on next click skip all the collection type specific steps\n      dispatch({\n        type: 'go_to_step',\n        payload: { tourName: 'contentManager', step: collectionTypeSpecificSteps.length + 1 },\n      });\n    } else {\n      dispatch({\n        type: 'next_step',\n        payload: 'contentManager',\n      });\n    }\n  };\n\n  const handlePreviousStep = () => {\n    if (\n      isSingleType &&\n      // Check the currentStep is the step after the collection type specific steps\n      state.tours.contentManager.currentStep === collectionTypeSpecificSteps.length + 1\n    ) {\n      dispatch({\n        type: 'go_to_step',\n        payload: {\n          tourName: 'contentManager',\n          // Go to the step just before the collection type specific steps\n          step: state.tours.contentManager.currentStep - collectionTypeSpecificSteps.length - 1,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'previous_step',\n        payload: 'contentManager',\n      });\n    }\n  };\n\n  if (isActionRequired) {\n    return (\n      <>\n        <StepCount\n          tourName=\"contentManager\"\n          displayedCurrentStep={displayedCurrentStep}\n          displayedTourLength={displayedTourLength}\n        />\n        <GotItAction onClick={handleNextStep} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <StepCount\n        tourName=\"contentManager\"\n        displayedCurrentStep={displayedCurrentStep}\n        displayedTourLength={displayedTourLength}\n      />\n      <DefaultActions\n        tourName=\"contentManager\"\n        onNextStep={handleNextStep}\n        onPreviousStep={handlePreviousStep}\n        {...props}\n      />\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Step Components\n * -----------------------------------------------------------------------------------------------*/\n\nconst Introduction = ({ Step }: StepContentProps) => {\n  return (\n    <Step.Root side=\"top\" sideOffset={33} withArrow={false}>\n      <Step.Title id=\"tours.contentManager.Introduction.title\" defaultMessage=\"Content manager\" />\n      <Step.Content\n        id=\"tours.contentManager.Introduction.content\"\n        defaultMessage=\"Create and manage content from your collection types and single types.\"\n      />\n      <Step.Actions>\n        <ContentManagerActions showSkip />\n      </Step.Actions>\n    </Step.Root>\n  );\n};\n\nconst CreateNewEntry = ({ Step }: StepContentProps) => {\n  return (\n    <Step.Root side=\"bottom\" align=\"end\">\n      <Step.Title\n        id=\"tours.contentManager.CreateNewEntry.title\"\n        defaultMessage=\"Create new entry\"\n      />\n      <Step.Content\n        id=\"tours.contentManager.CreateNewEntry.content\"\n        defaultMessage='Click the \"Create new entry\" button to create and publish a new entry for this collection type.'\n      />\n      <Step.Actions>\n        <ContentManagerActions showPrevious />\n      </Step.Actions>\n    </Step.Root>\n  );\n};\n\nconst Fields = ({ Step }: StepContentProps) => (\n  <Step.Root sideOffset={-12}>\n    <Step.Title id=\"tours.contentManager.Fields.title\" defaultMessage=\"Fields\" />\n    <Step.Content\n      id=\"tours.contentManager.Fields.content\"\n      defaultMessage=\"First, fill in the fields you created in the Content-Type Builder.\"\n    />\n    <Step.Actions>\n      <ContentManagerActions showPrevious />\n    </Step.Actions>\n  </Step.Root>\n);\n\nconst Publish = ({ Step }: StepContentProps) => (\n  <Step.Root side=\"left\" align=\"center\">\n    <Step.Title id=\"tours.contentManager.Publish.title\" defaultMessage=\"Publish\" />\n    <Step.Content\n      id=\"tours.contentManager.Publish.content\"\n      defaultMessage='Then click the \"Publish\" button to make your content available through the content API.'\n    />\n    <Step.Actions>\n      <ContentManagerActions isActionRequired />\n    </Step.Actions>\n  </Step.Root>\n);\n\nconst Finish = ({ Step }: StepContentProps) => (\n  <Step.Root side=\"right\">\n    <Step.Title\n      id=\"tours.contentManager.FinalStep.title\"\n      defaultMessage=\"Time to setup API tokens!\"\n    />\n    <Step.Content\n      id=\"tours.contentManager.FinalStep.content\"\n      defaultMessage=\"Now that you've created and published an entry, let's setup an API token to manage access to your content.\"\n    />\n    <Step.Actions showStepCount={false} showPrevious={false} to=\"/settings/api-tokens\" />\n  </Step.Root>\n);\n\n/* -------------------------------------------------------------------------------------------------\n * Steps\n * -----------------------------------------------------------------------------------------------*/\nconst collectionTypeSpecificSteps = [\n  {\n    name: 'CreateNewEntry',\n    content: CreateNewEntry,\n  },\n];\n\nexport const contentManagerSteps = [\n  {\n    name: 'Introduction',\n    when: (completedActions: CompletedActions) =>\n      completedActions.includes(GUIDED_TOUR_REQUIRED_ACTIONS.contentTypeBuilder.createSchema),\n    content: Introduction,\n  },\n  ...collectionTypeSpecificSteps,\n  {\n    name: 'Fields',\n    content: Fields,\n  },\n  {\n    name: 'Publish',\n    content: Publish,\n  },\n  {\n    name: 'Finish',\n    content: Finish,\n    excludeFromStepCount: true,\n    when: (completedActions: CompletedActions) =>\n      completedActions.includes(GUIDED_TOUR_REQUIRED_ACTIONS.contentManager.createContent),\n  },\n] as const;\n"],"names":["ContentManagerActions","isActionRequired","props","collectionType","useParams","state","useGuidedTour","s","dispatch","isSingleType","currentStepOffset","tours","contentManager","currentStep","displayedCurrentStep","collectionTypeSpecificSteps","length","displayedTourLength","_meta","displayedStepCount","handleNextStep","type","payload","tourName","step","handlePreviousStep","_jsxs","_Fragment","_jsx","StepCount","GotItAction","onClick","DefaultActions","onNextStep","onPreviousStep","Introduction","Step","Root","side","sideOffset","withArrow","Title","id","defaultMessage","Content","Actions","showSkip","CreateNewEntry","align","showPrevious","Fields","Publish","Finish","showStepCount","to","name","content","contentManagerSteps","when","completedActions","includes","GUIDED_TOUR_REQUIRED_ACTIONS","contentTypeBuilder","createSchema","excludeFromStepCount","createContent"],"mappings":"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"}