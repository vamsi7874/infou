{"version":3,"file":"path-item.mjs","sources":["../../../../../src/assemblers/document/path/path-item/path-item.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\nimport { type PartialContext, PathItemContextFactory } from '../../../../context';\n\nimport type { PathContext, PathItemContext, PathItemContextData } from '../../../../types';\n\nimport { createDebugger } from '../../../../utils';\n\nimport type { Assembler } from '../../..';\n\nconst debug = createDebugger('assembler:path-item');\n\nexport class PathItemAssembler implements Assembler.Path {\n  private readonly _assemblers: Assembler.PathItem[];\n\n  private readonly _contextFactory: PathItemContextFactory;\n\n  constructor(assemblers: Assembler.PathItem[], contextFactory: PathItemContextFactory) {\n    this._assemblers = assemblers;\n    this._contextFactory = contextFactory;\n  }\n\n  assemble(context: PathContext): void {\n    const { output, routes } = context;\n\n    const routesByPath = this._groupRoutesByPath(routes);\n\n    debug(\n      'grouping routes by path, found %O groups for %O routes',\n      Object.keys(routesByPath).length,\n      routes.length\n    );\n\n    for (const [path, routes] of Object.entries(routesByPath)) {\n      const openAPIPath = this._formatPath(path);\n\n      debug(\n        'assembling path item for %o (%o)...',\n        openAPIPath,\n        routes.map((route) => route.method).join(', ')\n      );\n\n      const pathItemContext = this._createPathItemContext(context);\n\n      for (const assembler of this._assemblers) {\n        debug('running assembler: %s...', assembler.constructor.name);\n\n        assembler.assemble(pathItemContext, path, routes);\n      }\n\n      output.data[openAPIPath] = pathItemContext.output.data;\n    }\n  }\n\n  private _createPathItemContext(context: PathContext): PathItemContext {\n    const initProps: PartialContext<PathItemContextData> = {\n      strapi: context.strapi,\n      registries: context.registries,\n      routes: context.routes,\n      timer: context.timer,\n    };\n\n    return this._contextFactory.create(initProps);\n  }\n\n  private _formatPath(path: string): string {\n    return path.replace(/:([^/]+)/g, '{$1}');\n  }\n\n  private _groupRoutesByPath(routes: Core.Route[]): Record<string, Core.Route[]> {\n    return routes.reduce<Record<string, Core.Route[]>>((acc, route) => {\n      const { path } = route;\n\n      if (!Array.isArray(acc[path])) {\n        acc[path] = [];\n      }\n\n      acc[path].push(route);\n\n      return acc;\n    }, {});\n  }\n}\n"],"names":["debug","createDebugger","PathItemAssembler","assemble","context","output","routes","routesByPath","_groupRoutesByPath","Object","keys","length","path","entries","openAPIPath","_formatPath","map","route","method","join","pathItemContext","_createPathItemContext","assembler","_assemblers","constructor","name","data","initProps","strapi","registries","timer","_contextFactory","create","replace","reduce","acc","Array","isArray","push","assemblers","contextFactory"],"mappings":";;;;AASA,MAAMA,QAAQC,cAAe,CAAA,qBAAA,CAAA;AAEtB,MAAMC,iBAAAA,CAAAA;AAUXC,IAAAA,QAAAA,CAASC,OAAoB,EAAQ;AACnC,QAAA,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,GAAGF,OAAAA;AAE3B,QAAA,MAAMG,YAAe,GAAA,IAAI,CAACC,kBAAkB,CAACF,MAAAA,CAAAA;QAE7CN,KACE,CAAA,wDAAA,EACAS,OAAOC,IAAI,CAACH,cAAcI,MAAM,EAChCL,OAAOK,MAAM,CAAA;QAGf,KAAK,MAAM,CAACC,IAAMN,EAAAA,MAAAA,CAAO,IAAIG,MAAOI,CAAAA,OAAO,CAACN,YAAe,CAAA,CAAA;AACzD,YAAA,MAAMO,WAAc,GAAA,IAAI,CAACC,WAAW,CAACH,IAAAA,CAAAA;YAErCZ,KACE,CAAA,qCAAA,EACAc,WACAR,EAAAA,MAAAA,CAAOU,GAAG,CAAC,CAACC,KAAAA,GAAUA,KAAMC,CAAAA,MAAM,CAAEC,CAAAA,IAAI,CAAC,IAAA,CAAA,CAAA;AAG3C,YAAA,MAAMC,eAAkB,GAAA,IAAI,CAACC,sBAAsB,CAACjB,OAAAA,CAAAA;AAEpD,YAAA,KAAK,MAAMkB,SAAAA,IAAa,IAAI,CAACC,WAAW,CAAE;AACxCvB,gBAAAA,KAAAA,CAAM,0BAA4BsB,EAAAA,SAAAA,CAAUE,WAAW,CAACC,IAAI,CAAA;gBAE5DH,SAAUnB,CAAAA,QAAQ,CAACiB,eAAAA,EAAiBR,IAAMN,EAAAA,MAAAA,CAAAA;AAC5C;AAEAD,YAAAA,MAAAA,CAAOqB,IAAI,CAACZ,WAAAA,CAAY,GAAGM,eAAgBf,CAAAA,MAAM,CAACqB,IAAI;AACxD;AACF;AAEQL,IAAAA,sBAAAA,CAAuBjB,OAAoB,EAAmB;AACpE,QAAA,MAAMuB,SAAiD,GAAA;AACrDC,YAAAA,MAAAA,EAAQxB,QAAQwB,MAAM;AACtBC,YAAAA,UAAAA,EAAYzB,QAAQyB,UAAU;AAC9BvB,YAAAA,MAAAA,EAAQF,QAAQE,MAAM;AACtBwB,YAAAA,KAAAA,EAAO1B,QAAQ0B;AACjB,SAAA;AAEA,QAAA,OAAO,IAAI,CAACC,eAAe,CAACC,MAAM,CAACL,SAAAA,CAAAA;AACrC;AAEQZ,IAAAA,WAAAA,CAAYH,IAAY,EAAU;QACxC,OAAOA,IAAAA,CAAKqB,OAAO,CAAC,WAAa,EAAA,MAAA,CAAA;AACnC;AAEQzB,IAAAA,kBAAAA,CAAmBF,MAAoB,EAAgC;AAC7E,QAAA,OAAOA,MAAO4B,CAAAA,MAAM,CAA+B,CAACC,GAAKlB,EAAAA,KAAAA,GAAAA;YACvD,MAAM,EAAEL,IAAI,EAAE,GAAGK,KAAAA;AAEjB,YAAA,IAAI,CAACmB,KAAMC,CAAAA,OAAO,CAACF,GAAG,CAACvB,KAAK,CAAG,EAAA;gBAC7BuB,GAAG,CAACvB,IAAK,CAAA,GAAG,EAAE;AAChB;AAEAuB,YAAAA,GAAG,CAACvB,IAAAA,CAAK,CAAC0B,IAAI,CAACrB,KAAAA,CAAAA;YAEf,OAAOkB,GAAAA;AACT,SAAA,EAAG,EAAC,CAAA;AACN;IAhEAX,WAAYe,CAAAA,UAAgC,EAAEC,cAAsC,CAAE;QACpF,IAAI,CAACjB,WAAW,GAAGgB,UAAAA;QACnB,IAAI,CAACR,eAAe,GAAGS,cAAAA;AACzB;AA8DF;;;;"}