{"version":3,"file":"body.js","sources":["../../../../../../src/assemblers/document/path/path-item/operation/body.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\nimport type { OpenAPIV3_1 } from 'openapi-types';\n\nimport type { OperationContext } from '../../../../../types';\nimport type { Assembler } from '../../../..';\n\nimport { zodToOpenAPI } from '../../../../../utils';\n\nexport class BodyAssembler implements Assembler.Operation {\n  assemble(context: OperationContext, route: Core.Route): void {\n    const { output } = context;\n    const { body } = route.request ?? {};\n\n    // If no `body` property is defined, we don't need to do anything\n    if (!body) {\n      return;\n    }\n\n    const content: Record<string, OpenAPIV3_1.MediaTypeObject> = {};\n\n    for (const [media, zodSchema] of Object.entries(body)) {\n      content[media] = {\n        schema: zodToOpenAPI(zodSchema) as any,\n      };\n    }\n\n    output.data.requestBody = { content };\n  }\n}\n"],"names":["BodyAssembler","assemble","context","route","output","body","request","content","media","zodSchema","Object","entries","schema","zodToOpenAPI","data","requestBody"],"mappings":";;;;;AAQO,MAAMA,aAAAA,CAAAA;IACXC,QAASC,CAAAA,OAAyB,EAAEC,KAAiB,EAAQ;QAC3D,MAAM,EAAEC,MAAM,EAAE,GAAGF,OAAAA;AACnB,QAAA,MAAM,EAAEG,IAAI,EAAE,GAAGF,KAAMG,CAAAA,OAAO,IAAI,EAAC;;AAGnC,QAAA,IAAI,CAACD,IAAM,EAAA;AACT,YAAA;AACF;AAEA,QAAA,MAAME,UAAuD,EAAC;QAE9D,KAAK,MAAM,CAACC,KAAOC,EAAAA,SAAAA,CAAU,IAAIC,MAAOC,CAAAA,OAAO,CAACN,IAAO,CAAA,CAAA;YACrDE,OAAO,CAACC,MAAM,GAAG;AACfI,gBAAAA,MAAAA,EAAQC,gBAAaJ,CAAAA,SAAAA;AACvB,aAAA;AACF;QAEAL,MAAOU,CAAAA,IAAI,CAACC,WAAW,GAAG;AAAER,YAAAA;AAAQ,SAAA;AACtC;AACF;;;;"}