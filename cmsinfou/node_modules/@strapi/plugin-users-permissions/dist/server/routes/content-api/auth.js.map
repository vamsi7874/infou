{"version":3,"file":"auth.js","sources":["../../../../server/routes/content-api/auth.js"],"sourcesContent":["'use strict';\n\nconst { UsersPermissionsRouteValidator } = require('./validation');\n\nmodule.exports = (strapi) => {\n  const validator = new UsersPermissionsRouteValidator(strapi);\n\n  return [\n    {\n      method: 'GET',\n      path: '/connect/(.*)',\n      handler: 'auth.connect',\n      config: {\n        middlewares: ['plugin::users-permissions.rateLimit'],\n        prefix: '',\n      },\n    },\n    {\n      method: 'POST',\n      path: '/auth/local',\n      handler: 'auth.callback',\n      config: {\n        middlewares: ['plugin::users-permissions.rateLimit'],\n        prefix: '',\n      },\n      request: {\n        body: { 'application/json': validator.loginBodySchema },\n      },\n      response: validator.authResponseSchema,\n    },\n    {\n      method: 'POST',\n      path: '/auth/local/register',\n      handler: 'auth.register',\n      config: {\n        middlewares: ['plugin::users-permissions.rateLimit'],\n        prefix: '',\n      },\n      request: {\n        body: { 'application/json': validator.registerBodySchema },\n      },\n      response: validator.authRegisterResponseSchema,\n    },\n    {\n      method: 'GET',\n      path: '/auth/:provider/callback',\n      handler: 'auth.callback',\n      config: {\n        prefix: '',\n      },\n      request: {\n        params: {\n          provider: validator.providerParam,\n        },\n      },\n      response: validator.authResponseSchema,\n    },\n    {\n      method: 'POST',\n      path: '/auth/forgot-password',\n      handler: 'auth.forgotPassword',\n      config: {\n        middlewares: ['plugin::users-permissions.rateLimit'],\n        prefix: '',\n      },\n      request: {\n        body: { 'application/json': validator.forgotPasswordBodySchema },\n      },\n      response: validator.forgotPasswordResponseSchema,\n    },\n    {\n      method: 'POST',\n      path: '/auth/reset-password',\n      handler: 'auth.resetPassword',\n      config: {\n        middlewares: ['plugin::users-permissions.rateLimit'],\n        prefix: '',\n      },\n      request: {\n        body: { 'application/json': validator.resetPasswordBodySchema },\n      },\n      response: validator.authResponseSchema,\n    },\n    {\n      method: 'GET',\n      path: '/auth/email-confirmation',\n      handler: 'auth.emailConfirmation',\n      config: {\n        prefix: '',\n      },\n    },\n    {\n      method: 'POST',\n      path: '/auth/send-email-confirmation',\n      handler: 'auth.sendEmailConfirmation',\n      config: {\n        prefix: '',\n      },\n      request: {\n        body: { 'application/json': validator.sendEmailConfirmationBodySchema },\n      },\n      response: validator.sendEmailConfirmationResponseSchema,\n    },\n    {\n      method: 'POST',\n      path: '/auth/change-password',\n      handler: 'auth.changePassword',\n      config: {\n        middlewares: ['plugin::users-permissions.rateLimit'],\n        prefix: '',\n      },\n      request: {\n        body: { 'application/json': validator.changePasswordBodySchema },\n      },\n      response: validator.authResponseSchema,\n    },\n    {\n      method: 'POST',\n      path: '/auth/refresh',\n      handler: 'auth.refresh',\n      config: { prefix: '' },\n    },\n    {\n      method: 'POST',\n      path: '/auth/logout',\n      handler: 'auth.logout',\n      config: { prefix: '' },\n    },\n  ];\n};\n"],"names":["UsersPermissionsRouteValidator","require$$0","auth","strapi","validator","method","path","handler","config","middlewares","prefix","request","body","loginBodySchema","response","authResponseSchema","registerBodySchema","authRegisterResponseSchema","params","provider","providerParam","forgotPasswordBodySchema","forgotPasswordResponseSchema","resetPasswordBodySchema","sendEmailConfirmationBodySchema","sendEmailConfirmationResponseSchema","changePasswordBodySchema"],"mappings":"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"}