{"version":3,"file":"user.js","sources":["../../../../server/routes/content-api/user.js"],"sourcesContent":["'use strict';\n\nconst z = require('zod/v4');\nconst { UsersPermissionsRouteValidator } = require('./validation');\n\nmodule.exports = (strapi) => {\n  const validator = new UsersPermissionsRouteValidator(strapi);\n\n  return [\n    {\n      method: 'GET',\n      path: '/users/count',\n      handler: 'user.count',\n      config: {\n        prefix: '',\n      },\n      request: {\n        query: {\n          filters: validator.filters.optional(),\n        },\n      },\n      response: z.number(),\n    },\n    {\n      method: 'GET',\n      path: '/users',\n      handler: 'user.find',\n      config: {\n        prefix: '',\n      },\n      request: {\n        query: {\n          fields: validator.queryFields.optional(),\n          populate: validator.queryPopulate.optional(),\n          sort: validator.querySort.optional(),\n          pagination: validator.pagination.optional(),\n          filters: validator.filters.optional(),\n        },\n      },\n      response: z.array(validator.userSchema),\n    },\n    {\n      method: 'GET',\n      path: '/users/me',\n      handler: 'user.me',\n      config: {\n        prefix: '',\n      },\n      request: {\n        query: {\n          fields: validator.queryFields.optional(),\n          populate: validator.queryPopulate.optional(),\n        },\n      },\n      response: validator.userSchema,\n    },\n    {\n      method: 'GET',\n      path: '/users/:id',\n      handler: 'user.findOne',\n      config: {\n        prefix: '',\n      },\n      request: {\n        params: {\n          id: validator.userIdParam,\n        },\n        query: {\n          fields: validator.queryFields.optional(),\n          populate: validator.queryPopulate.optional(),\n        },\n      },\n      response: validator.userSchema,\n    },\n    {\n      method: 'POST',\n      path: '/users',\n      handler: 'user.create',\n      config: {\n        prefix: '',\n      },\n      request: {\n        body: { 'application/json': validator.createUserBodySchema },\n      },\n      response: validator.userSchema,\n    },\n    {\n      method: 'PUT',\n      path: '/users/:id',\n      handler: 'user.update',\n      config: {\n        prefix: '',\n      },\n      request: {\n        params: {\n          id: validator.userIdParam,\n        },\n        body: { 'application/json': validator.updateUserBodySchema },\n      },\n      response: validator.userSchema,\n    },\n    {\n      method: 'DELETE',\n      path: '/users/:id',\n      handler: 'user.destroy',\n      config: {\n        prefix: '',\n      },\n      request: {\n        params: {\n          id: validator.userIdParam,\n        },\n      },\n      response: validator.userSchema,\n    },\n  ];\n};\n"],"names":["z","require$$0","UsersPermissionsRouteValidator","require$$1","user","strapi","validator","method","path","handler","config","prefix","request","query","filters","optional","response","number","fields","queryFields","populate","queryPopulate","sort","querySort","pagination","array","userSchema","params","id","userIdParam","body","createUserBodySchema","updateUserBodySchema"],"mappings":"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"}