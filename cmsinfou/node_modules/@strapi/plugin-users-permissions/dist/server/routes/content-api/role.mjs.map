{"version":3,"file":"role.mjs","sources":["../../../../server/routes/content-api/role.js"],"sourcesContent":["'use strict';\n\nconst { UsersPermissionsRouteValidator } = require('./validation');\n\nmodule.exports = (strapi) => {\n  const validator = new UsersPermissionsRouteValidator(strapi);\n\n  return [\n    {\n      method: 'GET',\n      path: '/roles/:id',\n      handler: 'role.findOne',\n      request: {\n        params: {\n          id: validator.roleIdParam,\n        },\n      },\n      response: validator.roleResponseSchema,\n    },\n    {\n      method: 'GET',\n      path: '/roles',\n      handler: 'role.find',\n      response: validator.rolesResponseSchema,\n    },\n    {\n      method: 'POST',\n      path: '/roles',\n      handler: 'role.createRole',\n      request: {\n        body: { 'application/json': validator.createRoleBodySchema },\n      },\n      response: validator.roleSuccessResponseSchema,\n    },\n    {\n      method: 'PUT',\n      path: '/roles/:role',\n      handler: 'role.updateRole',\n      request: {\n        params: {\n          role: validator.roleIdParam,\n        },\n        body: { 'application/json': validator.updateRoleBodySchema },\n      },\n      response: validator.roleSuccessResponseSchema,\n    },\n    {\n      method: 'DELETE',\n      path: '/roles/:role',\n      handler: 'role.deleteRole',\n      request: {\n        params: {\n          role: validator.roleIdParam,\n        },\n      },\n      response: validator.roleSuccessResponseSchema,\n    },\n  ];\n};\n"],"names":["UsersPermissionsRouteValidator","require$$0","role","strapi","validator","method","path","handler","request","params","id","roleIdParam","response","roleResponseSchema","rolesResponseSchema","body","createRoleBodySchema","roleSuccessResponseSchema","updateRoleBodySchema"],"mappings":";;;;;;;IAEA,MAAM,EAAEA,8BAA8B,EAAE,GAAGC,iBAAAA,EAAAA;AAE7BC,IAAAA,IAAAA,GAAG,CAACC,MAAAA,GAAAA;QAChB,MAAMC,SAAAA,GAAY,IAAIJ,8BAA+BG,CAAAA,MAAAA,CAAAA;QAErD,OAAO;AACL,YAAA;gBACEE,MAAQ,EAAA,KAAA;gBACRC,IAAM,EAAA,YAAA;gBACNC,OAAS,EAAA,cAAA;gBACTC,OAAS,EAAA;oBACPC,MAAQ,EAAA;AACNC,wBAAAA,EAAAA,EAAIN,UAAUO;AACf;AACF,iBAAA;AACDC,gBAAAA,QAAAA,EAAUR,UAAUS;AACrB,aAAA;AACD,YAAA;gBACER,MAAQ,EAAA,KAAA;gBACRC,IAAM,EAAA,QAAA;gBACNC,OAAS,EAAA,WAAA;AACTK,gBAAAA,QAAAA,EAAUR,UAAUU;AACrB,aAAA;AACD,YAAA;gBACET,MAAQ,EAAA,MAAA;gBACRC,IAAM,EAAA,QAAA;gBACNC,OAAS,EAAA,iBAAA;gBACTC,OAAS,EAAA;oBACPO,IAAM,EAAA;AAAE,wBAAA,kBAAA,EAAoBX,UAAUY;AAAsB;AAC7D,iBAAA;AACDJ,gBAAAA,QAAAA,EAAUR,UAAUa;AACrB,aAAA;AACD,YAAA;gBACEZ,MAAQ,EAAA,KAAA;gBACRC,IAAM,EAAA,cAAA;gBACNC,OAAS,EAAA,iBAAA;gBACTC,OAAS,EAAA;oBACPC,MAAQ,EAAA;AACNP,wBAAAA,IAAAA,EAAME,UAAUO;AACjB,qBAAA;oBACDI,IAAM,EAAA;AAAE,wBAAA,kBAAA,EAAoBX,UAAUc;AAAsB;AAC7D,iBAAA;AACDN,gBAAAA,QAAAA,EAAUR,UAAUa;AACrB,aAAA;AACD,YAAA;gBACEZ,MAAQ,EAAA,QAAA;gBACRC,IAAM,EAAA,cAAA;gBACNC,OAAS,EAAA,iBAAA;gBACTC,OAAS,EAAA;oBACPC,MAAQ,EAAA;AACNP,wBAAAA,IAAAA,EAAME,UAAUO;AACjB;AACF,iBAAA;AACDC,gBAAAA,QAAAA,EAAUR,UAAUa;AACrB;AACF,SAAA;AACH,KAAA;;;;;;"}