{"version":3,"file":"jwt.js","sources":["../../../server/services/jwt.js"],"sourcesContent":["'use strict';\n\n/**\n * Jwt.js service\n *\n * @description: A set of functions similar to controller's actions to avoid code duplication.\n */\n\nconst _ = require('lodash');\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = ({ strapi }) => ({\n  getToken(ctx) {\n    let token;\n\n    if (ctx.request && ctx.request.header && ctx.request.header.authorization) {\n      const parts = ctx.request.header.authorization.split(/\\s+/);\n\n      if (parts[0].toLowerCase() !== 'bearer' || parts.length !== 2) {\n        return null;\n      }\n\n      token = parts[1];\n    } else {\n      return null;\n    }\n\n    return this.verify(token);\n  },\n\n  issue(payload, jwtOptions = {}) {\n    const mode = strapi.config.get('plugin::users-permissions.jwtManagement', 'legacy-support');\n\n    if (mode === 'refresh') {\n      const userId = String(payload.id ?? payload.userId ?? '');\n      if (!userId) {\n        throw new Error('Cannot issue token: missing user id');\n      }\n\n      const issueRefreshToken = async () => {\n        const refresh = await strapi\n          .sessionManager('users-permissions')\n          .generateRefreshToken(userId, undefined, { type: 'refresh' });\n\n        const access = await strapi\n          .sessionManager('users-permissions')\n          .generateAccessToken(refresh.token);\n        if ('error' in access) {\n          throw new Error('Failed to generate access token');\n        }\n\n        return access.token;\n      };\n\n      return issueRefreshToken();\n    }\n\n    _.defaults(jwtOptions, strapi.config.get('plugin::users-permissions.jwt'));\n    return jwt.sign(\n      _.clone(payload.toJSON ? payload.toJSON() : payload),\n      strapi.config.get('plugin::users-permissions.jwtSecret'),\n      jwtOptions\n    );\n  },\n\n  async verify(token) {\n    const mode = strapi.config.get('plugin::users-permissions.jwtManagement', 'legacy-support');\n\n    if (mode === 'refresh') {\n      // Accept only access tokens minted by the SessionManager for UP\n      const result = strapi.sessionManager('users-permissions').validateAccessToken(token);\n      if (!result.isValid || result.payload.type !== 'access') {\n        throw new Error('Invalid token.');\n      }\n\n      const user = await strapi.db\n        .query('plugin::users-permissions.user')\n        .findOne({ where: { id: Number(result.payload.userId) || result.payload.userId } });\n      if (!user) {\n        throw new Error('Invalid token.');\n      }\n\n      return { id: user.id };\n    }\n\n    return new Promise((resolve, reject) => {\n      const jwtConfig = strapi.config.get('plugin::users-permissions.jwt', {});\n      const algorithms = jwtConfig && jwtConfig.algorithm ? [jwtConfig.algorithm] : undefined;\n\n      jwt.verify(\n        token,\n        strapi.config.get('plugin::users-permissions.jwtSecret'),\n        algorithms ? { algorithms } : {},\n        (err, tokenPayload = {}) => {\n          if (err) {\n            return reject(new Error('Invalid token.'));\n          }\n          resolve(tokenPayload);\n        }\n      );\n    });\n  },\n});\n"],"names":["_","require$$0","jwt","require$$1","jwt_1","strapi","getToken","ctx","token","request","header","authorization","parts","split","toLowerCase","length","verify","issue","payload","jwtOptions","mode","config","get","userId","String","id","Error","issueRefreshToken","refresh","sessionManager","generateRefreshToken","undefined","type","access","generateAccessToken","defaults","sign","clone","toJSON","result","validateAccessToken","isValid","user","db","query","findOne","where","Number","Promise","resolve","reject","jwtConfig","algorithms","algorithm","err","tokenPayload"],"mappings":"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"}