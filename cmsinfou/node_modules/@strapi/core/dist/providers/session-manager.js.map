{"version":3,"file":"session-manager.js","sources":["../../src/providers/session-manager.ts"],"sourcesContent":["import type { Algorithm } from 'jsonwebtoken';\nimport { defineProvider } from './provider';\nimport { createSessionManager } from '../services/session-manager';\n\ninterface AdminAuthConfig {\n  secret?: string;\n  options?: {\n    algorithm?: Algorithm;\n    [key: string]: unknown;\n  };\n}\n\nexport default defineProvider({\n  init(strapi) {\n    strapi.add('sessionManager', () =>\n      createSessionManager({\n        db: strapi.db,\n      })\n    );\n  },\n\n  async register(strapi) {\n    // Get JWT secret from admin auth settings (same as admin token service)\n    const adminAuth = strapi.config.get<AdminAuthConfig>('admin.auth', {});\n    const jwtSecret = adminAuth.secret;\n\n    if (!jwtSecret) {\n      throw new Error(\n        'Missing admin.auth.secret configuration. The SessionManager requires a JWT secret'\n      );\n    }\n  },\n});\n"],"names":["defineProvider","init","strapi","add","createSessionManager","db","register","adminAuth","config","get","jwtSecret","secret","Error"],"mappings":";;;;;AAYA,qBAAeA,uBAAe,CAAA;AAC5BC,IAAAA,IAAAA,CAAAA,CAAKC,MAAM,EAAA;AACTA,QAAAA,MAAAA,CAAOC,GAAG,CAAC,gBAAkB,EAAA,IAC3BC,qCAAqB,CAAA;AACnBC,gBAAAA,EAAAA,EAAIH,OAAOG;AACb,aAAA,CAAA,CAAA;AAEJ,KAAA;AAEA,IAAA,MAAMC,UAASJ,MAAM,EAAA;;AAEnB,QAAA,MAAMK,YAAYL,MAAOM,CAAAA,MAAM,CAACC,GAAG,CAAkB,cAAc,EAAC,CAAA;QACpE,MAAMC,SAAAA,GAAYH,UAAUI,MAAM;AAElC,QAAA,IAAI,CAACD,SAAW,EAAA;AACd,YAAA,MAAM,IAAIE,KACR,CAAA,mFAAA,CAAA;AAEJ;AACF;AACF,CAAG,CAAA;;;;"}