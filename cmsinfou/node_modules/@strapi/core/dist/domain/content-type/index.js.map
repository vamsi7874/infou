{"version":3,"file":"index.js","sources":["../../../src/domain/content-type/index.ts"],"sourcesContent":["import { cloneDeep } from 'lodash/fp';\nimport _ from 'lodash';\nimport { yup, contentTypes as contentTypesUtils } from '@strapi/utils';\nimport type { Schema } from '@strapi/types';\nimport { validateContentTypeDefinition } from './validator';\n\nexport type ContentTypeDefinition = {\n  schema: Schema.ContentType;\n  actions: Record<string, unknown>;\n  lifecycles: Record<string, unknown>;\n};\n\nconst {\n  CREATED_AT_ATTRIBUTE,\n  UPDATED_AT_ATTRIBUTE,\n  PUBLISHED_AT_ATTRIBUTE,\n  FIRST_PUBLISHED_AT_ATTRIBUTE,\n  CREATED_BY_ATTRIBUTE,\n  UPDATED_BY_ATTRIBUTE,\n} = contentTypesUtils.constants;\n\nconst createContentType = (uid: string, definition: ContentTypeDefinition) => {\n  try {\n    validateContentTypeDefinition(definition);\n  } catch (e) {\n    if (e instanceof yup.ValidationError) {\n      throw new Error(`Content Type Definition is invalid for ${uid}'.\\n${e.errors}`);\n    }\n\n    throw e;\n  }\n\n  const { schema, actions, lifecycles } = cloneDeep(definition);\n\n  // general info\n  Object.assign(schema, {\n    uid,\n    modelType: 'contentType',\n    kind: schema.kind || 'collectionType',\n    __schema__: pickSchema(definition.schema),\n    modelName: definition.schema.info.singularName,\n    actions,\n    lifecycles,\n  });\n\n  addTimestamps(schema);\n\n  // Published at is added regardless of draft and publish being enabled\n  // In case it is not enabled, value will be always published, and it will not contain a draft\n  addDraftAndPublish(schema);\n\n  addCreatorFields(schema);\n\n  addFirstPublishedAt(schema);\n\n  return schema;\n};\n\nconst addTimestamps = (schema: Schema.ContentType) => {\n  // attributes\n  Object.assign(schema.attributes, {\n    [CREATED_AT_ATTRIBUTE]: {\n      type: 'datetime',\n    },\n    // TODO: handle on edit set to new date\n    [UPDATED_AT_ATTRIBUTE]: {\n      type: 'datetime',\n    },\n  });\n};\n\nconst addDraftAndPublish = (schema: Schema.ContentType) => {\n  if (!_.has(schema, 'options.draftAndPublish')) {\n    _.set(schema, 'options.draftAndPublish', false); // Disabled by default\n  }\n\n  schema.attributes[PUBLISHED_AT_ATTRIBUTE] = {\n    type: 'datetime',\n    configurable: false,\n    writable: true,\n    visible: false,\n    default() {\n      return new Date();\n    },\n  };\n};\n\nconst addFirstPublishedAt = (schema: Schema.ContentType) => {\n  const isEnabled = contentTypesUtils.hasFirstPublishedAtField(schema);\n\n  // Note: As an expertimental feature, we are okay if this data is deleted if this feature is\n  // switched off. Once \"preserve_attributes\" come into play, this will be updated.\n  if (isEnabled) {\n    strapi.log.warn(`Experimental feature enabled: firstPublishedAt on ${schema.collectionName}`);\n    schema.attributes[FIRST_PUBLISHED_AT_ATTRIBUTE] = {\n      type: 'datetime',\n      configurable: false,\n      writable: true,\n      visible: false,\n      private: !isEnabled,\n    };\n  }\n};\n\nconst addCreatorFields = (schema: Schema.ContentType) => {\n  const isPrivate = !_.get(schema, 'options.populateCreatorFields', false);\n\n  schema.attributes[CREATED_BY_ATTRIBUTE] = {\n    type: 'relation',\n    relation: 'oneToOne',\n    target: 'admin::user',\n    configurable: false,\n    writable: false,\n    visible: false,\n    useJoinTable: false,\n    private: isPrivate,\n  };\n\n  schema.attributes[UPDATED_BY_ATTRIBUTE] = {\n    type: 'relation',\n    relation: 'oneToOne',\n    target: 'admin::user',\n    configurable: false,\n    writable: false,\n    visible: false,\n    useJoinTable: false,\n    private: isPrivate,\n  };\n};\n\nconst getGlobalId = (schema: Schema.ContentType, prefix?: string) => {\n  const modelName = schema.info.singularName;\n  const globalId = prefix ? `${prefix}-${modelName}` : modelName;\n\n  return schema.globalId || _.upperFirst(_.camelCase(globalId));\n};\n\nconst pickSchema = (model: Schema.ContentType) => {\n  const schema = _.cloneDeep(\n    _.pick(model, [\n      'connection',\n      'collectionName',\n      'info',\n      'options',\n      'pluginOptions',\n      'attributes',\n      'kind',\n    ])\n  );\n\n  schema.kind = model.kind || 'collectionType';\n  return schema;\n};\n\nexport { createContentType, getGlobalId };\n"],"names":["CREATED_AT_ATTRIBUTE","UPDATED_AT_ATTRIBUTE","PUBLISHED_AT_ATTRIBUTE","FIRST_PUBLISHED_AT_ATTRIBUTE","CREATED_BY_ATTRIBUTE","UPDATED_BY_ATTRIBUTE","contentTypesUtils","constants","createContentType","uid","definition","validateContentTypeDefinition","e","yup","ValidationError","Error","errors","schema","actions","lifecycles","cloneDeep","Object","assign","modelType","kind","__schema__","pickSchema","modelName","info","singularName","addTimestamps","addDraftAndPublish","addCreatorFields","addFirstPublishedAt","attributes","type","_","has","set","configurable","writable","visible","default","Date","isEnabled","hasFirstPublishedAtField","strapi","log","warn","collectionName","private","isPrivate","get","relation","target","useJoinTable","getGlobalId","prefix","globalId","upperFirst","camelCase","model","pick"],"mappings":"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"}